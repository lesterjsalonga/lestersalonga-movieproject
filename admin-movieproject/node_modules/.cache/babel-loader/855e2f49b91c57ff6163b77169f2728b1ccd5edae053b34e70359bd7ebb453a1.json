{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Photos\\\\Photos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext, useCallback, useRef } from 'react';\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\nimport './Photos.css';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Photos() {\n  _s();\n  const {\n    auth\n  } = useContext(AuthContext);\n  const [photoid, setPhotoId] = useState(undefined);\n  const urlRef = useRef();\n  const descriptionRef = useRef();\n  const [photos, setPhotos] = useState([]);\n  const [selectedphoto, setSelectedPhoto] = useState({});\n  const [tmdbMovieId, setTmdbMovieId] = useState(null);\n  const [importMessage, setImportMessage] = useState('');\n  let {\n    movieId\n  } = useParams();\n  const getAll = useCallback(movieId => {\n    axios({\n      method: 'get',\n      url: `/movies/${movieId}`,\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${auth.accessToken}`\n      }\n    }).then(response => {\n      setPhotos(response.data.photos);\n      setTmdbMovieId(response.data.tmdbId);\n    }).catch(error => {\n      console.error(\"Error fetching Photos:\", error.response.data);\n    });\n  }, [auth.accessToken]);\n  useEffect(() => {\n    getAll(movieId);\n  }, [movieId, getAll]);\n  const validateField = (fieldRef, fieldName) => {\n    if (!fieldRef.current.value.trim()) {\n      fieldRef.current.style.border = '2px solid red';\n      setTimeout(() => {\n        fieldRef.current.style.border = '1px solid #ccc';\n      }, 2000);\n      console.log(`${fieldName} cannot be empty.`);\n      return false;\n    }\n    return true;\n  };\n  const handlesave = async () => {\n    const validateFields = () => {\n      const isUrlValid = validateField(urlRef, \"URL\");\n      const isDescriptionValid = validateField(descriptionRef, \"Description\");\n      return isUrlValid && isDescriptionValid;\n    };\n    if (!validateFields()) {\n      return; // This stops if any validation fails\n    } else {\n      try {\n        const dataphoto = {\n          userId: auth.user.userId,\n          movieId: movieId,\n          url: selectedphoto.url,\n          description: selectedphoto.description\n        };\n        console.log(\"Sending data to backend:\", dataphoto);\n        await axios({\n          method: 'POST',\n          url: '/admin/photos',\n          data: dataphoto,\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        alert('Added Success');\n        setSelectedPhoto({});\n        getAll(movieId);\n      } catch (error) {\n        var _error$response;\n        console.log(\"Error Saving Photo\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      }\n    }\n  };\n  const handledelete = id => {\n    const isConfirm = window.confirm(\"Are you Sure to Delete this Photo?\");\n    if (isConfirm) {\n      axios({\n        method: 'delete',\n        url: `/photos/${id}`,\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      }).then(() => {\n        alert(\"Delete Success\");\n        getAll(movieId);\n      }).catch(err => {\n        console.log(\"Error Deleting Photo\", err);\n      });\n    }\n  };\n  const importPhotosFromTMDB = async () => {\n    if (!tmdbMovieId) {\n      setImportMessage('TMDB Movie ID not found');\n      setTimeout(() => setImportMessage(''), 3000);\n      return;\n    }\n    try {\n      const response = await axios({\n        method: 'get',\n        url: `https://api.themoviedb.org/3/movie/${tmdbMovieId}/images`,\n        headers: {\n          Accept: 'application/json',\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MGY0ZjFlMmNhODQ1ZjA3NWY5MmI5ZDRlMGY3ZTEwYiIsIm5iZiI6MTcyOTkyNjY3NC40NzIwOTksInN1YiI6IjY3MTM3ODRmNjUwMjQ4YjlkYjYxZTgxMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RRJNLOg8pmgYoomiCWKtwkw74T3ZtAs7ZScqxo1bzWg'\n        }\n      });\n      const importedBackdrops = response.data.backdrops || [];\n      const importedPosters = response.data.posters || [];\n      const allImages = [...importedBackdrops, ...importedPosters];\n      const importPromises = allImages.slice(0, 10).map(async image => {\n        const payload = {\n          userId: auth.user.userId,\n          movieId: movieId,\n          url: `https://image.tmdb.org/t/p/original/${image.file_path}`,\n          description: image.type || 'TMDB Image'\n        };\n        try {\n          await axios.post('/admin/photos', payload, {\n            headers: {\n              Authorization: `Bearer ${auth.accessToken}`\n            }\n          });\n        } catch (error) {\n          console.error(`Error importing photo:`, error);\n        }\n      });\n      await Promise.all(importPromises);\n\n      // Refresh photos list\n      getAll(movieId);\n      setImportMessage(`Successfully imported ${allImages.slice(0, 10).length} photos`);\n      setTimeout(() => {\n        setImportMessage('');\n      }, 3000);\n    } catch (error) {\n      console.error(\"Error importing photos:\", error);\n      setImportMessage('Failed to import photos');\n      setTimeout(() => {\n        setImportMessage('');\n      }, 3000);\n    }\n  };\n  const handleupdate = async id => {\n    const validateFields = () => {\n      switch (true) {\n        case !validateField(urlRef, \"URL\"):\n          return false;\n        default:\n          return true;\n      }\n    };\n    if (!validateFields()) {\n      return;\n    } else {\n      const isConfirm = window.confirm(\"Are you sure you want to update the photo?\");\n      if (isConfirm) {\n        const dataphoto = {\n          id: selectedphoto.id,\n          userId: selectedphoto.userId,\n          movieId: selectedphoto.movieId,\n          url: selectedphoto.url,\n          description: selectedphoto.description\n        };\n        try {\n          await axios({\n            method: 'patch',\n            url: `/photos/${id}`,\n            data: dataphoto,\n            headers: {\n              Accept: 'application/json',\n              Authorization: `Bearer ${auth.accessToken}`\n            }\n          });\n          alert('Updated Successfully!');\n          setSelectedPhoto({});\n          getAll(movieId);\n        } catch (error) {\n          if (error.response) {\n            alert(`Error updating photo: ${error.response.data.message || 'Unknown error'}`);\n          } else if (error.request) {\n            alert(\"No response received from server. Please try again later.\");\n          } else {\n            alert(\"An unexpected error occurred. Please try again.\");\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photo-box\",\n    children: [importMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"import-message\",\n      children: importMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Photo-View-Box\",\n      children: photos.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-display-photos\",\n        children: photos.map(photo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"delete-button\",\n              onClick: () => handledelete(photo.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"edit-button\",\n              onClick: () => setSelectedPhoto(photo),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: photo.url,\n            alt: photo.description,\n            className: \"image-photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: photo.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this)]\n        }, photo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-photos\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No Photos Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Search-Box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"import-button\",\n          type: \"button\",\n          onClick: importPhotosFromTMDB,\n          children: \"Import from TMDB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"URL:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: urlRef,\n            className: \"url-text-photo\",\n            value: selectedphoto.url || '',\n            onChange: e => setSelectedPhoto({\n              ...selectedphoto,\n              url: e.target.value\n            }),\n            placeholder: \"Enter Photo URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: descriptionRef,\n            className: \"description-text-photo\",\n            value: selectedphoto.description || '',\n            onChange: e => setSelectedPhoto({\n              ...selectedphoto,\n              description: e.target.value\n            }),\n            placeholder: \"Enter Photo Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-button\",\n            type: \"button\",\n            onClick: handlesave,\n            disabled: !selectedphoto.url || !selectedphoto.description,\n            children: \"Add Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), selectedphoto.id && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"update-button\",\n            type: \"button\",\n            onClick: () => handleupdate(selectedphoto.id),\n            children: \"Update Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n}\n_s(Photos, \"HmEO4GNM1gRbZjpC9LMtRqJDO+k=\", false, function () {\n  return [useParams];\n});\n_c = Photos;\nexport default Photos;\nvar _c;\n$RefreshReg$(_c, \"Photos\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useCallback","useRef","AuthContext","axios","useParams","jsxDEV","_jsxDEV","Photos","_s","auth","photoid","setPhotoId","undefined","urlRef","descriptionRef","photos","setPhotos","selectedphoto","setSelectedPhoto","tmdbMovieId","setTmdbMovieId","importMessage","setImportMessage","movieId","getAll","method","url","headers","Accept","Authorization","accessToken","then","response","data","tmdbId","catch","error","console","validateField","fieldRef","fieldName","current","value","trim","style","border","setTimeout","log","handlesave","validateFields","isUrlValid","isDescriptionValid","dataphoto","userId","user","description","alert","_error$response","message","handledelete","id","isConfirm","window","confirm","err","importPhotosFromTMDB","importedBackdrops","backdrops","importedPosters","posters","allImages","importPromises","slice","map","image","payload","file_path","type","post","Promise","all","length","handleupdate","request","className","children","fileName","_jsxFileName","lineNumber","columnNumber","photo","onClick","src","alt","ref","onChange","e","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Photos/Photos.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext, useCallback, useRef } from 'react';\r\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\r\nimport './Photos.css';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Photos() {\r\n  const { auth } = useContext(AuthContext);\r\n  const [photoid, setPhotoId] = useState(undefined);\r\n  const urlRef = useRef();\r\n  const descriptionRef = useRef();\r\n  const [photos, setPhotos] = useState([]);\r\n  const [selectedphoto, setSelectedPhoto] = useState({});\r\n  const [tmdbMovieId, setTmdbMovieId] = useState(null);\r\n  const [importMessage, setImportMessage] = useState('');\r\n  let { movieId } = useParams();\r\n\r\n  const getAll = useCallback((movieId) => {\r\n    axios({\r\n      method: 'get',\r\n      url: `/movies/${movieId}`,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        Authorization: `Bearer ${auth.accessToken}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setPhotos(response.data.photos);\r\n        setTmdbMovieId(response.data.tmdbId);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching Photos:\", error.response.data);\r\n      });\r\n  }, [auth.accessToken]);\r\n\r\n  useEffect(() => {\r\n    getAll(movieId);\r\n  }, [movieId, getAll]);\r\n\r\n  const validateField = (fieldRef, fieldName) => {\r\n    if (!fieldRef.current.value.trim()) {\r\n      fieldRef.current.style.border = '2px solid red';\r\n      setTimeout(() => {\r\n        fieldRef.current.style.border = '1px solid #ccc';\r\n      }, 2000);\r\n      console.log(`${fieldName} cannot be empty.`);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handlesave = async () => {\r\n    const validateFields = () => {\r\n      const isUrlValid = validateField(urlRef, \"URL\");\r\n      const isDescriptionValid = validateField(descriptionRef, \"Description\");\r\n\r\n      return isUrlValid && isDescriptionValid;\r\n    };\r\n\r\n    if (!validateFields()) {\r\n      return; // This stops if any validation fails\r\n    } else {\r\n      try {\r\n        const dataphoto = {\r\n          userId: auth.user.userId,\r\n          movieId: movieId,\r\n          url: selectedphoto.url,\r\n          description: selectedphoto.description,\r\n        };\r\n\r\n        console.log(\"Sending data to backend:\", dataphoto);\r\n\r\n        await axios({\r\n          method: 'POST',\r\n          url: '/admin/photos',\r\n          data: dataphoto,\r\n          headers: {\r\n            Authorization: `Bearer ${auth.accessToken}`,\r\n          },\r\n        });\r\n        alert('Added Success');\r\n        setSelectedPhoto({});\r\n        getAll(movieId);\r\n      } catch (error) {\r\n        console.log(\"Error Saving Photo\", error.response?.data || error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handledelete = (id) => {\r\n    const isConfirm = window.confirm(\"Are you Sure to Delete this Photo?\");\r\n    if (isConfirm) {\r\n      axios({\r\n        method: 'delete',\r\n        url: `/photos/${id}`,\r\n        headers: {\r\n          Authorization: `Bearer ${auth.accessToken}`,\r\n        },\r\n      }).then(() => {\r\n        alert(\"Delete Success\");\r\n        getAll(movieId);\r\n      }).catch((err) => {\r\n        console.log(\"Error Deleting Photo\", err);\r\n      });\r\n    }\r\n  };\r\n\r\n  const importPhotosFromTMDB = async () => {\r\n    if (!tmdbMovieId) {\r\n      setImportMessage('TMDB Movie ID not found');\r\n      setTimeout(() => setImportMessage(''), 3000);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios({\r\n        method: 'get',\r\n        url: `https://api.themoviedb.org/3/movie/${tmdbMovieId}/images`,\r\n        headers: {\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MGY0ZjFlMmNhODQ1ZjA3NWY5MmI5ZDRlMGY3ZTEwYiIsIm5iZiI6MTcyOTkyNjY3NC40NzIwOTksInN1YiI6IjY3MTM3ODRmNjUwMjQ4YjlkYjYxZTgxMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RRJNLOg8pmgYoomiCWKtwkw74T3ZtAs7ZScqxo1bzWg'\r\n        },\r\n      });\r\n\r\n      const importedBackdrops = response.data.backdrops || [];\r\n      const importedPosters = response.data.posters || [];\r\n      const allImages = [...importedBackdrops, ...importedPosters];\r\n\r\n      const importPromises = allImages.slice(0, 10).map(async (image) => {\r\n        const payload = {\r\n          userId: auth.user.userId,\r\n          movieId: movieId,\r\n          url: `https://image.tmdb.org/t/p/original/${image.file_path}`,\r\n          description: image.type || 'TMDB Image',\r\n        };\r\n\r\n        try {\r\n          await axios.post('/admin/photos', payload, {\r\n            headers: {\r\n              Authorization: `Bearer ${auth.accessToken}`,\r\n            },\r\n          });\r\n        } catch (error) {\r\n          console.error(`Error importing photo:`, error);\r\n        }\r\n      });\r\n\r\n      await Promise.all(importPromises);\r\n\r\n      // Refresh photos list\r\n      getAll(movieId);\r\n\r\n      setImportMessage(`Successfully imported ${allImages.slice(0, 10).length} photos`);\r\n      \r\n      setTimeout(() => {\r\n        setImportMessage('');\r\n      }, 3000);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error importing photos:\", error);\r\n      setImportMessage('Failed to import photos');\r\n      \r\n      setTimeout(() => {\r\n        setImportMessage('');\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const handleupdate = async (id) => {\r\n    const validateFields = () => {\r\n      switch (true) {\r\n        case !validateField(urlRef, \"URL\"):\r\n          return false;\r\n        default:\r\n          return true;\r\n      }\r\n    };\r\n\r\n    if (!validateFields()) {\r\n      return;\r\n    } else {\r\n      const isConfirm = window.confirm(\"Are you sure you want to update the photo?\");\r\n      if (isConfirm) {\r\n        const dataphoto = {\r\n          id: selectedphoto.id,\r\n          userId: selectedphoto.userId,\r\n          movieId: selectedphoto.movieId,\r\n          url: selectedphoto.url,\r\n          description: selectedphoto.description,\r\n        };\r\n\r\n        try {\r\n          await axios({\r\n            method: 'patch',\r\n            url: `/photos/${id}`,\r\n            data: dataphoto,\r\n            headers: {\r\n              Accept: 'application/json',\r\n              Authorization: `Bearer ${auth.accessToken}`,\r\n            },\r\n          });\r\n          alert('Updated Successfully!');\r\n          setSelectedPhoto({});\r\n          getAll(movieId);\r\n        } catch (error) {\r\n          if (error.response) {\r\n            alert(`Error updating photo: ${error.response.data.message || 'Unknown error'}`);\r\n          } else if (error.request) {\r\n            alert(\"No response received from server. Please try again later.\");\r\n          } else {\r\n            alert(\"An unexpected error occurred. Please try again.\");\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo-box\">\r\n      {importMessage && (\r\n        <div className=\"import-message\">\r\n          {importMessage}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"Photo-View-Box\">\r\n        {photos.length > 0 ? (\r\n          <div className=\"card-display-photos\">\r\n            {photos.map((photo) => (\r\n              <div key={photo.id} className=\"card\">\r\n                <div className=\"buttons-group\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"delete-button\"\r\n                    onClick={() => handledelete(photo.id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"edit-button\"\r\n                    onClick={() => setSelectedPhoto(photo)}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                </div>\r\n                <img src={photo.url} alt={photo.description} className=\"image-photos\" />\r\n                <div className=\"container\">\r\n                  <p>{photo.description}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"no-photos\">\r\n            <h3>No Photos Found</h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"Search-Box\">\r\n        <div className=\"search-box-btn\">\r\n          <button\r\n            className=\"import-button\"\r\n            type=\"button\"\r\n            onClick={importPhotosFromTMDB}\r\n          >\r\n            Import from TMDB\r\n          </button>\r\n        </div>\r\n        \r\n        <div className=\"input-container\">\r\n          <div className=\"input-group\">\r\n            <label>URL:</label>\r\n            <input\r\n              ref={urlRef}\r\n              className=\"url-text-photo\"\r\n              value={selectedphoto.url || ''}\r\n              onChange={(e) => setSelectedPhoto({ ...selectedphoto, url: e.target.value })}\r\n              placeholder=\"Enter Photo URL\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <label>Description:</label>\r\n            <input\r\n              ref={descriptionRef}\r\n              className=\"description-text-photo\"\r\n              value={selectedphoto.description || ''}\r\n              onChange={(e) => setSelectedPhoto({ ...selectedphoto, description: e.target.value })}\r\n              placeholder=\"Enter Photo Description\"\r\n            />\r\n          </div>\r\n          <div className=\"button-group\">\r\n            <button\r\n              className=\"save-button\"\r\n              type=\"button\"\r\n              onClick={handlesave}\r\n              disabled={!selectedphoto.url || !selectedphoto.description}\r\n            >\r\n              Add Photo\r\n            </button>\r\n            {selectedphoto.id && (\r\n              <button\r\n                className=\"update-button\"\r\n                type=\"button\"\r\n                onClick={() => handleupdate(selectedphoto.id)}\r\n              >\r\n                Update Photo\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Photos;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}