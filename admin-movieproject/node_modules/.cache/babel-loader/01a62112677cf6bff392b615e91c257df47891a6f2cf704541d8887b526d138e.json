{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Photos\\\\Photos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext, useCallback, useRef } from 'react';\nimport { AuthContext } from \"../../../../../utils/context/AuthToken\";\nimport './Photos.css';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Photos() {\n  _s();\n  const {\n    auth\n  } = useContext(AuthContext);\n  const [photoid, setPhotoId] = useState(undefined);\n  const urlRef = useRef();\n  const descriptionRef = useRef();\n  const [photos, setPhotos] = useState([]);\n  const [selectedphoto, setSelectedPhoto] = useState({});\n  let {\n    movieId\n  } = useParams();\n  const [isModalOpen, setIsModalOpen] = useState(false); // Modal visibility state\n\n  const getAll = useCallback(movieId => {\n    axios({\n      method: 'get',\n      url: `/movies/${movieId}`,\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${auth.accessToken}`\n      }\n    }).then(response => {\n      setPhotos(response.data.photos);\n    }).catch(error => {\n      console.error(\"Error fetching Photos:\", error.response.data);\n    });\n  }, [auth.accessToken]);\n  useEffect(() => {\n    getAll(movieId);\n  }, [movieId, getAll]);\n  const openModal = photo => {\n    setSelectedPhoto(photo);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  //This used for Importing Photos based on tmdbId from Movie\n  function importDataPhoto() {\n    axios({\n      method: 'get',\n      url: `https://api.themoviedb.org/3/movie/${movieId}/images`,\n      headers: {\n        Accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZjcwNmYyZDQwMDA0ZTUwYzhmOGUwZDg4MWNjMzMzMCIsIm5iZiI6MTcyOTMxMjYyNi4wMSwic3ViIjoiNjcxMzM3NzI2NTAyNDhiOWRiNjFkNzM4Iiwic2NvcGVzIjpbImFwaV9yZWFkIl0sInZlcnNpb24iOjF9.VZcreJYYoRCCaykTDCYoois31PY6f9grTjN1ifvV1yg' // Make sure to replace this with your actual API key\n      }\n    }).then(response => {\n      setSavePhotosImp(response.data.backdrops);\n      alert(`Total of ${response.data.backdrops.length} Photos are now Imported to Database`);\n      setTimeout(() => {\n        getAll(movieId);\n      }, 2000);\n    });\n  }\n\n  //Saving all Photo Imported to Database\n  async function setSavePhotosImp(photoImportData) {\n    await Promise.all(photoImportData.map(async datainfo => {\n      const dataphoto = {\n        userId: auth.user.userId,\n        movieId: movieId,\n        description: `Imported from TMDB Data`,\n        url: `https://image.tmdb.org/t/p/w500/${datainfo.file_path}`\n      };\n      console.log('Transfering import to Database', dataphoto);\n      try {\n        await axios.post('/admin/photos', dataphoto, {\n          headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n      } catch (error) {\n        console.error('Error of Importing:', error);\n      }\n    }));\n    console.log('Imported Success');\n  }\n  const validateField = (fieldRef, fieldName) => {\n    if (!fieldRef.current.value.trim()) {\n      fieldRef.current.style.border = '2px solid red';\n      setTimeout(() => {\n        fieldRef.current.style.border = '1px solid #ccc';\n      }, 2000);\n      console.log(`${fieldName} cannot be empty.`);\n      return false;\n    }\n    return true;\n  };\n  const handlesave = async () => {\n    const validateFields = () => {\n      const isUrlValid = validateField(urlRef, \"URL\");\n      const isDescriptionValid = validateField(descriptionRef, \"Description\");\n      return isUrlValid && isDescriptionValid;\n    };\n    if (!validateFields()) {\n      return; // This is for stop if any valid is null\n    } else {\n      try {\n        const dataphoto = {\n          userId: auth.user.userId,\n          movieId: movieId,\n          url: selectedphoto.url,\n          description: selectedphoto.description\n        };\n        await axios({\n          method: 'POST',\n          url: '/admin/photos',\n          data: dataphoto,\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        alert('Added Success');\n        setSelectedPhoto([]);\n        getAll(movieId);\n      } catch (error) {\n        var _error$response;\n        console.log(\"Error Saving Photo\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      }\n    }\n  };\n  const handledelete = id => {\n    const isConfirm = window.confirm(\"Are you Sure to Delete this Photo?\");\n    if (isConfirm) {\n      axios({\n        method: 'delete',\n        url: `/photos/${id}`,\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      }).then(() => {\n        alert(\"Delete Success\");\n        getAll(movieId);\n        console.log(\"Database Updated\");\n      }).catch(err => {\n        console.log(\"err\");\n      });\n    }\n  };\n  const handleclear = useCallback(() => {\n    setSelectedPhoto([]);\n    setPhotoId(undefined);\n  }, [setSelectedPhoto, setPhotoId]);\n  const photofetch = async id => {\n    axios({\n      method: 'get',\n      url: `/photos/${id}`,\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${auth.accessToken}`\n      }\n    }).then(response => {\n      setSelectedPhoto(response.data);\n      setPhotoId(response.data.id);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const photoUpdate = async id => {\n    const validateFields = () => {\n      const isUrlValid = validateField(urlRef, \"URL\");\n      const isDescriptionValid = validateField(descriptionRef, \"Description\");\n      return isUrlValid && isDescriptionValid;\n    };\n    if (!validateFields()) {\n      return; // This is for stop if any valid is null\n    } else {\n      const isConfirm = window.confirm(\"Are you sure you want to update the Photo?\");\n      if (isConfirm) {\n        const dataphoto = {\n          userId: auth.user.userId,\n          movieId: selectedphoto.movieId,\n          description: selectedphoto.description,\n          url: selectedphoto.url\n        };\n        console.table(dataphoto);\n        try {\n          const response = await axios({\n            method: 'patch',\n            url: `/photos/${id}`,\n            data: dataphoto,\n            headers: {\n              Accept: 'application/json',\n              Authorization: `Bearer ${auth.accessToken}`\n            }\n          });\n          console.log(response.data);\n          alert('updated successfully!');\n          handleclear();\n          getAll(movieId);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photo-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Photo-View-Box\",\n      children: photos !== undefined && photos.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-display-photo\",\n        children: photos.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-photo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"delete-button\",\n              onClick: () => handledelete(image.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashAlt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"edit-button\",\n              onClick: () => photofetch(image.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faEdit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.url,\n            alt: image.description,\n            style: {\n              width: '100%'\n            },\n            className: \"image-style\",\n            onClick: () => openModal(image) // Open modal on click\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-photo\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: image.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this)]\n        }, image.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-photo\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Photos not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-modal\",\n          onClick: closeModal,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedphoto.url,\n          alt: selectedphoto.description,\n          className: \"modal-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"modal-description\",\n          children: selectedphoto.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Photo-Search-Box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parent-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-detail-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"photo-container-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"photo-image-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"photo-movies\",\n                src: selectedphoto.url ? selectedphoto.url : 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg',\n                className: \"photo-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-info-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label-photo\",\n              children: \"Url Image:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"photo-url\",\n              value: selectedphoto.url || '',\n              onChange: e => setSelectedPhoto({\n                ...selectedphoto,\n                url: e.target.value\n              }),\n              ref: urlRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label-photo\",\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"photo-description\",\n              value: selectedphoto.description || '',\n              onChange: e => setSelectedPhoto({\n                ...selectedphoto,\n                description: e.target.value\n              }),\n              ref: descriptionRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"save-edit-back-btn\",\n          children: [!photoid ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-save-btn\",\n              type: \"button\",\n              onClick: handlesave,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"import-photos-button\",\n                type: \"import-photos-button\",\n                onClick: importDataPhoto,\n                children: \"Import All Photos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-save-btn\",\n              type: \"button\",\n              onClick: () => photoUpdate(photoid),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-btn\",\n            type: \"button\",\n            onClick: handleclear,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n}\n_s(Photos, \"YlzeWBG5jePby/sZmItV2NAwQDc=\", false, function () {\n  return [useParams];\n});\n_c = Photos;\nexport default Photos;\nvar _c;\n$RefreshReg$(_c, \"Photos\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useCallback","useRef","AuthContext","axios","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Photos","_s","auth","photoid","setPhotoId","undefined","urlRef","descriptionRef","photos","setPhotos","selectedphoto","setSelectedPhoto","movieId","isModalOpen","setIsModalOpen","getAll","method","url","headers","Accept","Authorization","accessToken","then","response","data","catch","error","console","openModal","photo","closeModal","importDataPhoto","setSavePhotosImp","backdrops","alert","length","setTimeout","photoImportData","Promise","all","map","datainfo","dataphoto","userId","user","description","file_path","log","post","validateField","fieldRef","fieldName","current","value","trim","style","border","handlesave","validateFields","isUrlValid","isDescriptionValid","_error$response","message","handledelete","id","isConfirm","window","confirm","err","handleclear","photofetch","photoUpdate","table","className","children","image","type","onClick","FontAwesomeIcon","icon","faTrashAlt","fileName","_jsxFileName","lineNumber","columnNumber","faEdit","src","alt","width","e","stopPropagation","faTimes","onChange","target","ref","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Photos/Photos.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext, useCallback, useRef } from 'react'\r\nimport { AuthContext } from \"../../../../../utils/context/AuthToken\";\r\nimport './Photos.css'\r\n\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Photos() {\r\n  const { auth } = useContext(AuthContext);\r\n  const [photoid, setPhotoId] = useState(undefined);\r\n  const urlRef = useRef();\r\n  const descriptionRef = useRef();\r\n  const [photos, setPhotos] = useState([]);\r\n  const [selectedphoto, setSelectedPhoto] = useState({});\r\n  let { movieId } = useParams();\r\n  const [isModalOpen, setIsModalOpen] = useState(false); // Modal visibility state\r\n\r\n\r\n  const getAll = useCallback((movieId) => {\r\n    axios({\r\n      method: 'get',\r\n      url: `/movies/${movieId}`,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        Authorization: `Bearer ${auth.accessToken}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setPhotos(response.data.photos);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching Photos:\", error.response.data);\r\n      });\r\n  }, [auth.accessToken])\r\n\r\n  useEffect(() => {\r\n    getAll(movieId);\r\n  }, [movieId, getAll]);\r\n\r\n  const openModal = (photo) => {\r\n    setSelectedPhoto(photo);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n\r\n  //This used for Importing Photos based on tmdbId from Movie\r\n  function importDataPhoto() {\r\n    axios({\r\n      method: 'get',\r\n      url: `https://api.themoviedb.org/3/movie/${movieId}/images`,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZjcwNmYyZDQwMDA0ZTUwYzhmOGUwZDg4MWNjMzMzMCIsIm5iZiI6MTcyOTMxMjYyNi4wMSwic3ViIjoiNjcxMzM3NzI2NTAyNDhiOWRiNjFkNzM4Iiwic2NvcGVzIjpbImFwaV9yZWFkIl0sInZlcnNpb24iOjF9.VZcreJYYoRCCaykTDCYoois31PY6f9grTjN1ifvV1yg', // Make sure to replace this with your actual API key\r\n      },\r\n    }).then((response) => {\r\n      setSavePhotosImp(response.data.backdrops);\r\n      alert(`Total of ${response.data.backdrops.length} Photos are now Imported to Database`);\r\n      setTimeout(() => {\r\n        getAll(movieId);\r\n      }, 2000);\r\n    })\r\n  }\r\n\r\n  //Saving all Photo Imported to Database\r\n  async function setSavePhotosImp(photoImportData) {\r\n    await Promise.all(photoImportData.map(async (datainfo) => {\r\n      const dataphoto = {\r\n        userId: auth.user.userId,\r\n        movieId: movieId,\r\n        description: `Imported from TMDB Data`,\r\n        url: `https://image.tmdb.org/t/p/w500/${datainfo.file_path}`,\r\n      };\r\n      console.log('Transfering import to Database', dataphoto);\r\n      try {\r\n        await axios.post('/admin/photos', dataphoto, {\r\n          headers: {\r\n            Accept: 'application/json',\r\n            Authorization: `Bearer ${auth.accessToken}`,\r\n          },\r\n        });\r\n      } catch (error) {\r\n        console.error('Error of Importing:', error);\r\n      }\r\n    }));\r\n    console.log('Imported Success');\r\n  }\r\n\r\n  const validateField = (fieldRef, fieldName) => {\r\n    if (!fieldRef.current.value.trim()) {\r\n      fieldRef.current.style.border = '2px solid red';\r\n      setTimeout(() => {\r\n        fieldRef.current.style.border = '1px solid #ccc';\r\n      }, 2000);\r\n      console.log(`${fieldName} cannot be empty.`)\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  \r\n\r\n  const handlesave = async () => {\r\n\r\n    const validateFields = () => {\r\n      const isUrlValid = validateField(urlRef, \"URL\");\r\n      const isDescriptionValid = validateField(descriptionRef, \"Description\");\r\n\r\n      return isUrlValid && isDescriptionValid;\r\n    };\r\n\r\n    if (!validateFields()) {\r\n      return; // This is for stop if any valid is null\r\n    } else {\r\n      try {\r\n        const dataphoto = {\r\n          userId: auth.user.userId,\r\n          movieId: movieId,\r\n          url: selectedphoto.url,\r\n          description: selectedphoto.description,\r\n        }\r\n        await axios({\r\n          method: 'POST',\r\n          url: '/admin/photos',\r\n          data: dataphoto,\r\n          headers: {\r\n            Authorization: `Bearer ${auth.accessToken}`,\r\n          }\r\n        });\r\n        alert('Added Success');\r\n        setSelectedPhoto([])\r\n        getAll(movieId);\r\n      } catch (error) {\r\n        console.log(\"Error Saving Photo\", error.response?.data || error.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  const handledelete = (id) => {\r\n    const isConfirm = window.confirm(\"Are you Sure to Delete this Photo?\");\r\n\r\n    if (isConfirm) {\r\n      axios({\r\n        method: 'delete',\r\n        url: `/photos/${id}`,\r\n        headers: {\r\n          Authorization: `Bearer ${auth.accessToken}`,\r\n        },\r\n      }).then(() => {\r\n        alert(\"Delete Success\");\r\n        getAll(movieId);\r\n        console.log(\"Database Updated\");\r\n      }).catch((err) => {\r\n        console.log(\"err\");\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleclear = useCallback(() => {\r\n    setSelectedPhoto([]);\r\n    setPhotoId(undefined);\r\n  }, [setSelectedPhoto, setPhotoId]);\r\n\r\n  const photofetch = async (id) => {\r\n    axios({\r\n      method: 'get',\r\n      url: `/photos/${id}`,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        Authorization: `Bearer ${auth.accessToken}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setSelectedPhoto(response.data);\r\n        setPhotoId(response.data.id)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      });\r\n  }\r\n\r\n  const photoUpdate = async (id) => {\r\n    const validateFields = () => {\r\n      const isUrlValid = validateField(urlRef, \"URL\");\r\n      const isDescriptionValid = validateField(descriptionRef, \"Description\");\r\n\r\n      return isUrlValid && isDescriptionValid;\r\n    };\r\n\r\n    if (!validateFields()) {\r\n      return; // This is for stop if any valid is null\r\n    } else {\r\n      const isConfirm = window.confirm(\"Are you sure you want to update the Photo?\");\r\n      if (isConfirm) {\r\n        const dataphoto = {\r\n          userId: auth.user.userId,\r\n          movieId: selectedphoto.movieId,\r\n          description: selectedphoto.description,\r\n          url: selectedphoto.url,\r\n        };\r\n\r\n        console.table(dataphoto);\r\n        try {\r\n          const response = await axios({\r\n            method: 'patch',\r\n            url: `/photos/${id}`,\r\n            data: dataphoto,\r\n            headers: {\r\n              Accept: 'application/json',\r\n              Authorization: `Bearer ${auth.accessToken}`,\r\n            },\r\n          });\r\n          console.log(response.data);\r\n          alert('updated successfully!')\r\n          handleclear();\r\n          getAll(movieId)\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className='photo-box'>\r\n      <div className='Photo-View-Box'>\r\n        {photos !== undefined && photos.length > 0 ? (\r\n          <div className='card-display-photo'>\r\n            {photos.map((image) => (\r\n              <div key={image.id} className='card-photo'>\r\n                <div className='buttons-group'>\r\n                  <button\r\n                    type='button'\r\n                    className='delete-button'\r\n                    onClick={() => handledelete(image.id)}\r\n                  >\r\n                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                  </button>\r\n                  <button\r\n                    type='button'\r\n                    className='edit-button'\r\n                    onClick={() => photofetch(image.id)}\r\n                  >\r\n                    <FontAwesomeIcon icon={faEdit} />\r\n                  </button>\r\n                </div>\r\n                <img src={image.url} alt={image.description} style={{ width: '100%' }} className='image-style' \r\n                onClick={() => openModal(image)} // Open modal on click\r\n                />\r\n                <div className='container-photo'>\r\n                  <p>{image.description}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className='no-photo'>\r\n            <h3>Photos not Found</h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modal for Full-Screen View */}\r\n      {isModalOpen && (\r\n        <div className='modal-overlay' onClick={closeModal}>\r\n          <div className='modal-content' onClick={(e) => e.stopPropagation()}>\r\n          <button className='close-modal' onClick={closeModal}>\r\n          <FontAwesomeIcon icon={faTimes} />\r\n          </button>\r\n            <img src={selectedphoto.url} alt={selectedphoto.description} className='modal-image' />\r\n            <p className='modal-description'>{selectedphoto.description}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      \r\n      <div className='Photo-Search-Box'>\r\n        <div className='parent-container'>\r\n          <div className='photo-detail-box'>\r\n            <div className='photo-container-center'>\r\n              <div className='photo-image-container'>\r\n                <img\r\n                  alt='photo-movies'\r\n                  src={selectedphoto.url\r\n                    ? selectedphoto.url\r\n                    : 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\r\n                  }\r\n                  className='photo-img'\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='photo-info-text'>\r\n            <div className='input-group'>\r\n              <label className='label-photo'>\r\n                Url Image:\r\n              </label>\r\n              <input\r\n                className='photo-url'\r\n                value={selectedphoto.url || ''}\r\n                onChange={(e) => setSelectedPhoto({ ...selectedphoto, url: e.target.value })}\r\n                ref={urlRef}\r\n              />\r\n            </div>\r\n            <div className='input-group'>\r\n              <label className='label-photo'>\r\n                Description:\r\n              </label>\r\n              <textarea\r\n                className='photo-description'\r\n                value={selectedphoto.description || ''}\r\n                onChange={(e) => setSelectedPhoto({ ...selectedphoto, description: e.target.value })}\r\n                ref={descriptionRef}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className='save-edit-back-btn'>\r\n            {!photoid ? (\r\n              <>\r\n                <button className='edit-save-btn'\r\n                  type='button'\r\n                  onClick={handlesave}\r\n                >\r\n                  Save\r\n                </button>\r\n                <div>\r\n                  <button\r\n                    className='import-photos-button'\r\n                    type='import-photos-button'\r\n                    onClick={importDataPhoto}\r\n                  >\r\n                    Import All Photos\r\n                  </button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <button className='edit-save-btn'\r\n                  type='button'\r\n                  onClick={() => photoUpdate(photoid)}\r\n                >\r\n                  Update\r\n                </button>\r\n              </>\r\n            )}\r\n\r\n            <button className='clear-btn'\r\n              type='button'\r\n              onClick={handleclear}\r\n            >\r\n              Clear\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Photos"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}