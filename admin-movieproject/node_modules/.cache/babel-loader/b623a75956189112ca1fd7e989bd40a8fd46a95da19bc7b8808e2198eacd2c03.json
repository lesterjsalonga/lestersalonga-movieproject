{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Videos\\\\Videos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\nimport './Videos.css';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Videos() {\n  _s();\n  const {\n    auth\n  } = useContext(AuthContext);\n  const {\n    movieId\n  } = useParams(); // Get movieId from the URL\n  const [videos, setVideos] = useState([]); // Ensure this is initialized as an array\n  const [newVideo, setNewVideo] = useState({\n    url: '',\n    description: ''\n  });\n  const [editingVideo, setEditingVideo] = useState(null); // To track video being edited\n  const [isSaving, setIsSaving] = useState(false);\n  useEffect(() => {\n    // Fetch videos associated with the current movie\n    const fetchVideos = async () => {\n      try {\n        const response = await axios.get(`/movies/${movieId}/videos`, {\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n\n        // Log the response to see the structure\n        console.log('Fetched videos:', response.data);\n\n        // Check if response data is an array, otherwise initialize it as an empty array\n        if (Array.isArray(response.data)) {\n          setVideos(response.data);\n        } else {\n          setVideos([]); // Fallback to empty array if the response is not an array\n        }\n      } catch (error) {\n        console.error('Error fetching videos:', error);\n        setVideos([]); // Fallback to empty array if an error occurs\n      }\n    };\n    fetchVideos();\n  }, [movieId, auth.accessToken]);\n\n  // Helper function to extract YouTube video ID from URL\n  const getVideoId = url => {\n    const regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^\\/]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/))?(?:watch\\?v=|e(?:mbed)\\/)([\\w-]{11})/;\n    const match = url.match(regex);\n    return match ? match[1] : null;\n  };\n\n  // Handle adding a new video\n  const handleAddVideo = async () => {\n    setIsSaving(true);\n    try {\n      const videoData = {\n        movieId,\n        url: newVideo.url,\n        description: newVideo.description,\n        userId: auth.user.userId\n      };\n      const response = await axios.post('/videos', videoData, {\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      });\n      setVideos(prevVideos => [...prevVideos, response.data]);\n      setNewVideo({\n        url: '',\n        description: ''\n      }); // Clear input fields\n      alert(\"Video added successfully!\");\n    } catch (error) {\n      console.error('Error adding video:', error);\n      alert('Failed to add video.');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // Handle deleting a video\n  const handleDeleteVideo = async id => {\n    if (window.confirm('Are you sure you want to delete this video?')) {\n      try {\n        await axios.delete(`/videos/${id}`, {\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        setVideos(prevVideos => prevVideos.filter(video => video.id !== id));\n        alert('Video deleted successfully!');\n      } catch (error) {\n        console.error('Error deleting video:', error);\n        alert('Failed to delete video.');\n      }\n    }\n  };\n\n  // Handle updating a video\n  const handleUpdateVideo = async () => {\n    setIsSaving(true);\n    try {\n      const updatedData = {\n        url: editingVideo.url,\n        description: editingVideo.description\n      };\n      await axios.patch(`/videos/${editingVideo.id}`, updatedData, {\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      });\n      setVideos(prevVideos => prevVideos.map(video => video.id === editingVideo.id ? {\n        ...video,\n        ...updatedData\n      } : video));\n      setEditingVideo(null);\n      alert('Video updated successfully!');\n    } catch (error) {\n      console.error('Error updating video:', error);\n      alert('Failed to update video.');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // Handle input change for new video or editing video\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (editingVideo) {\n      setEditingVideo(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else {\n      setNewVideo(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videos-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Videos for Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"url\",\n        placeholder: \"Video URL\",\n        value: editingVideo ? editingVideo.url : newVideo.url,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Video Description\",\n        value: editingVideo ? editingVideo.description : newVideo.description,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: editingVideo ? handleUpdateVideo : handleAddVideo,\n        disabled: isSaving,\n        children: isSaving ? 'Saving...' : editingVideo ? 'Update Video' : 'Add Video'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videos-list\",\n      children: videos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No videos found for this movie.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this) : videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-info\",\n          children: [getVideoId(video.url) ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n            width: \"560\",\n            height: \"315\",\n            src: `https://www.youtube.com/embed/${getVideoId(video.url)}`,\n            title: \"Video\",\n            frameBorder: \"0\",\n            allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n            allowFullScreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Invalid video URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: video.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Added on: \", new Date(video.dateCreated).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditingVideo(video),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteVideo(video.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this)]\n      }, video.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(Videos, \"5gqIX21gfEHeRStE2OQ62Gwq68w=\", false, function () {\n  return [useParams];\n});\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","AuthContext","useParams","jsxDEV","_jsxDEV","Videos","_s","auth","movieId","videos","setVideos","newVideo","setNewVideo","url","description","editingVideo","setEditingVideo","isSaving","setIsSaving","fetchVideos","response","get","headers","Authorization","accessToken","console","log","data","Array","isArray","error","getVideoId","regex","match","handleAddVideo","videoData","userId","user","post","prevVideos","alert","handleDeleteVideo","id","window","confirm","delete","filter","video","handleUpdateVideo","updatedData","patch","map","handleInputChange","e","name","value","target","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","disabled","length","width","height","src","title","frameBorder","allow","allowFullScreen","Date","dateCreated","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Videos/Videos.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\r\nimport './Videos.css';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Videos() {\r\n  const { auth } = useContext(AuthContext);\r\n  const { movieId } = useParams(); // Get movieId from the URL\r\n  const [videos, setVideos] = useState([]); // Ensure this is initialized as an array\r\n  const [newVideo, setNewVideo] = useState({ url: '', description: '' });\r\n  const [editingVideo, setEditingVideo] = useState(null); // To track video being edited\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch videos associated with the current movie\r\n    const fetchVideos = async () => {\r\n      try {\r\n        const response = await axios.get(`/movies/${movieId}/videos`, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n        });\r\n\r\n        // Log the response to see the structure\r\n        console.log('Fetched videos:', response.data);\r\n\r\n        // Check if response data is an array, otherwise initialize it as an empty array\r\n        if (Array.isArray(response.data)) {\r\n          setVideos(response.data);\r\n        } else {\r\n          setVideos([]); // Fallback to empty array if the response is not an array\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching videos:', error);\r\n        setVideos([]); // Fallback to empty array if an error occurs\r\n      }\r\n    };\r\n\r\n    fetchVideos();\r\n  }, [movieId, auth.accessToken]);\r\n\r\n  // Helper function to extract YouTube video ID from URL\r\n  const getVideoId = (url) => {\r\n    const regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^\\/]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/))?(?:watch\\?v=|e(?:mbed)\\/)([\\w-]{11})/;\r\n    const match = url.match(regex);\r\n    return match ? match[1] : null;\r\n  };\r\n\r\n  // Handle adding a new video\r\n  const handleAddVideo = async () => {\r\n    setIsSaving(true);\r\n    try {\r\n      const videoData = {\r\n        movieId,\r\n        url: newVideo.url,\r\n        description: newVideo.description,\r\n        userId: auth.user.userId,\r\n      };\r\n\r\n      const response = await axios.post('/videos', videoData, {\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n      });\r\n\r\n      setVideos((prevVideos) => [...prevVideos, response.data]);\r\n      setNewVideo({ url: '', description: '' }); // Clear input fields\r\n      alert(\"Video added successfully!\");\r\n    } catch (error) {\r\n      console.error('Error adding video:', error);\r\n      alert('Failed to add video.');\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  // Handle deleting a video\r\n  const handleDeleteVideo = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this video?')) {\r\n      try {\r\n        await axios.delete(`/videos/${id}`, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n        });\r\n\r\n        setVideos((prevVideos) => prevVideos.filter((video) => video.id !== id));\r\n        alert('Video deleted successfully!');\r\n      } catch (error) {\r\n        console.error('Error deleting video:', error);\r\n        alert('Failed to delete video.');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle updating a video\r\n  const handleUpdateVideo = async () => {\r\n    setIsSaving(true);\r\n    try {\r\n      const updatedData = {\r\n        url: editingVideo.url,\r\n        description: editingVideo.description,\r\n      };\r\n\r\n      await axios.patch(`/videos/${editingVideo.id}`, updatedData, {\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n      });\r\n\r\n      setVideos((prevVideos) =>\r\n        prevVideos.map((video) =>\r\n          video.id === editingVideo.id ? { ...video, ...updatedData } : video\r\n        )\r\n      );\r\n      setEditingVideo(null);\r\n      alert('Video updated successfully!');\r\n    } catch (error) {\r\n      console.error('Error updating video:', error);\r\n      alert('Failed to update video.');\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  // Handle input change for new video or editing video\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (editingVideo) {\r\n      setEditingVideo((prev) => ({ ...prev, [name]: value }));\r\n    } else {\r\n      setNewVideo((prev) => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"videos-container\">\r\n      <h2>Videos for Movie</h2>\r\n\r\n      {/* Add Video Form */}\r\n      <div className=\"video-form\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"url\"\r\n          placeholder=\"Video URL\"\r\n          value={editingVideo ? editingVideo.url : newVideo.url}\r\n          onChange={handleInputChange}\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder=\"Video Description\"\r\n          value={editingVideo ? editingVideo.description : newVideo.description}\r\n          onChange={handleInputChange}\r\n        ></textarea>\r\n        <button onClick={editingVideo ? handleUpdateVideo : handleAddVideo} disabled={isSaving}>\r\n          {isSaving ? 'Saving...' : editingVideo ? 'Update Video' : 'Add Video'}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Display existing videos */}\r\n      <div className=\"videos-list\">\r\n        {videos.length === 0 ? (\r\n          <p>No videos found for this movie.</p>\r\n        ) : (\r\n          videos.map((video) => (\r\n            <div key={video.id} className=\"video-item\">\r\n              <div className=\"video-info\">\r\n                {/* YouTube Video Embed */}\r\n                {getVideoId(video.url) ? (\r\n                  <iframe\r\n                    width=\"560\"\r\n                    height=\"315\"\r\n                    src={`https://www.youtube.com/embed/${getVideoId(video.url)}`}\r\n                    title=\"Video\"\r\n                    frameBorder=\"0\"\r\n                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                    allowFullScreen\r\n                  ></iframe>\r\n                ) : (\r\n                  <p>Invalid video URL</p>\r\n                )}\r\n                <p>{video.description}</p>\r\n                <small>Added on: {new Date(video.dateCreated).toLocaleDateString()}</small>\r\n              </div>\r\n              <div className=\"video-actions\">\r\n                <button onClick={() => setEditingVideo(video)}>Edit</button>\r\n                <button onClick={() => handleDeleteVideo(video.id)}>Delete</button>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Videos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}