{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useParams, useNavigate, Outlet } from 'react-router-dom';\nimport './Form.css';\nimport CastandCrew from '../CastandCrew/CastandCrew';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [searchedMovieList, setSearchedMovieList] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(undefined);\n  const [movie, setMovie] = useState(undefined);\n  const [notFound, setNotFound] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedCast, setSelectedCast] = useState([]); // State for selected cast\n  const navigate = useNavigate();\n  let {\n    movieId\n  } = useParams();\n  const API_BASE_URL = 'https://api.themoviedb.org/3';\n  const TMDB_HEADERS = {\n    Accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTdiNmUyNGJkNWRkNjhiNmE1ZWFjZjgyNWY3NGY5ZCIsIm5iZiI6MTcyOTI5NzI5Ny4wNzMzNTEsInN1YiI6IjY2MzhlZGM0MmZhZjRkMDEzMGM2NzM3NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ZIX4EF2yAKl6NwhcmhZucxSQi1rJDZiGG80tDd6_9XI'\n  };\n  const generateImageUrl = path => {\n    return path ? `https://image.tmdb.org/t/p/original/${path}` : '';\n  };\n\n  // Handle movie search\n  const handleSearch = useCallback(async (page = 1) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`, {\n        headers: TMDB_HEADERS\n      });\n      if (response.data.results.length === 0) {\n        setNotFound(true);\n        setSearchedMovieList([]);\n        setTotalPages(0);\n      } else {\n        setSearchedMovieList(response.data.results);\n        setTotalPages(response.data.total_pages);\n        setNotFound(false);\n      }\n    } catch (err) {\n      setError('Error fetching movies. Please try again later.');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [query]);\n  const handleSelectMovie = movie => {\n    setSelectedMovie(movie);\n  };\n  const handleSave = async () => {\n    const accessToken = localStorage.getItem('accessToken');\n    if (!selectedMovie) {\n      alert('Please search and select a movie.');\n      return;\n    }\n    const data = {\n      tmdbId: selectedMovie.id,\n      title: selectedMovie.title,\n      overview: selectedMovie.overview,\n      popularity: selectedMovie.popularity,\n      releaseDate: selectedMovie.release_date,\n      voteAverage: selectedMovie.vote_average,\n      backdropPath: generateImageUrl(selectedMovie.backdrop_path),\n      posterPath: generateImageUrl(selectedMovie.poster_path),\n      isFeatured: 0,\n      cast: selectedCast // Include the selected cast in the data\n    };\n    try {\n      if (movieId) {\n        await axios.patch(`/movies/${movieId}`, data, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        alert('Movie updated successfully.');\n      } else {\n        await axios.post('/movies', data, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        alert('Movie created successfully.');\n      }\n      navigate('/main/movies');\n    } catch (err) {\n      setError('Error saving movie. Please try again later.');\n      console.error(err);\n    }\n  };\n\n  // Fetch movie details when editing an existing movie\n  useEffect(() => {\n    if (movieId) {\n      const fetchMovie = async () => {\n        try {\n          const response = await axios.get(`/movies/${movieId}`);\n          setMovie(response.data);\n          setSelectedMovie({\n            id: response.data.tmdbId,\n            title: response.data.title,\n            overview: response.data.overview,\n            popularity: response.data.popularity,\n            poster_path: response.data.posterPath,\n            release_date: response.data.releaseDate,\n            vote_average: response.data.voteAverage\n          });\n          setSelectedCast(response.data.cast || []); // Set the initial cast for editing\n        } catch (err) {\n          setError('Error fetching movie details. Please try again later.');\n          console.error(err);\n        }\n      };\n      fetchMovie();\n    }\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moviecontainer mt-5 overflow-auto movieform-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movieId ? 'Edit Movie' : 'Create Movie'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger text-center\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }, this), !movieId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Search Movie:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"Enter movie title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSearch(1),\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searched-movie\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this) : notFound ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No movies found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this) : searchedMovieList.map(movie => /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => handleSelectMovie(movie),\n          children: movie.title\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: currentPage === 1,\n          onClick: () => {\n            setCurrentPage(prev => prev - 1);\n            handleSearch(currentPage - 1);\n          },\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Page \", currentPage, \" of \", totalPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: currentPage === totalPages,\n          onClick: () => {\n            setCurrentPage(prev => prev + 1);\n            handleSearch(currentPage + 1);\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [(selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.poster_path) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: generateImageUrl(selectedMovie.poster_path),\n          alt: selectedMovie.title,\n          className: \"poster-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.title) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.overview) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            overview: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Popularity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.popularity) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            popularity: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Release Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.release_date) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            release_date: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Vote Average\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.vote_average) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            vote_average: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleSave,\n          children: movieId ? 'Update' : 'Save'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), movieId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cast & Crew\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CastandCrew, {\n        movieId: movieId,\n        selectedCast: selectedCast,\n        setSelectedCast: setSelectedCast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), movieId && selectedMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              navigate(`/main/movies/form/${movieId}/cast-and-crews`);\n            },\n            children: \"Cast & Crews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              navigate(`/main/movies/form/${movieId}/videos`);\n            },\n            children: \"Videos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              navigate(`/main/movies/form/${movieId}/photos`);\n            },\n            children: \"Photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"OyPN2rSxUwkFh/rdrME1tx2qP3c=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["axios","useCallback","useEffect","useState","useParams","useNavigate","Outlet","CastandCrew","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","query","setQuery","searchedMovieList","setSearchedMovieList","selectedMovie","setSelectedMovie","undefined","movie","setMovie","notFound","setNotFound","currentPage","setCurrentPage","totalPages","setTotalPages","isLoading","setIsLoading","error","setError","selectedCast","setSelectedCast","navigate","movieId","API_BASE_URL","TMDB_HEADERS","Accept","Authorization","generateImageUrl","path","handleSearch","page","response","get","headers","data","results","length","total_pages","err","console","handleSelectMovie","handleSave","accessToken","localStorage","getItem","alert","tmdbId","id","title","overview","popularity","releaseDate","release_date","voteAverage","vote_average","backdropPath","backdrop_path","posterPath","poster_path","isFeatured","cast","patch","post","fetchMovie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","disabled","prev","src","alt","rows","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Form.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useParams, useNavigate, Outlet } from 'react-router-dom';\r\nimport './Form.css';\r\nimport CastandCrew from '../CastandCrew/CastandCrew'; \r\n\r\nconst Form = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [searchedMovieList, setSearchedMovieList] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState(undefined);\r\n  const [movie, setMovie] = useState(undefined);\r\n  const [notFound, setNotFound] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [selectedCast, setSelectedCast] = useState([]); // State for selected cast\r\n  const navigate = useNavigate();\r\n  let { movieId } = useParams();\r\n\r\n  const API_BASE_URL = 'https://api.themoviedb.org/3';\r\n  const TMDB_HEADERS = {\r\n    Accept: 'application/json',\r\n    Authorization:\r\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTdiNmUyNGJkNWRkNjhiNmE1ZWFjZjgyNWY3NGY5ZCIsIm5iZiI6MTcyOTI5NzI5Ny4wNzMzNTEsInN1YiI6IjY2MzhlZGM0MmZhZjRkMDEzMGM2NzM3NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ZIX4EF2yAKl6NwhcmhZucxSQi1rJDZiGG80tDd6_9XI',\r\n  };\r\n\r\n  const generateImageUrl = (path) => {\r\n    return path ? `https://image.tmdb.org/t/p/original/${path}` : '';\r\n  };\r\n\r\n  // Handle movie search\r\n  const handleSearch = useCallback(async (page = 1) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(\r\n        `${API_BASE_URL}/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`,\r\n        { headers: TMDB_HEADERS }\r\n      );\r\n\r\n      if (response.data.results.length === 0) {\r\n        setNotFound(true);\r\n        setSearchedMovieList([]);\r\n        setTotalPages(0);\r\n      } else {\r\n        setSearchedMovieList(response.data.results);\r\n        setTotalPages(response.data.total_pages);\r\n        setNotFound(false);\r\n      }\r\n    } catch (err) {\r\n      setError('Error fetching movies. Please try again later.');\r\n      console.error(err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [query]);\r\n\r\n  const handleSelectMovie = (movie) => {\r\n    setSelectedMovie(movie);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    if (!selectedMovie) {\r\n      alert('Please search and select a movie.');\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      tmdbId: selectedMovie.id,\r\n      title: selectedMovie.title,\r\n      overview: selectedMovie.overview,\r\n      popularity: selectedMovie.popularity,\r\n      releaseDate: selectedMovie.release_date,\r\n      voteAverage: selectedMovie.vote_average,\r\n      backdropPath: generateImageUrl(selectedMovie.backdrop_path),\r\n      posterPath: generateImageUrl(selectedMovie.poster_path),\r\n      isFeatured: 0,\r\n      cast: selectedCast, // Include the selected cast in the data\r\n    };\r\n\r\n    try {\r\n      if (movieId) {\r\n        await axios.patch(`/movies/${movieId}`, data, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        });\r\n        alert('Movie updated successfully.');\r\n      } else {\r\n        await axios.post('/movies', data, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        });\r\n        alert('Movie created successfully.');\r\n      }\r\n      navigate('/main/movies');\r\n    } catch (err) {\r\n      setError('Error saving movie. Please try again later.');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Fetch movie details when editing an existing movie\r\n  useEffect(() => {\r\n    if (movieId) {\r\n      const fetchMovie = async () => {\r\n        try {\r\n          const response = await axios.get(`/movies/${movieId}`);\r\n          setMovie(response.data);\r\n          setSelectedMovie({\r\n            id: response.data.tmdbId,\r\n            title: response.data.title,\r\n            overview: response.data.overview,\r\n            popularity: response.data.popularity,\r\n            poster_path: response.data.posterPath,\r\n            release_date: response.data.releaseDate,\r\n            vote_average: response.data.voteAverage,\r\n          });\r\n          setSelectedCast(response.data.cast || []); // Set the initial cast for editing\r\n        } catch (err) {\r\n          setError('Error fetching movie details. Please try again later.');\r\n          console.error(err);\r\n        }\r\n      };\r\n\r\n      fetchMovie();\r\n    }\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div className=\"moviecontainer mt-5 overflow-auto movieform-container\">\r\n      <h1>{movieId ? 'Edit Movie' : 'Create Movie'}</h1>\r\n\r\n      {error && <p className=\"text-danger text-center\">{error}</p>}\r\n\r\n      {!movieId && (\r\n        <>\r\n          <div className=\"search-container\">\r\n            <label>Search Movie:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              placeholder=\"Enter movie title\"\r\n            />\r\n            <button onClick={() => handleSearch(1)}>Search</button>\r\n          </div>\r\n\r\n          <div className=\"searched-movie\">\r\n            {isLoading ? (\r\n              <p>Loading...</p>\r\n            ) : notFound ? (\r\n              <p>No movies found.</p>\r\n            ) : (\r\n              searchedMovieList.map((movie) => (\r\n                <p key={movie.id} onClick={() => handleSelectMovie(movie)}>\r\n                  {movie.title}\r\n                </p>\r\n              ))\r\n            )}\r\n          </div>\r\n\r\n          {totalPages > 1 && (\r\n            <div className=\"pagination\">\r\n              <button\r\n                disabled={currentPage === 1}\r\n                onClick={() => {\r\n                  setCurrentPage((prev) => prev - 1);\r\n                  handleSearch(currentPage - 1);\r\n                }}\r\n              >\r\n                Previous\r\n              </button>\r\n              <span>\r\n                Page {currentPage} of {totalPages}\r\n              </span>\r\n              <button\r\n                disabled={currentPage === totalPages}\r\n                onClick={() => {\r\n                  setCurrentPage((prev) => prev + 1);\r\n                  handleSearch(currentPage + 1);\r\n                }}\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      <div className=\"movie-details\">\r\n        <form>\r\n          {selectedMovie?.poster_path && (\r\n            <img\r\n              src={generateImageUrl(selectedMovie.poster_path)}\r\n              alt={selectedMovie.title}\r\n              className=\"poster-image\"\r\n            />\r\n          )}\r\n\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={selectedMovie?.title || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, title: e.target.value })}\r\n          />\r\n\r\n          <label>Overview</label>\r\n          <textarea\r\n            rows=\"5\"\r\n            value={selectedMovie?.overview || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, overview: e.target.value })}\r\n          ></textarea>\r\n\r\n          <label>Popularity</label>\r\n          <input\r\n            type=\"number\"\r\n            value={selectedMovie?.popularity || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, popularity: e.target.value })}\r\n          />\r\n\r\n          <label>Release Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={selectedMovie?.release_date || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, release_date: e.target.value })}\r\n          />\r\n\r\n          <label>Vote Average</label>\r\n          <input\r\n            type=\"number\"\r\n            value={selectedMovie?.vote_average || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, vote_average: e.target.value })}\r\n          />\r\n\r\n          <button type=\"button\" onClick={handleSave}>\r\n            {movieId ? 'Update' : 'Save'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Render Cast and Crew component when editing movie */}\r\n      {movieId && (\r\n        <>\r\n          <hr />\r\n          <h2>Cast & Crew</h2>\r\n          <CastandCrew\r\n            movieId={movieId}\r\n            selectedCast={selectedCast}\r\n            setSelectedCast={setSelectedCast}\r\n          />\r\n        </>\r\n      )}\r\n\r\n      {movieId && selectedMovie && (\r\n        <div>\r\n          <hr />\r\n          <nav>\r\n            <ul className=\"tabs\">\r\n              <li\r\n                onClick={() => {\r\n                  navigate(`/main/movies/form/${movieId}/cast-and-crews`);\r\n                }}\r\n              >\r\n                Cast & Crews\r\n              </li>\r\n              <li\r\n                onClick={() => {\r\n                  navigate(`/main/movies/form/${movieId}/videos`);\r\n                }}\r\n              >\r\n                Videos\r\n              </li>\r\n              <li\r\n                onClick={() => {\r\n                  navigate(`/main/movies/form/${movieId}/photos`);\r\n                }}\r\n              >\r\n                Photos\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          <Outlet />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}