{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Videos\\\\Videos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\nimport './Videos.css';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Videos() {\n  _s();\n  const {\n    auth\n  } = useContext(AuthContext);\n  const {\n    movieId\n  } = useParams();\n  const [videos, setVideos] = useState([]);\n  const [newVideo, setNewVideo] = useState({\n    url: '',\n    description: ''\n  });\n  const [editingVideo, setEditingVideo] = useState(null);\n  const [isSaving, setIsSaving] = useState(false);\n  useEffect(() => {\n    // Fetch videos associated with the current movie\n    const fetchVideos = async () => {\n      try {\n        const response = await axios.get(`/movies/${movieId}/videos`, {\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        console.log('Fetched movies response:', response.data);\n\n        // Check if response.data.videos is an array and set it\n        if (Array.isArray(response.data.videos)) {\n          setVideos(response.data.videos);\n        } else {\n          console.error(\"Error: No videos found in the response or it's not an array\", response.data.videos);\n          setVideos([]); // Reset to empty array if the `videos` key is not an array\n        }\n      } catch (error) {\n        console.error(\"Error fetching videos:\", error);\n        setVideos([]); // Fallback to empty array in case of error\n      }\n    };\n    fetchVideos();\n  }, [movieId, auth.accessToken]);\n\n  // Helper function to extract YouTube video ID from URL\n  const getYouTubeVideoId = url => {\n    const regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^\\/]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/))?(?:watch\\?v=|e(?:mbed)\\/)([\\w-]{11})/;\n    const match = url.match(regex);\n    return match ? match[1] : null;\n  };\n  const handleAddVideo = async () => {\n    setIsSaving(true);\n    try {\n      const videoData = {\n        movieId,\n        url: newVideo.url,\n        description: newVideo.description,\n        userId: auth.user.userId\n      };\n      const response = await axios.post('/videos', videoData, {\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      });\n      setVideos(prevVideos => [...prevVideos, response.data]);\n      setNewVideo({\n        url: '',\n        description: ''\n      });\n      alert(\"Video added successfully!\");\n    } catch (error) {\n      console.error(\"Error adding video:\", error);\n      alert(\"Failed to add video.\");\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const handleDeleteVideo = async id => {\n    if (window.confirm(\"Are you sure you want to delete this video?\")) {\n      try {\n        await axios.delete(`/videos/${id}`, {\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        setVideos(prevVideos => prevVideos.filter(video => video.id !== id));\n        alert(\"Video deleted successfully!\");\n      } catch (error) {\n        console.error(\"Error deleting video:\", error);\n        alert(\"Failed to delete video.\");\n      }\n    }\n  };\n  const handleUpdateVideo = async () => {\n    if (!(editingVideo !== null && editingVideo !== void 0 && editingVideo.id)) {\n      alert(\"No video selected to update.\");\n      return;\n    }\n    const validateFields = () => {\n      switch (true) {\n        case !validateField(editingVideo.url, \"URL\"):\n          // Validate URL (if necessary)\n          return false;\n        case !validateField(editingVideo.description, \"Description\"):\n          // Validate description\n          return false;\n        default:\n          return true;\n      }\n    };\n    if (!validateFields()) {\n      return;\n    } else {\n      const isConfirm = window.confirm(\"Are you sure you want to update this video?\");\n      if (isConfirm) {\n        const updatedData = {\n          url: editingVideo.url,\n          description: editingVideo.description\n        };\n        try {\n          // Make the PATCH request to update the video\n          const response = await axios({\n            method: 'patch',\n            url: `/videos/${editingVideo.id}`,\n            // Ensure this matches your backend API endpoint\n            data: updatedData,\n            headers: {\n              Accept: 'application/json',\n              Authorization: `Bearer ${auth.accessToken}`\n            }\n          });\n\n          // Assuming the response contains the updated video\n          setVideos(prevVideos => prevVideos.map(video => video.id === editingVideo.id ? {\n            ...video,\n            ...updatedData\n          } : video));\n          setEditingVideo(null); // Clear the editing state\n          alert('Video updated successfully!');\n        } catch (error) {\n          if (error.response) {\n            alert(`Error updating video: ${error.response.data.message || 'Unknown error'}`);\n          } else if (error.request) {\n            alert(\"No response received from server. Please try again later.\");\n          } else {\n            alert(\"An unexpected error occurred. Please try again.\");\n          }\n        }\n      }\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (editingVideo) {\n      setEditingVideo(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else {\n      setNewVideo(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Video-View-Box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Videos for Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-display-videos\",\n        children: videos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No videos found for this movie.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this) : videos.map(video => {\n          const videoId = getYouTubeVideoId(video.url);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-video\",\n            children: [videoId ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n              width: \"100%\",\n              height: \"315\",\n              src: `https://www.youtube.com/embed/${videoId}`,\n              title: \"Video\",\n              frameBorder: \"0\",\n              allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n              allowFullScreen: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Invalid video URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-video\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: video.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Added on: \", new Date(video.dateCreated).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"buttons-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"edit-button\",\n                  onClick: () => setEditingVideo(video),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button\",\n                  onClick: () => handleDeleteVideo(video.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this)]\n          }, video.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Video-Search-Box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"url\",\n        placeholder: \"Video URL\",\n        value: editingVideo ? editingVideo.url : newVideo.url,\n        onChange: handleInputChange,\n        className: \"video-search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Video Description\",\n        value: editingVideo ? editingVideo.description : newVideo.description,\n        onChange: handleInputChange,\n        className: \"video-search-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-search-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-btn\",\n          onClick: editingVideo ? handleUpdateVideo : handleAddVideo,\n          disabled: isSaving,\n          children: isSaving ? 'Saving...' : editingVideo ? 'Update Video' : 'Add Video'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(Videos, \"5gqIX21gfEHeRStE2OQ62Gwq68w=\", false, function () {\n  return [useParams];\n});\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","AuthContext","useParams","jsxDEV","_jsxDEV","Videos","_s","auth","movieId","videos","setVideos","newVideo","setNewVideo","url","description","editingVideo","setEditingVideo","isSaving","setIsSaving","fetchVideos","response","get","headers","Authorization","accessToken","console","log","data","Array","isArray","error","getYouTubeVideoId","regex","match","handleAddVideo","videoData","userId","user","post","prevVideos","alert","handleDeleteVideo","id","window","confirm","delete","filter","video","handleUpdateVideo","validateFields","validateField","isConfirm","updatedData","method","Accept","map","message","request","handleInputChange","e","name","value","target","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","videoId","width","height","src","title","frameBorder","allow","allowFullScreen","Date","dateCreated","toLocaleDateString","onClick","type","placeholder","onChange","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Videos/Videos.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\r\nimport './Videos.css';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Videos() {\r\n  const { auth } = useContext(AuthContext);\r\n  const { movieId } = useParams();\r\n  const [videos, setVideos] = useState([]);\r\n  const [newVideo, setNewVideo] = useState({ url: '', description: '' });\r\n  const [editingVideo, setEditingVideo] = useState(null);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch videos associated with the current movie\r\n    const fetchVideos = async () => {\r\n      try {\r\n        const response = await axios.get(`/movies/${movieId}/videos`, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n        });\r\n\r\n        console.log('Fetched movies response:', response.data);\r\n\r\n        // Check if response.data.videos is an array and set it\r\n        if (Array.isArray(response.data.videos)) {\r\n          setVideos(response.data.videos);\r\n        } else {\r\n          console.error(\"Error: No videos found in the response or it's not an array\", response.data.videos);\r\n          setVideos([]); // Reset to empty array if the `videos` key is not an array\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching videos:\", error);\r\n        setVideos([]); // Fallback to empty array in case of error\r\n      }\r\n    };\r\n\r\n    fetchVideos();\r\n  }, [movieId, auth.accessToken]);\r\n\r\n  // Helper function to extract YouTube video ID from URL\r\n  const getYouTubeVideoId = (url) => {\r\n    const regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^\\/]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/))?(?:watch\\?v=|e(?:mbed)\\/)([\\w-]{11})/;\r\n    const match = url.match(regex);\r\n    return match ? match[1] : null;\r\n  };\r\n\r\n  const handleAddVideo = async () => {\r\n    setIsSaving(true);\r\n    try {\r\n      const videoData = {\r\n        movieId,\r\n        url: newVideo.url,\r\n        description: newVideo.description,\r\n        userId: auth.user.userId,\r\n      };\r\n\r\n      const response = await axios.post('/videos', videoData, {\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n      });\r\n\r\n      setVideos((prevVideos) => [...prevVideos, response.data]);\r\n      setNewVideo({ url: '', description: '' });\r\n      alert(\"Video added successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error adding video:\", error);\r\n      alert(\"Failed to add video.\");\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteVideo = async (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this video?\")) {\r\n      try {\r\n        await axios.delete(`/videos/${id}`, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n        });\r\n\r\n        setVideos((prevVideos) => prevVideos.filter((video) => video.id !== id));\r\n        alert(\"Video deleted successfully!\");\r\n      } catch (error) {\r\n        console.error(\"Error deleting video:\", error);\r\n        alert(\"Failed to delete video.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUpdateVideo = async () => {\r\n    if (!editingVideo?.id) {\r\n      alert(\"No video selected to update.\");\r\n      return;\r\n    }\r\n\r\n    const validateFields = () => {\r\n      switch (true) {\r\n        case !validateField(editingVideo.url, \"URL\"):  // Validate URL (if necessary)\r\n          return false;\r\n        case !validateField(editingVideo.description, \"Description\"):  // Validate description\r\n          return false;\r\n        default:\r\n          return true;\r\n      }\r\n    };\r\n\r\n    if (!validateFields()) {\r\n      return;\r\n    } else {\r\n      const isConfirm = window.confirm(\"Are you sure you want to update this video?\");\r\n      if (isConfirm) {\r\n        const updatedData = {\r\n          url: editingVideo.url,\r\n          description: editingVideo.description,\r\n        };\r\n\r\n        try {\r\n          // Make the PATCH request to update the video\r\n          const response = await axios({\r\n            method: 'patch',\r\n            url: `/videos/${editingVideo.id}`,  // Ensure this matches your backend API endpoint\r\n            data: updatedData,\r\n            headers: {\r\n              Accept: 'application/json',\r\n              Authorization: `Bearer ${auth.accessToken}`,\r\n            },\r\n          });\r\n\r\n          // Assuming the response contains the updated video\r\n          setVideos((prevVideos) =>\r\n            prevVideos.map((video) =>\r\n              video.id === editingVideo.id ? { ...video, ...updatedData } : video\r\n            )\r\n          );\r\n          \r\n          setEditingVideo(null);  // Clear the editing state\r\n          alert('Video updated successfully!');\r\n        } catch (error) {\r\n          if (error.response) {\r\n            alert(`Error updating video: ${error.response.data.message || 'Unknown error'}`);\r\n          } else if (error.request) {\r\n            alert(\"No response received from server. Please try again later.\");\r\n          } else {\r\n            alert(\"An unexpected error occurred. Please try again.\");\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (editingVideo) {\r\n      setEditingVideo((prev) => ({ ...prev, [name]: value }));\r\n    } else {\r\n      setNewVideo((prev) => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"video-box\">\r\n      <div className=\"Video-View-Box\">\r\n        <h2>Videos for Movie</h2>\r\n\r\n        <div className=\"card-display-videos\">\r\n          {videos.length === 0 ? (\r\n            <p>No videos found for this movie.</p>\r\n          ) : (\r\n            videos.map((video) => {\r\n              const videoId = getYouTubeVideoId(video.url);\r\n              return (\r\n                <div key={video.id} className=\"card-video\">\r\n                  {videoId ? (\r\n                    <iframe\r\n                      width=\"100%\"\r\n                      height=\"315\"\r\n                      src={`https://www.youtube.com/embed/${videoId}`}\r\n                      title=\"Video\"\r\n                      frameBorder=\"0\"\r\n                      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                      allowFullScreen\r\n                    ></iframe>\r\n                  ) : (\r\n                    <p>Invalid video URL</p>\r\n                  )}\r\n                  <div className=\"container-video\">\r\n                    <h4>{video.description}</h4>\r\n                    <p>Added on: {new Date(video.dateCreated).toLocaleDateString()}</p>\r\n                    <div className=\"buttons-group\">\r\n                      <button className=\"edit-button\" onClick={() => setEditingVideo(video)}>\r\n                        Edit\r\n                      </button>\r\n                      <button className=\"delete-button\" onClick={() => handleDeleteVideo(video.id)}>\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"Video-Search-Box\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"url\"\r\n          placeholder=\"Video URL\"\r\n          value={editingVideo ? editingVideo.url : newVideo.url}\r\n          onChange={handleInputChange}\r\n          className=\"video-search-input\"\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder=\"Video Description\"\r\n          value={editingVideo ? editingVideo.description : newVideo.description}\r\n          onChange={handleInputChange}\r\n          className=\"video-search-input\"\r\n        ></textarea>\r\n        <div className=\"video-search-buttons\">\r\n          <button\r\n            className=\"search-btn\"\r\n            onClick={editingVideo ? handleUpdateVideo : handleAddVideo}\r\n            disabled={isSaving}\r\n          >\r\n            {isSaving ? 'Saving...' : editingVideo ? 'Update Video' : 'Add Video'}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Videos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}