{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\CastandCrew\\\\CastandCrew.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\nimport './CastandCrew.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CastAndCrew = () => {\n  _s();\n  const [savedCast, setSavedCast] = useState([]); // Store the saved cast\n  const [importedCast, setImportedCast] = useState([]); // Store the imported cast\n  const [importStatus, setImportStatus] = useState(''); // Import status message\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const {\n    movieId\n  } = useParams();\n  const navigate = useNavigate();\n  const API_BASE_URL = 'https://api.themoviedb.org/3';\n  const TMDB_HEADERS = {\n    Accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NTAxODgxZmE3YWRhZTQzYWY0MGFmNDA1YzFjODliNCIsIm5iZiI6MTczMjU5NTU3OS4yMjMwMTI3LCJzdWIiOiI2NzEyZmFiYTI1YzcwYjhiMWQ2N2Y4YjQiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.oJ-YA-BPl-l8XBcp_VYDJDTO66e31OMKA-igarucAqE' // Replace with your actual API key\n  };\n\n  // Fetch movie data on mount\n  useEffect(() => {\n    if (movieId) {\n      const fetchMovie = async () => {\n        try {\n          const response = await axios.get(`/movies/${movieId}`);\n          setSelectedMovie(response.data);\n          fetchSavedCast(response.data.tmdbId); // Fetch saved cast after movie is selected\n        } catch (err) {\n          console.error('Error fetching movie:', err);\n          setImportStatus('Failed to load movie details. Please try again later.');\n        }\n      };\n      fetchMovie();\n    }\n  }, [movieId]);\n\n  // Fetch saved cast from the database\n  const fetchSavedCast = async tmdbId => {\n    try {\n      const response = await axios.get(`/casts?movieId=${tmdbId}`);\n      if (response.data.length === 0) {\n        setImportStatus('No cast members saved for this movie.');\n      }\n      setSavedCast(response.data); // Set the saved cast to state\n    } catch (err) {\n      console.error('Error fetching saved cast:', err);\n      setImportStatus('Failed to load saved cast. Please try again later.');\n    }\n  };\n\n  // Import the cast from TMDb\n  const importCasts = async () => {\n    if (!(selectedMovie !== null && selectedMovie !== void 0 && selectedMovie.tmdbId)) {\n      setImportStatus(\"Please select a movie first.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${API_BASE_URL}/movie/${selectedMovie.tmdbId}/credits?language=en-US`, {\n        headers: TMDB_HEADERS\n      });\n      const castList = response.data.cast;\n      if (castList.length === 0) {\n        setImportStatus('No cast members found in TMDb for this movie.');\n      } else {\n        setImportedCast(castList);\n        setImportStatus(`Successfully imported ${castList.length} cast members.`);\n      }\n    } catch (err) {\n      console.error('Error fetching cast:', err);\n      setImportStatus('Failed to import cast. Please try again.');\n    }\n  };\n\n  // Save the imported cast to the database\n  const saveImportedCasts = async () => {\n    if (importedCast.length === 0) {\n      setImportStatus(\"No cast to save.\");\n      return;\n    }\n    const accessToken = localStorage.getItem('accessToken');\n    if (!accessToken) {\n      setImportStatus('You need to be logged in to save the cast.');\n      return;\n    }\n    try {\n      await Promise.all(importedCast.map(async cast => {\n        const payload = {\n          userId: selectedMovie.userId,\n          // Assuming userId is available from selectedMovie\n          movieId: selectedMovie.tmdbId,\n          name: cast.name,\n          characterName: cast.character,\n          url: cast.profile_path ? `https://image.tmdb.org/t/p/w500${cast.profile_path}` : ''\n        };\n        const response = await axios.post('/casts', payload, {\n          headers: {\n            Accept: 'application/json',\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        console.log('Saved cast:', response.data);\n      }));\n      setImportStatus(\"Successfully saved imported cast.\");\n      fetchSavedCast(selectedMovie.tmdbId); // Refresh the list of saved casts\n    } catch (err) {\n      console.error('Error saving cast:', err);\n      setImportStatus(\"Failed to save imported cast.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cast-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cast-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"cast-header-title\",\n        children: \"Cast & Crew\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: importCasts,\n          children: \"Import Cast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveImportedCasts,\n          children: \"Save Imported Cast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), importStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"alert-box\",\n      children: importStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 24\n    }, this), savedCast.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cast-cards-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cast-cards\",\n        children: savedCast.map((cast, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cast-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: cast.url || 'https://via.placeholder.com/200' // Fallback image if no profile picture\n            ,\n            alt: cast.name,\n            className: \"cast-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cast-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: cast.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: cast.characterName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No cast members saved for this movie yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), importedCast.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cast-cards-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cast-cards\",\n        children: importedCast.map((cast, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cast-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w500${cast.profile_path}`,\n            alt: cast.name,\n            className: \"cast-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cast-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: cast.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: cast.character\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveImportedCasts,\n        children: \"Save Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(CastAndCrew, \"91cefw5daW6nSW7YNVXcxY0KttA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CastAndCrew;\nexport default CastAndCrew;\nvar _c;\n$RefreshReg$(_c, \"CastAndCrew\");","map":{"version":3,"names":["useEffect","useState","axios","useParams","useNavigate","AuthContext","jsxDEV","_jsxDEV","CastAndCrew","_s","savedCast","setSavedCast","importedCast","setImportedCast","importStatus","setImportStatus","selectedMovie","setSelectedMovie","movieId","navigate","API_BASE_URL","TMDB_HEADERS","Accept","Authorization","fetchMovie","response","get","data","fetchSavedCast","tmdbId","err","console","error","length","importCasts","headers","castList","cast","saveImportedCasts","accessToken","localStorage","getItem","Promise","all","map","payload","userId","name","characterName","character","url","profile_path","post","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/CastandCrew/CastandCrew.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\r\nimport './CastandCrew.css';\r\n\r\nconst CastAndCrew = () => {\r\n  const [savedCast, setSavedCast] = useState([]); // Store the saved cast\r\n  const [importedCast, setImportedCast] = useState([]); // Store the imported cast\r\n  const [importStatus, setImportStatus] = useState(''); // Import status message\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const { movieId } = useParams();\r\n  const navigate = useNavigate();\r\n  const API_BASE_URL = 'https://api.themoviedb.org/3';\r\n  const TMDB_HEADERS = {\r\n    Accept: 'application/json',\r\n    Authorization:\r\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NTAxODgxZmE3YWRhZTQzYWY0MGFmNDA1YzFjODliNCIsIm5iZiI6MTczMjU5NTU3OS4yMjMwMTI3LCJzdWIiOiI2NzEyZmFiYTI1YzcwYjhiMWQ2N2Y4YjQiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.oJ-YA-BPl-l8XBcp_VYDJDTO66e31OMKA-igarucAqE', // Replace with your actual API key\r\n  };\r\n\r\n  // Fetch movie data on mount\r\n  useEffect(() => {\r\n    if (movieId) {\r\n      const fetchMovie = async () => {\r\n        try {\r\n          const response = await axios.get(`/movies/${movieId}`);\r\n          setSelectedMovie(response.data);\r\n          fetchSavedCast(response.data.tmdbId); // Fetch saved cast after movie is selected\r\n        } catch (err) {\r\n          console.error('Error fetching movie:', err);\r\n          setImportStatus('Failed to load movie details. Please try again later.');\r\n        }\r\n      };\r\n\r\n      fetchMovie();\r\n    }\r\n  }, [movieId]);\r\n\r\n  // Fetch saved cast from the database\r\n  const fetchSavedCast = async (tmdbId) => {\r\n    try {\r\n      const response = await axios.get(`/casts?movieId=${tmdbId}`);\r\n      if (response.data.length === 0) {\r\n        setImportStatus('No cast members saved for this movie.');\r\n      }\r\n      setSavedCast(response.data); // Set the saved cast to state\r\n    } catch (err) {\r\n      console.error('Error fetching saved cast:', err);\r\n      setImportStatus('Failed to load saved cast. Please try again later.');\r\n    }\r\n  };\r\n\r\n  // Import the cast from TMDb\r\n  const importCasts = async () => {\r\n    if (!selectedMovie?.tmdbId) {\r\n      setImportStatus(\"Please select a movie first.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `${API_BASE_URL}/movie/${selectedMovie.tmdbId}/credits?language=en-US`,\r\n        { headers: TMDB_HEADERS }\r\n      );\r\n      const castList = response.data.cast;\r\n      if (castList.length === 0) {\r\n        setImportStatus('No cast members found in TMDb for this movie.');\r\n      } else {\r\n        setImportedCast(castList);\r\n        setImportStatus(`Successfully imported ${castList.length} cast members.`);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching cast:', err);\r\n      setImportStatus('Failed to import cast. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Save the imported cast to the database\r\n  const saveImportedCasts = async () => {\r\n    if (importedCast.length === 0) {\r\n      setImportStatus(\"No cast to save.\");\r\n      return;\r\n    }\r\n\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    if (!accessToken) {\r\n      setImportStatus('You need to be logged in to save the cast.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await Promise.all(\r\n        importedCast.map(async (cast) => {\r\n          const payload = {\r\n            userId: selectedMovie.userId,  // Assuming userId is available from selectedMovie\r\n            movieId: selectedMovie.tmdbId,\r\n            name: cast.name,\r\n            characterName: cast.character,\r\n            url: cast.profile_path ? `https://image.tmdb.org/t/p/w500${cast.profile_path}` : '',\r\n          };\r\n\r\n          const response = await axios.post('/casts', payload, {\r\n            headers: {\r\n              Accept: 'application/json',\r\n              Authorization: `Bearer ${accessToken}`,\r\n            },\r\n          });\r\n\r\n          console.log('Saved cast:', response.data);\r\n        })\r\n      );\r\n      setImportStatus(\"Successfully saved imported cast.\");\r\n      fetchSavedCast(selectedMovie.tmdbId); // Refresh the list of saved casts\r\n    } catch (err) {\r\n      console.error('Error saving cast:', err);\r\n      setImportStatus(\"Failed to save imported cast.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cast-container\">\r\n      <div className=\"cast-header\">\r\n        <h2 className=\"cast-header-title\">Cast & Crew</h2>\r\n        <div>\r\n          <button onClick={importCasts}>Import Cast</button>\r\n          <button onClick={saveImportedCasts}>Save Imported Cast</button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Status message */}\r\n      {importStatus && <p className=\"alert-box\">{importStatus}</p>}\r\n\r\n      {/* Display Saved Cast */}\r\n      {savedCast.length > 0 ? (\r\n        <div className=\"cast-cards-container\">\r\n          <div className=\"cast-cards\">\r\n            {savedCast.map((cast, index) => (\r\n              <div key={index} className=\"cast-card\">\r\n                <img\r\n                  src={cast.url || 'https://via.placeholder.com/200'} // Fallback image if no profile picture\r\n                  alt={cast.name}\r\n                  className=\"cast-image\"\r\n                />\r\n                <div className=\"cast-info\">\r\n                  <h3>{cast.name}</h3>\r\n                  <p>{cast.characterName}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>No cast members saved for this movie yet.</p>\r\n      )}\r\n\r\n      {/* Display Imported Cast */}\r\n      {importedCast.length > 0 && (\r\n        <div className=\"cast-cards-container\">\r\n          <div className=\"cast-cards\">\r\n            {importedCast.map((cast, index) => (\r\n              <div key={index} className=\"cast-card\">\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w500${cast.profile_path}`}\r\n                  alt={cast.name}\r\n                  className=\"cast-image\"\r\n                />\r\n                <div className=\"cast-info\">\r\n                  <h3>{cast.name}</h3>\r\n                  <p>{cast.character}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Buttons */}\r\n      <div className=\"button-group\">\r\n        <button onClick={saveImportedCasts}>Save Cast</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CastAndCrew;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}