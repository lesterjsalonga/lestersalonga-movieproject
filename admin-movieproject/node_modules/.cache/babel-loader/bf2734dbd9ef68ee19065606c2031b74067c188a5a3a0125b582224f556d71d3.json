{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Videos\\\\Videos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\nimport { useParams } from 'react-router-dom';\nimport VideosForm from './VideosForm';\nimport './Videos.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Videos() {\n  _s();\n  const {\n    auth\n  } = useContext(AuthContext);\n  const {\n    movieId\n  } = useParams();\n  const [videos, setVideos] = useState([]);\n  const [newVideo, setNewVideo] = useState({\n    url: '',\n    description: ''\n  });\n  const [editingVideo, setEditingVideo] = useState(null);\n  const [isSaving, setIsSaving] = useState(false);\n  const urlRef = useRef();\n  const descriptionRef = useRef();\n\n  // Fetch videos associated with the current movie\n  useEffect(() => {\n    const fetchVideos = async () => {\n      try {\n        const response = await axios.get(`/movies/${movieId}/videos`, {\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        if (Array.isArray(response.data.videos)) {\n          setVideos(response.data.videos);\n        } else {\n          console.error('Error: No videos found or videos is not an array');\n          setVideos([]);\n        }\n      } catch (error) {\n        console.error('Error fetching videos:', error);\n        setVideos([]);\n      }\n    };\n    fetchVideos();\n  }, [movieId, auth.accessToken]);\n\n  // Helper function to extract YouTube video ID from URL\n  const getYouTubeVideoId = url => {\n    const regex = /(?:https?:\\/\\/(?:www\\.)?youtube\\.com\\/(?:watch\\?v=|embed\\/)([\\w-]+))/i;\n    const match = url.match(regex);\n    return match ? match[1] : null;\n  };\n\n  // Add or update video function\n  const handleAddOrUpdateVideo = async () => {\n    const videoId = getYouTubeVideoId(newVideo.url);\n    if (!videoId || !newVideo.description) {\n      alert('Please provide a valid YouTube URL and description.');\n      return;\n    }\n    setIsSaving(true);\n    try {\n      const videoData = {\n        movieId,\n        url: newVideo.url,\n        description: newVideo.description,\n        userId: auth.user.userId\n      };\n      let response;\n      if (editingVideo) {\n        response = await axios.patch(`/videos/${editingVideo.id}`, videoData, {\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        alert('Video updated successfully!');\n      } else {\n        response = await axios.post('/videos', videoData, {\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        alert('Video added successfully!');\n      }\n      setVideos(prevVideos => editingVideo ? prevVideos.map(video => video.id === editingVideo.id ? {\n        ...video,\n        ...videoData\n      } : video) : [...prevVideos, response.data]);\n      setNewVideo({\n        url: '',\n        description: ''\n      });\n      setEditingVideo(null); // Reset editing state\n      window.location.reload(); // Refresh the page\n    } catch (error) {\n      console.error('Error adding or updating video:', error);\n      alert('Failed to save video.');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const handleDeleteVideo = async id => {\n    if (window.confirm('Are you sure you want to delete this video?')) {\n      try {\n        await axios.delete(`/videos/${id}`, {\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        setVideos(prevVideos => prevVideos.filter(video => video.id !== id));\n        alert('Video deleted successfully!');\n      } catch (error) {\n        console.error('Error deleting video:', error);\n        alert('Failed to delete video.');\n      }\n    }\n  };\n  const handleEditVideo = video => {\n    setEditingVideo(video);\n    setNewVideo({\n      url: video.url,\n      description: video.description\n    });\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewVideo(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Video-View-Box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Videos for Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-display-videos\",\n        children: videos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No videos found for this movie.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this) : videos.map(video => {\n          const videoId = getYouTubeVideoId(video.url);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-video\",\n            children: [videoId ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n              width: \"100%\",\n              height: \"315\",\n              src: `https://www.youtube.com/embed/${videoId}`,\n              title: \"Video\",\n              frameBorder: \"0\",\n              allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n              allowFullScreen: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Invalid video URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-video\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: video.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Added on: \", new Date(video.dateCreated).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"buttons-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"edit-button\",\n                  onClick: () => handleEditVideo(video),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button\",\n                  onClick: () => handleDeleteVideo(video.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this)]\n          }, video.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideosForm, {\n      videoData: newVideo,\n      onSubmit: handleAddOrUpdateVideo,\n      onChange: handleInputChange,\n      isSaving: isSaving,\n      editingVideo: editingVideo,\n      urlRef: urlRef,\n      descriptionRef: descriptionRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(Videos, \"1OjpM6dUi+THkp3bI1Vp9PmmTGs=\", false, function () {\n  return [useParams];\n});\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","axios","AuthContext","useParams","VideosForm","jsxDEV","_jsxDEV","Videos","_s","auth","movieId","videos","setVideos","newVideo","setNewVideo","url","description","editingVideo","setEditingVideo","isSaving","setIsSaving","urlRef","descriptionRef","fetchVideos","response","get","headers","Authorization","accessToken","Array","isArray","data","console","error","getYouTubeVideoId","regex","match","handleAddOrUpdateVideo","videoId","alert","videoData","userId","user","patch","id","post","prevVideos","map","video","window","location","reload","handleDeleteVideo","confirm","delete","filter","handleEditVideo","handleInputChange","e","name","value","target","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","width","height","src","title","frameBorder","allow","allowFullScreen","Date","dateCreated","toLocaleDateString","onClick","onSubmit","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Videos/Videos.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\r\nimport { useParams } from 'react-router-dom';\r\nimport VideosForm from './VideosForm';\r\nimport './Videos.css';\r\n\r\nfunction Videos() {\r\n  const { auth } = useContext(AuthContext);\r\n  const { movieId } = useParams();\r\n  const [videos, setVideos] = useState([]);\r\n  const [newVideo, setNewVideo] = useState({ url: '', description: '' });\r\n  const [editingVideo, setEditingVideo] = useState(null);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  const urlRef = useRef();\r\n  const descriptionRef = useRef();\r\n\r\n  // Fetch videos associated with the current movie\r\n  useEffect(() => {\r\n    const fetchVideos = async () => {\r\n      try {\r\n        const response = await axios.get(`/movies/${movieId}/videos`, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n        });\r\n\r\n        if (Array.isArray(response.data.videos)) {\r\n          setVideos(response.data.videos);\r\n        } else {\r\n          console.error('Error: No videos found or videos is not an array');\r\n          setVideos([]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching videos:', error);\r\n        setVideos([]);\r\n      }\r\n    };\r\n\r\n    fetchVideos();\r\n  }, [movieId, auth.accessToken]);\r\n\r\n  // Helper function to extract YouTube video ID from URL\r\n  const getYouTubeVideoId = (url) => {\r\n    const regex =\r\n      /(?:https?:\\/\\/(?:www\\.)?youtube\\.com\\/(?:watch\\?v=|embed\\/)([\\w-]+))/i;\r\n    const match = url.match(regex);\r\n    return match ? match[1] : null;\r\n  };\r\n\r\n  // Add or update video function\r\n  const handleAddOrUpdateVideo = async () => {\r\n    const videoId = getYouTubeVideoId(newVideo.url);\r\n    if (!videoId || !newVideo.description) {\r\n      alert('Please provide a valid YouTube URL and description.');\r\n      return;\r\n    }\r\n\r\n    setIsSaving(true);\r\n    try {\r\n      const videoData = {\r\n        movieId,\r\n        url: newVideo.url,\r\n        description: newVideo.description,\r\n        userId: auth.user.userId,\r\n      };\r\n\r\n      let response;\r\n      if (editingVideo) {\r\n        response = await axios.patch(`/videos/${editingVideo.id}`, videoData, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n        });\r\n        alert('Video updated successfully!');\r\n      } else {\r\n        response = await axios.post('/videos', videoData, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n        });\r\n        alert('Video added successfully!');\r\n      }\r\n\r\n      setVideos((prevVideos) =>\r\n        editingVideo\r\n          ? prevVideos.map((video) =>\r\n              video.id === editingVideo.id ? { ...video, ...videoData } : video\r\n            )\r\n          : [...prevVideos, response.data]\r\n      );\r\n\r\n      setNewVideo({ url: '', description: '' });\r\n      setEditingVideo(null); // Reset editing state\r\n      window.location.reload(); // Refresh the page\r\n\r\n    } catch (error) {\r\n      console.error('Error adding or updating video:', error);\r\n      alert('Failed to save video.');\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteVideo = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this video?')) {\r\n      try {\r\n        await axios.delete(`/videos/${id}`, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n        });\r\n        setVideos((prevVideos) => prevVideos.filter((video) => video.id !== id));\r\n        alert('Video deleted successfully!');\r\n      } catch (error) {\r\n        console.error('Error deleting video:', error);\r\n        alert('Failed to delete video.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEditVideo = (video) => {\r\n    setEditingVideo(video);\r\n    setNewVideo({ url: video.url, description: video.description });\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewVideo((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"video-box\">\r\n      <div className=\"Video-View-Box\">\r\n        <h2>Videos for Movie</h2>\r\n        <div className=\"card-display-videos\">\r\n          {videos.length === 0 ? (\r\n            <p>No videos found for this movie.</p>\r\n          ) : (\r\n            videos.map((video) => {\r\n              const videoId = getYouTubeVideoId(video.url);\r\n              return (\r\n                <div key={video.id} className=\"card-video\">\r\n                  {videoId ? (\r\n                    <iframe\r\n                      width=\"100%\"\r\n                      height=\"315\"\r\n                      src={`https://www.youtube.com/embed/${videoId}`}\r\n                      title=\"Video\"\r\n                      frameBorder=\"0\"\r\n                      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                      allowFullScreen\r\n                    ></iframe>\r\n                  ) : (\r\n                    <p>Invalid video URL</p>\r\n                  )}\r\n                  <div className=\"container-video\">\r\n                    <h4>{video.description}</h4>\r\n                    <p>Added on: {new Date(video.dateCreated).toLocaleDateString()}</p>\r\n                    <div className=\"buttons-group\">\r\n                      <button className=\"edit-button\" onClick={() => handleEditVideo(video)}>\r\n                        Edit\r\n                      </button>\r\n                      <button className=\"delete-button\" onClick={() => handleDeleteVideo(video.id)}>\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <VideosForm\r\n        videoData={newVideo}\r\n        onSubmit={handleAddOrUpdateVideo}\r\n        onChange={handleInputChange}\r\n        isSaving={isSaving}\r\n        editingVideo={editingVideo}\r\n        urlRef={urlRef}\r\n        descriptionRef={descriptionRef}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Videos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}