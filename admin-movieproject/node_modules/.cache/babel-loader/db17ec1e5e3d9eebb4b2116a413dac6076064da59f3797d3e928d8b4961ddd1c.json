{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Videos\\\\Videos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext, useCallback, useRef } from \"react\";\nimport { AuthContext } from \"../../../../../context/context\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport \"./Videos.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoForm() {\n  _s();\n  const {\n    auth\n  } = useContext(AuthContext);\n  const [videoId, setVideoId] = useState(undefined);\n  const [videoURL, setVideoURL] = useState(\"\");\n  const [videos, setVideos] = useState([]);\n  const [videokey, setVideoKey] = useState({});\n  const [selectedvideo, setSelectedVideo] = useState({});\n  const urlRef = useRef();\n  const nameRef = useRef();\n  const siteRef = useRef();\n  const videoTypeRef = useRef();\n  let {\n    movieId\n  } = useParams();\n  const getAll = useCallback(movieId => {\n    axios({\n      method: \"get\",\n      url: `/movies/${movieId}`,\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${auth.accessToken}`\n      }\n    }).then(response => {\n      setVideos(response.data.videos);\n    }).catch(error => {\n      console.error(\"Error fetching Videos:\", error.response.data);\n    });\n  }, [auth.accessToken]);\n  const getYouTubeVideoID = url => {\n    if (!url || typeof url !== \"string\") {\n      console.log(\"Invalid URL:\", url);\n      setVideoKey(\"\");\n      return null;\n    }\n    const regex = /(?:https?:\\/\\/(?:www\\.)?youtube\\.com\\/(?:watch\\?v=|embed\\/)([\\w-]+))/i;\n    const match = url.match(regex);\n    if (match && match[1]) {\n      setVideoKey(match[1]);\n      return match[1];\n    } else {\n      setVideoKey(\"\");\n      return null;\n    }\n  };\n  const validateField = (fieldRef, fieldName) => {\n    if (!fieldRef.current) {\n      console.error(`Field ${fieldName} ref is not assigned.`);\n      return false;\n    }\n    if (!fieldRef.current.value.trim()) {\n      fieldRef.current.style.border = \"2px solid red\";\n      setTimeout(() => {\n        fieldRef.current.style.border = \"1px solid #ccc\";\n      }, 2000);\n      console.log(`${fieldName} cannot be empty.`);\n      return false;\n    }\n    return true;\n  };\n  const handlesave = async () => {\n    const dataphoto = {\n      userId: auth.user.userId,\n      movieId: movieId,\n      url: `https://www.youtube.com/embed/${videokey}`,\n      videoKey: videokey,\n      name: selectedvideo.name,\n      site: selectedvideo.site,\n      videoType: selectedvideo.videoType,\n      official: selectedvideo.official\n    };\n    console.table(dataphoto);\n    const validateFields = () => {\n      const isUrlValid = validateField(urlRef, \"YouTube Link\");\n      if (isUrlValid) {\n        const videoKey = getYouTubeVideoID(urlRef.current.value);\n        if (!videoKey) {\n          urlRef.current.style.border = \"2px solid red\";\n          setTimeout(() => {\n            urlRef.current.style.border = \"1px solid #ccc\";\n          }, 2000);\n          console.log(\"Invalid YouTube link. Please enter a valid URL.\");\n          alert(\"Invalid YouTube link. Please enter a valid URL.\");\n          return false;\n        }\n      }\n      const isNameValid = validateField(nameRef, \"Title Name\");\n      const isSiteValid = validateField(siteRef, \"Site Type\");\n      const isVideoTypeValid = validateField(videoTypeRef, \"Video Type\");\n      return isUrlValid && isNameValid && isSiteValid && isVideoTypeValid;\n    };\n    if (!validateFields()) {\n      return;\n    } else {\n      try {\n        const dataphoto = {\n          userId: auth.user.id,\n          movieId: movieId,\n          url: `https://www.youtube.com/embed/${videokey}`,\n          videoKey: videokey,\n          name: selectedvideo.name,\n          site: selectedvideo.site,\n          videoType: selectedvideo.videoType,\n          official: selectedvideo.official\n        };\n        await axios({\n          method: \"POST\",\n          url: \"/admin/videos\",\n          data: dataphoto,\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        alert(\"Added Success\");\n        getAll(movieId);\n        setSelectedVideo([]);\n        setVideoURL(\"\");\n        setVideoKey(\"\");\n        getYouTubeVideoID(null);\n        urlRef.current.value = \"\";\n      } catch (error) {\n        var _error$response;\n        console.log(\"Error Saving Video\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n        alert(`Incorrect Link or Error: ${error.message}`);\n      }\n    }\n  };\n  useEffect(() => {\n    getAll(movieId);\n  }, [movieId, getAll]);\n  const handledelete = async id => {\n    const isConfirm = window.confirm(\"Are you sure you want to delete this Video?\");\n    if (isConfirm) {\n      try {\n        const response = await axios({\n          method: \"delete\",\n          url: `/videos/${id}`,\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        alert(\"Delete successful!\");\n        console.log(response);\n        getAll(movieId);\n      } catch (err) {\n        console.error(\"Error deleting video:\", err.message);\n        alert(\"An error occurred while deleting the video.\");\n      }\n    }\n  };\n  const videoget = async id => {\n    axios({\n      method: \"get\",\n      url: `/videos/${id}`,\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${auth.accessToken}`\n      }\n    }).then(response => {\n      setSelectedVideo(response.data);\n      setVideoId(response.data.id);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const handleclear = useCallback(() => {\n    setSelectedVideo([]);\n    setVideoId(undefined);\n    setVideoKey(\"\");\n    setVideoURL(\"\");\n    urlRef.current.value = \"\";\n  }, [setSelectedVideo, setVideoId, setVideoKey, setVideoURL]);\n  const videoUpdate = async id => {\n    const validateFields = () => {\n      const isUrlValid = validateField(urlRef, \"YouTube Link\");\n      if (isUrlValid) {\n        const videoKey = getYouTubeVideoID(urlRef.current.value);\n        if (!videoKey) {\n          urlRef.current.style.border = \"2px solid red\";\n          setTimeout(() => {\n            urlRef.current.style.border = \"1px solid #ccc\";\n          }, 2000);\n          console.log(\"Invalid YouTube link. Please enter a valid URL.\");\n          alert(\"Invalid YouTube link. Please enter a valid URL.\");\n          return false;\n        }\n      }\n      const isNameValid = validateField(nameRef, \"Title Name\");\n      const isSiteValid = validateField(siteRef, \"Site Type\");\n      const isVideoTypeValid = validateField(videoTypeRef, \"Video Type\");\n      return isUrlValid && isNameValid && isSiteValid && isVideoTypeValid;\n    };\n    if (!validateFields()) {\n      return;\n    } else {\n      const isConfirm = window.confirm(\"Are you sure you want to update the Video?\");\n      if (isConfirm) {\n        const data = {\n          ...(videokey ? {\n            url: `https://www.youtube.com/embed/${videokey}`,\n            videoKey: videokey\n          } : {\n            url: selectedvideo.url,\n            videoKey: selectedvideo.videoKey\n          }),\n          name: selectedvideo.name,\n          site: selectedvideo.site,\n          videoType: selectedvideo.videoType,\n          official: selectedvideo.official\n        };\n        try {\n          const response = await axios({\n            method: \"patch\",\n            url: `/videos/${id}`,\n            data: data,\n            headers: {\n              Accept: \"application/json\",\n              Authorization: `Bearer ${auth.accessToken}`\n            }\n          });\n          alert(\"updated Successfully!\");\n          console.log(response.message);\n          handleclear();\n          getAll(movieId);\n        } catch (error) {\n          var _error$response2;\n          console.error(\"Error updating cast:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Video-View-Box\",\n      children: videos !== undefined && videos.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-display-videos\",\n        children: videos.map(items => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-video\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"delete-button\",\n              onClick: () => handledelete(items.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTrashAlt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"edit-button\",\n              onClick: () => videoget(items.id),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faEdit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n            title: \"video\",\n            width: \"280\",\n            height: \"158\",\n            src: `https://www.youtube.com/embed/${items.videoKey}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 19\n          }, this)]\n        }, items.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Videos Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"YouTube Link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ref: urlRef,\n          defaultValue: selectedvideo.url,\n          placeholder: \"YouTube video URL\",\n          onChange: e => {\n            setVideoURL(e.target.value);\n            getYouTubeVideoID(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: nameRef,\n          defaultValue: selectedvideo.name,\n          onChange: e => setSelectedVideo({\n            ...selectedvideo,\n            name: e.target.value\n          }),\n          type: \"text\",\n          placeholder: \"Video Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Site\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: siteRef,\n          defaultValue: selectedvideo.site,\n          onChange: e => setSelectedVideo({\n            ...selectedvideo,\n            site: e.target.value\n          }),\n          type: \"text\",\n          placeholder: \"Site Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Video Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: videoTypeRef,\n          defaultValue: selectedvideo.videoType,\n          onChange: e => setSelectedVideo({\n            ...selectedvideo,\n            videoType: e.target.value\n          }),\n          type: \"text\",\n          placeholder: \"Video Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handlesave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleclear,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }, this), selectedvideo.id && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => videoUpdate(selectedvideo.id),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 286,\n    columnNumber: 7\n  }, this);\n}\n_s(VideoForm, \"kc3E4I3wBEc43Vyct7uzOUiWJE8=\", false, function () {\n  return [useParams];\n});\n_c = VideoForm;\nexport default VideoForm;\nvar _c;\n$RefreshReg$(_c, \"VideoForm\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useCallback","useRef","AuthContext","FontAwesomeIcon","faTrashAlt","faEdit","axios","useParams","jsxDEV","_jsxDEV","VideoForm","_s","auth","videoId","setVideoId","undefined","videoURL","setVideoURL","videos","setVideos","videokey","setVideoKey","selectedvideo","setSelectedVideo","urlRef","nameRef","siteRef","videoTypeRef","movieId","getAll","method","url","headers","Accept","Authorization","accessToken","then","response","data","catch","error","console","getYouTubeVideoID","log","regex","match","validateField","fieldRef","fieldName","current","value","trim","style","border","setTimeout","handlesave","dataphoto","userId","user","videoKey","name","site","videoType","official","table","validateFields","isUrlValid","alert","isNameValid","isSiteValid","isVideoTypeValid","id","_error$response","message","handledelete","isConfirm","window","confirm","err","videoget","handleclear","videoUpdate","_error$response2","className","children","length","map","items","type","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","title","width","height","src","ref","defaultValue","placeholder","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Videos/Videos.jsx"],"sourcesContent":["import React, {\r\n    useEffect,\r\n    useState,\r\n    useContext,\r\n    useCallback,\r\n    useRef,\r\n  } from \"react\";\r\n  import { AuthContext } from \"../../../../../context/context\";\r\n  import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n  import { faTrashAlt, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\n  import axios from \"axios\";\r\n  import { useParams } from \"react-router-dom\";\r\n  import \"./Videos.css\";\r\n  \r\n  function VideoForm() {\r\n    const { auth } = useContext(AuthContext);\r\n    const [videoId, setVideoId] = useState(undefined);\r\n    const [videoURL, setVideoURL] = useState(\"\");\r\n    const [videos, setVideos] = useState([]);\r\n    const [videokey, setVideoKey] = useState({});\r\n    const [selectedvideo, setSelectedVideo] = useState({});\r\n    const urlRef = useRef();\r\n    const nameRef = useRef();\r\n    const siteRef = useRef();\r\n    const videoTypeRef = useRef();\r\n    let { movieId } = useParams();\r\n  \r\n    const getAll = useCallback(\r\n      (movieId) => {\r\n        axios({\r\n          method: \"get\",\r\n          url: `/movies/${movieId}`,\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            Authorization: `Bearer ${auth.accessToken}`,\r\n          },\r\n        })\r\n          .then((response) => {\r\n            setVideos(response.data.videos);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching Videos:\", error.response.data);\r\n          });\r\n      },\r\n      [auth.accessToken]\r\n    );\r\n  \r\n    const getYouTubeVideoID = (url) => {\r\n      if (!url || typeof url !== \"string\") {\r\n        console.log(\"Invalid URL:\", url);\r\n        setVideoKey(\"\");\r\n        return null;\r\n      }\r\n  \r\n      const regex =\r\n        /(?:https?:\\/\\/(?:www\\.)?youtube\\.com\\/(?:watch\\?v=|embed\\/)([\\w-]+))/i;\r\n      const match = url.match(regex);\r\n  \r\n      if (match && match[1]) {\r\n        setVideoKey(match[1]);\r\n        return match[1];\r\n      } else {\r\n        setVideoKey(\"\");\r\n        return null;\r\n      }\r\n    };\r\n  \r\n    const validateField = (fieldRef, fieldName) => {\r\n      if (!fieldRef.current) {\r\n        console.error(`Field ${fieldName} ref is not assigned.`);\r\n        return false;\r\n      }\r\n  \r\n      if (!fieldRef.current.value.trim()) {\r\n        fieldRef.current.style.border = \"2px solid red\";\r\n        setTimeout(() => {\r\n          fieldRef.current.style.border = \"1px solid #ccc\";\r\n        }, 2000);\r\n        console.log(`${fieldName} cannot be empty.`);\r\n        return false;\r\n      }\r\n  \r\n      return true;\r\n    };\r\n  \r\n    const handlesave = async () => {\r\n      const dataphoto = {\r\n        userId: auth.user.userId,\r\n        movieId: movieId,\r\n        url: `https://www.youtube.com/embed/${videokey}`,\r\n        videoKey: videokey,\r\n        name: selectedvideo.name,\r\n        site: selectedvideo.site,\r\n        videoType: selectedvideo.videoType,\r\n        official: selectedvideo.official,\r\n      };\r\n      console.table(dataphoto);\r\n  \r\n      const validateFields = () => {\r\n        const isUrlValid = validateField(urlRef, \"YouTube Link\");\r\n  \r\n        if (isUrlValid) {\r\n          const videoKey = getYouTubeVideoID(urlRef.current.value);\r\n          if (!videoKey) {\r\n            urlRef.current.style.border = \"2px solid red\";\r\n            setTimeout(() => {\r\n              urlRef.current.style.border = \"1px solid #ccc\";\r\n            }, 2000);\r\n            console.log(\"Invalid YouTube link. Please enter a valid URL.\");\r\n            alert(\"Invalid YouTube link. Please enter a valid URL.\");\r\n            return false;\r\n          }\r\n        }\r\n  \r\n        const isNameValid = validateField(nameRef, \"Title Name\");\r\n        const isSiteValid = validateField(siteRef, \"Site Type\");\r\n        const isVideoTypeValid = validateField(videoTypeRef, \"Video Type\");\r\n  \r\n        return isUrlValid && isNameValid && isSiteValid && isVideoTypeValid;\r\n      };\r\n  \r\n      if (!validateFields()) {\r\n        return;\r\n      } else {\r\n        try {\r\n          const dataphoto = {\r\n            userId: auth.user.id,\r\n            movieId: movieId,\r\n            url: `https://www.youtube.com/embed/${videokey}`,\r\n            videoKey: videokey,\r\n            name: selectedvideo.name,\r\n            site: selectedvideo.site,\r\n            videoType: selectedvideo.videoType,\r\n            official: selectedvideo.official,\r\n          };\r\n          await axios({\r\n            method: \"POST\",\r\n            url: \"/admin/videos\",\r\n            data: dataphoto,\r\n            headers: {\r\n              Authorization: `Bearer ${auth.accessToken}`,\r\n            },\r\n          });\r\n          alert(\"Added Success\");\r\n          getAll(movieId);\r\n          setSelectedVideo([]);\r\n          setVideoURL(\"\");\r\n          setVideoKey(\"\");\r\n          getYouTubeVideoID(null);\r\n          urlRef.current.value = \"\";\r\n        } catch (error) {\r\n          console.log(\r\n            \"Error Saving Video\",\r\n            error.response?.data || error.message\r\n          );\r\n          alert(`Incorrect Link or Error: ${error.message}`);\r\n        }\r\n      }\r\n    };\r\n  \r\n    useEffect(() => {\r\n      getAll(movieId);\r\n    }, [movieId, getAll]);\r\n  \r\n    const handledelete = async (id) => {\r\n      const isConfirm = window.confirm(\r\n        \"Are you sure you want to delete this Video?\"\r\n      );\r\n  \r\n      if (isConfirm) {\r\n        try {\r\n          const response = await axios({\r\n            method: \"delete\",\r\n            url: `/videos/${id}`,\r\n            headers: {\r\n              Authorization: `Bearer ${auth.accessToken}`,\r\n            },\r\n          });\r\n          alert(\"Delete successful!\");\r\n          console.log(response);\r\n          getAll(movieId);\r\n        } catch (err) {\r\n          console.error(\"Error deleting video:\", err.message);\r\n          alert(\"An error occurred while deleting the video.\");\r\n        }\r\n      }\r\n    };\r\n  \r\n    const videoget = async (id) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `/videos/${id}`,\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${auth.accessToken}`,\r\n        },\r\n      })\r\n        .then((response) => {\r\n          setSelectedVideo(response.data);\r\n          setVideoId(response.data.id);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n  \r\n    const handleclear = useCallback(() => {\r\n      setSelectedVideo([]);\r\n      setVideoId(undefined);\r\n      setVideoKey(\"\");\r\n      setVideoURL(\"\");\r\n      urlRef.current.value = \"\";\r\n    }, [setSelectedVideo, setVideoId, setVideoKey, setVideoURL]);\r\n  \r\n    const videoUpdate = async (id) => {\r\n      const validateFields = () => {\r\n        const isUrlValid = validateField(urlRef, \"YouTube Link\");\r\n  \r\n        if (isUrlValid) {\r\n          const videoKey = getYouTubeVideoID(urlRef.current.value);\r\n          if (!videoKey) {\r\n            urlRef.current.style.border = \"2px solid red\";\r\n            setTimeout(() => {\r\n              urlRef.current.style.border = \"1px solid #ccc\";\r\n            }, 2000);\r\n            console.log(\"Invalid YouTube link. Please enter a valid URL.\");\r\n            alert(\"Invalid YouTube link. Please enter a valid URL.\");\r\n            return false;\r\n          }\r\n        }\r\n  \r\n        const isNameValid = validateField(nameRef, \"Title Name\");\r\n        const isSiteValid = validateField(siteRef, \"Site Type\");\r\n        const isVideoTypeValid = validateField(videoTypeRef, \"Video Type\");\r\n  \r\n        return isUrlValid && isNameValid && isSiteValid && isVideoTypeValid;\r\n      };\r\n  \r\n      if (!validateFields()) {\r\n        return;\r\n      } else {\r\n        const isConfirm = window.confirm(\r\n          \"Are you sure you want to update the Video?\"\r\n        );\r\n        if (isConfirm) {\r\n          const data = {\r\n            ...(videokey\r\n              ? {\r\n                  url: `https://www.youtube.com/embed/${videokey}`,\r\n                  videoKey: videokey,\r\n                }\r\n              : {\r\n                  url: selectedvideo.url,\r\n                  videoKey: selectedvideo.videoKey,\r\n                }),\r\n            name: selectedvideo.name,\r\n            site: selectedvideo.site,\r\n            videoType: selectedvideo.videoType,\r\n            official: selectedvideo.official,\r\n          };\r\n          try {\r\n            const response = await axios({\r\n              method: \"patch\",\r\n              url: `/videos/${id}`,\r\n              data: data,\r\n              headers: {\r\n                Accept: \"application/json\",\r\n                Authorization: `Bearer ${auth.accessToken}`,\r\n              },\r\n            });\r\n            alert(\"updated Successfully!\");\r\n            console.log(response.message);\r\n            handleclear();\r\n            getAll(movieId);\r\n          } catch (error) {\r\n            console.error(\r\n              \"Error updating cast:\",\r\n              error.response?.data || error.message\r\n            );\r\n          }\r\n        }\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div className=\"video-box\">\r\n        <div className=\"Video-View-Box\">\r\n          {videos !== undefined && videos.length > 0 ? (\r\n            <div className=\"card-display-videos\">\r\n              {videos.map((items) => (\r\n                <div key={items.id} className=\"card-video\">\r\n                  <div className=\"buttons-group\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"delete-button\"\r\n                      onClick={() => handledelete(items.id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrashAlt} />\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"edit-button\"\r\n                      onClick={() => videoget(items.id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faEdit} />\r\n                    </button>\r\n                  </div>\r\n                  <iframe\r\n                    title=\"video\"\r\n                    width=\"280\"\r\n                    height=\"158\"\r\n                    src={`https://www.youtube.com/embed/${items.videoKey}`}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div>No Videos Available</div>\r\n          )}\r\n        </div>\r\n  \r\n        <div className=\"video-form\">\r\n          <div className=\"form-group\">\r\n            <label>YouTube Link</label>\r\n            <input\r\n              type=\"text\"\r\n              ref={urlRef}\r\n              defaultValue={selectedvideo.url}\r\n              placeholder=\"YouTube video URL\"\r\n              onChange={(e) => {\r\n                setVideoURL(e.target.value);\r\n                getYouTubeVideoID(e.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Title</label>\r\n            <input\r\n              ref={nameRef}\r\n              defaultValue={selectedvideo.name}\r\n              onChange={(e) =>\r\n                setSelectedVideo({ ...selectedvideo, name: e.target.value })\r\n              }\r\n              type=\"text\"\r\n              placeholder=\"Video Title\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Site</label>\r\n            <input\r\n              ref={siteRef}\r\n              defaultValue={selectedvideo.site}\r\n              onChange={(e) =>\r\n                setSelectedVideo({ ...selectedvideo, site: e.target.value })\r\n              }\r\n              type=\"text\"\r\n              placeholder=\"Site Name\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Video Type</label>\r\n            <input\r\n              ref={videoTypeRef}\r\n              defaultValue={selectedvideo.videoType}\r\n              onChange={(e) =>\r\n                setSelectedVideo({ ...selectedvideo, videoType: e.target.value })\r\n              }\r\n              type=\"text\"\r\n              placeholder=\"Video Type\"\r\n            />\r\n          </div>\r\n          <div className=\"form-actions\">\r\n            <button type=\"button\" onClick={handlesave}>\r\n              Save\r\n            </button>\r\n            <button type=\"button\" onClick={handleclear}>\r\n              Clear\r\n            </button>\r\n            {selectedvideo.id && (\r\n              <button type=\"button\" onClick={() => videoUpdate(selectedvideo.id)}>\r\n                Update\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default VideoForm;\r\n  "],"mappings":";;AAAA,OAAOA,KAAK,IACRC,SAAS,EACTC,QAAQ,EACRC,UAAU,EACVC,WAAW,EACXC,MAAM,QACD,OAAO;AACd,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,UAAU,EAAEC,MAAM,QAAQ,mCAAmC;AACtE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAK,CAAC,GAAGb,UAAU,CAACG,WAAW,CAAC;EACxC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAACiB,SAAS,CAAC;EACjD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACwB,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM0B,MAAM,GAAGvB,MAAM,CAAC,CAAC;EACvB,MAAMwB,OAAO,GAAGxB,MAAM,CAAC,CAAC;EACxB,MAAMyB,OAAO,GAAGzB,MAAM,CAAC,CAAC;EACxB,MAAM0B,YAAY,GAAG1B,MAAM,CAAC,CAAC;EAC7B,IAAI;IAAE2B;EAAQ,CAAC,GAAGrB,SAAS,CAAC,CAAC;EAE7B,MAAMsB,MAAM,GAAG7B,WAAW,CACvB4B,OAAO,IAAK;IACXtB,KAAK,CAAC;MACJwB,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE,WAAWH,OAAO,EAAE;MACzBI,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EAAE,UAAUtB,IAAI,CAACuB,WAAW;MAC3C;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAK;MAClBlB,SAAS,CAACkB,QAAQ,CAACC,IAAI,CAACpB,MAAM,CAAC;IACjC,CAAC,CAAC,CACDqB,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACH,QAAQ,CAACC,IAAI,CAAC;IAC9D,CAAC,CAAC;EACN,CAAC,EACD,CAAC1B,IAAI,CAACuB,WAAW,CACnB,CAAC;EAED,MAAMO,iBAAiB,GAAIX,GAAG,IAAK;IACjC,IAAI,CAACA,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;MACnCU,OAAO,CAACE,GAAG,CAAC,cAAc,EAAEZ,GAAG,CAAC;MAChCV,WAAW,CAAC,EAAE,CAAC;MACf,OAAO,IAAI;IACb;IAEA,MAAMuB,KAAK,GACT,uEAAuE;IACzE,MAAMC,KAAK,GAAGd,GAAG,CAACc,KAAK,CAACD,KAAK,CAAC;IAE9B,IAAIC,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAE;MACrBxB,WAAW,CAACwB,KAAK,CAAC,CAAC,CAAC,CAAC;MACrB,OAAOA,KAAK,CAAC,CAAC,CAAC;IACjB,CAAC,MAAM;MACLxB,WAAW,CAAC,EAAE,CAAC;MACf,OAAO,IAAI;IACb;EACF,CAAC;EAED,MAAMyB,aAAa,GAAGA,CAACC,QAAQ,EAAEC,SAAS,KAAK;IAC7C,IAAI,CAACD,QAAQ,CAACE,OAAO,EAAE;MACrBR,OAAO,CAACD,KAAK,CAAC,SAASQ,SAAS,uBAAuB,CAAC;MACxD,OAAO,KAAK;IACd;IAEA,IAAI,CAACD,QAAQ,CAACE,OAAO,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE;MAClCJ,QAAQ,CAACE,OAAO,CAACG,KAAK,CAACC,MAAM,GAAG,eAAe;MAC/CC,UAAU,CAAC,MAAM;QACfP,QAAQ,CAACE,OAAO,CAACG,KAAK,CAACC,MAAM,GAAG,gBAAgB;MAClD,CAAC,EAAE,IAAI,CAAC;MACRZ,OAAO,CAACE,GAAG,CAAC,GAAGK,SAAS,mBAAmB,CAAC;MAC5C,OAAO,KAAK;IACd;IAEA,OAAO,IAAI;EACb,CAAC;EAED,MAAMO,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,SAAS,GAAG;MAChBC,MAAM,EAAE7C,IAAI,CAAC8C,IAAI,CAACD,MAAM;MACxB7B,OAAO,EAAEA,OAAO;MAChBG,GAAG,EAAE,iCAAiCX,QAAQ,EAAE;MAChDuC,QAAQ,EAAEvC,QAAQ;MAClBwC,IAAI,EAAEtC,aAAa,CAACsC,IAAI;MACxBC,IAAI,EAAEvC,aAAa,CAACuC,IAAI;MACxBC,SAAS,EAAExC,aAAa,CAACwC,SAAS;MAClCC,QAAQ,EAAEzC,aAAa,CAACyC;IAC1B,CAAC;IACDtB,OAAO,CAACuB,KAAK,CAACR,SAAS,CAAC;IAExB,MAAMS,cAAc,GAAGA,CAAA,KAAM;MAC3B,MAAMC,UAAU,GAAGpB,aAAa,CAACtB,MAAM,EAAE,cAAc,CAAC;MAExD,IAAI0C,UAAU,EAAE;QACd,MAAMP,QAAQ,GAAGjB,iBAAiB,CAAClB,MAAM,CAACyB,OAAO,CAACC,KAAK,CAAC;QACxD,IAAI,CAACS,QAAQ,EAAE;UACbnC,MAAM,CAACyB,OAAO,CAACG,KAAK,CAACC,MAAM,GAAG,eAAe;UAC7CC,UAAU,CAAC,MAAM;YACf9B,MAAM,CAACyB,OAAO,CAACG,KAAK,CAACC,MAAM,GAAG,gBAAgB;UAChD,CAAC,EAAE,IAAI,CAAC;UACRZ,OAAO,CAACE,GAAG,CAAC,iDAAiD,CAAC;UAC9DwB,KAAK,CAAC,iDAAiD,CAAC;UACxD,OAAO,KAAK;QACd;MACF;MAEA,MAAMC,WAAW,GAAGtB,aAAa,CAACrB,OAAO,EAAE,YAAY,CAAC;MACxD,MAAM4C,WAAW,GAAGvB,aAAa,CAACpB,OAAO,EAAE,WAAW,CAAC;MACvD,MAAM4C,gBAAgB,GAAGxB,aAAa,CAACnB,YAAY,EAAE,YAAY,CAAC;MAElE,OAAOuC,UAAU,IAAIE,WAAW,IAAIC,WAAW,IAAIC,gBAAgB;IACrE,CAAC;IAED,IAAI,CAACL,cAAc,CAAC,CAAC,EAAE;MACrB;IACF,CAAC,MAAM;MACL,IAAI;QACF,MAAMT,SAAS,GAAG;UAChBC,MAAM,EAAE7C,IAAI,CAAC8C,IAAI,CAACa,EAAE;UACpB3C,OAAO,EAAEA,OAAO;UAChBG,GAAG,EAAE,iCAAiCX,QAAQ,EAAE;UAChDuC,QAAQ,EAAEvC,QAAQ;UAClBwC,IAAI,EAAEtC,aAAa,CAACsC,IAAI;UACxBC,IAAI,EAAEvC,aAAa,CAACuC,IAAI;UACxBC,SAAS,EAAExC,aAAa,CAACwC,SAAS;UAClCC,QAAQ,EAAEzC,aAAa,CAACyC;QAC1B,CAAC;QACD,MAAMzD,KAAK,CAAC;UACVwB,MAAM,EAAE,MAAM;UACdC,GAAG,EAAE,eAAe;UACpBO,IAAI,EAAEkB,SAAS;UACfxB,OAAO,EAAE;YACPE,aAAa,EAAE,UAAUtB,IAAI,CAACuB,WAAW;UAC3C;QACF,CAAC,CAAC;QACFgC,KAAK,CAAC,eAAe,CAAC;QACtBtC,MAAM,CAACD,OAAO,CAAC;QACfL,gBAAgB,CAAC,EAAE,CAAC;QACpBN,WAAW,CAAC,EAAE,CAAC;QACfI,WAAW,CAAC,EAAE,CAAC;QACfqB,iBAAiB,CAAC,IAAI,CAAC;QACvBlB,MAAM,CAACyB,OAAO,CAACC,KAAK,GAAG,EAAE;MAC3B,CAAC,CAAC,OAAOV,KAAK,EAAE;QAAA,IAAAgC,eAAA;QACd/B,OAAO,CAACE,GAAG,CACT,oBAAoB,EACpB,EAAA6B,eAAA,GAAAhC,KAAK,CAACH,QAAQ,cAAAmC,eAAA,uBAAdA,eAAA,CAAgBlC,IAAI,KAAIE,KAAK,CAACiC,OAChC,CAAC;QACDN,KAAK,CAAC,4BAA4B3B,KAAK,CAACiC,OAAO,EAAE,CAAC;MACpD;IACF;EACF,CAAC;EAED5E,SAAS,CAAC,MAAM;IACdgC,MAAM,CAACD,OAAO,CAAC;EACjB,CAAC,EAAE,CAACA,OAAO,EAAEC,MAAM,CAAC,CAAC;EAErB,MAAM6C,YAAY,GAAG,MAAOH,EAAE,IAAK;IACjC,MAAMI,SAAS,GAAGC,MAAM,CAACC,OAAO,CAC9B,6CACF,CAAC;IAED,IAAIF,SAAS,EAAE;MACb,IAAI;QACF,MAAMtC,QAAQ,GAAG,MAAM/B,KAAK,CAAC;UAC3BwB,MAAM,EAAE,QAAQ;UAChBC,GAAG,EAAE,WAAWwC,EAAE,EAAE;UACpBvC,OAAO,EAAE;YACPE,aAAa,EAAE,UAAUtB,IAAI,CAACuB,WAAW;UAC3C;QACF,CAAC,CAAC;QACFgC,KAAK,CAAC,oBAAoB,CAAC;QAC3B1B,OAAO,CAACE,GAAG,CAACN,QAAQ,CAAC;QACrBR,MAAM,CAACD,OAAO,CAAC;MACjB,CAAC,CAAC,OAAOkD,GAAG,EAAE;QACZrC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEsC,GAAG,CAACL,OAAO,CAAC;QACnDN,KAAK,CAAC,6CAA6C,CAAC;MACtD;IACF;EACF,CAAC;EAED,MAAMY,QAAQ,GAAG,MAAOR,EAAE,IAAK;IAC7BjE,KAAK,CAAC;MACJwB,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE,WAAWwC,EAAE,EAAE;MACpBvC,OAAO,EAAE;QACPC,MAAM,EAAE,kBAAkB;QAC1BC,aAAa,EAAE,UAAUtB,IAAI,CAACuB,WAAW;MAC3C;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAK;MAClBd,gBAAgB,CAACc,QAAQ,CAACC,IAAI,CAAC;MAC/BxB,UAAU,CAACuB,QAAQ,CAACC,IAAI,CAACiC,EAAE,CAAC;IAC9B,CAAC,CAAC,CACDhC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACE,GAAG,CAACH,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EAED,MAAMwC,WAAW,GAAGhF,WAAW,CAAC,MAAM;IACpCuB,gBAAgB,CAAC,EAAE,CAAC;IACpBT,UAAU,CAACC,SAAS,CAAC;IACrBM,WAAW,CAAC,EAAE,CAAC;IACfJ,WAAW,CAAC,EAAE,CAAC;IACfO,MAAM,CAACyB,OAAO,CAACC,KAAK,GAAG,EAAE;EAC3B,CAAC,EAAE,CAAC3B,gBAAgB,EAAET,UAAU,EAAEO,WAAW,EAAEJ,WAAW,CAAC,CAAC;EAE5D,MAAMgE,WAAW,GAAG,MAAOV,EAAE,IAAK;IAChC,MAAMN,cAAc,GAAGA,CAAA,KAAM;MAC3B,MAAMC,UAAU,GAAGpB,aAAa,CAACtB,MAAM,EAAE,cAAc,CAAC;MAExD,IAAI0C,UAAU,EAAE;QACd,MAAMP,QAAQ,GAAGjB,iBAAiB,CAAClB,MAAM,CAACyB,OAAO,CAACC,KAAK,CAAC;QACxD,IAAI,CAACS,QAAQ,EAAE;UACbnC,MAAM,CAACyB,OAAO,CAACG,KAAK,CAACC,MAAM,GAAG,eAAe;UAC7CC,UAAU,CAAC,MAAM;YACf9B,MAAM,CAACyB,OAAO,CAACG,KAAK,CAACC,MAAM,GAAG,gBAAgB;UAChD,CAAC,EAAE,IAAI,CAAC;UACRZ,OAAO,CAACE,GAAG,CAAC,iDAAiD,CAAC;UAC9DwB,KAAK,CAAC,iDAAiD,CAAC;UACxD,OAAO,KAAK;QACd;MACF;MAEA,MAAMC,WAAW,GAAGtB,aAAa,CAACrB,OAAO,EAAE,YAAY,CAAC;MACxD,MAAM4C,WAAW,GAAGvB,aAAa,CAACpB,OAAO,EAAE,WAAW,CAAC;MACvD,MAAM4C,gBAAgB,GAAGxB,aAAa,CAACnB,YAAY,EAAE,YAAY,CAAC;MAElE,OAAOuC,UAAU,IAAIE,WAAW,IAAIC,WAAW,IAAIC,gBAAgB;IACrE,CAAC;IAED,IAAI,CAACL,cAAc,CAAC,CAAC,EAAE;MACrB;IACF,CAAC,MAAM;MACL,MAAMU,SAAS,GAAGC,MAAM,CAACC,OAAO,CAC9B,4CACF,CAAC;MACD,IAAIF,SAAS,EAAE;QACb,MAAMrC,IAAI,GAAG;UACX,IAAIlB,QAAQ,GACR;YACEW,GAAG,EAAE,iCAAiCX,QAAQ,EAAE;YAChDuC,QAAQ,EAAEvC;UACZ,CAAC,GACD;YACEW,GAAG,EAAET,aAAa,CAACS,GAAG;YACtB4B,QAAQ,EAAErC,aAAa,CAACqC;UAC1B,CAAC,CAAC;UACNC,IAAI,EAAEtC,aAAa,CAACsC,IAAI;UACxBC,IAAI,EAAEvC,aAAa,CAACuC,IAAI;UACxBC,SAAS,EAAExC,aAAa,CAACwC,SAAS;UAClCC,QAAQ,EAAEzC,aAAa,CAACyC;QAC1B,CAAC;QACD,IAAI;UACF,MAAM1B,QAAQ,GAAG,MAAM/B,KAAK,CAAC;YAC3BwB,MAAM,EAAE,OAAO;YACfC,GAAG,EAAE,WAAWwC,EAAE,EAAE;YACpBjC,IAAI,EAAEA,IAAI;YACVN,OAAO,EAAE;cACPC,MAAM,EAAE,kBAAkB;cAC1BC,aAAa,EAAE,UAAUtB,IAAI,CAACuB,WAAW;YAC3C;UACF,CAAC,CAAC;UACFgC,KAAK,CAAC,uBAAuB,CAAC;UAC9B1B,OAAO,CAACE,GAAG,CAACN,QAAQ,CAACoC,OAAO,CAAC;UAC7BO,WAAW,CAAC,CAAC;UACbnD,MAAM,CAACD,OAAO,CAAC;QACjB,CAAC,CAAC,OAAOY,KAAK,EAAE;UAAA,IAAA0C,gBAAA;UACdzC,OAAO,CAACD,KAAK,CACX,sBAAsB,EACtB,EAAA0C,gBAAA,GAAA1C,KAAK,CAACH,QAAQ,cAAA6C,gBAAA,uBAAdA,gBAAA,CAAgB5C,IAAI,KAAIE,KAAK,CAACiC,OAChC,CAAC;QACH;MACF;IACF;EACF,CAAC;EAED,oBACEhE,OAAA;IAAK0E,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB3E,OAAA;MAAK0E,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BlE,MAAM,KAAKH,SAAS,IAAIG,MAAM,CAACmE,MAAM,GAAG,CAAC,gBACxC5E,OAAA;QAAK0E,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EACjClE,MAAM,CAACoE,GAAG,CAAEC,KAAK,iBAChB9E,OAAA;UAAoB0E,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACxC3E,OAAA;YAAK0E,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC5B3E,OAAA;cACE+E,IAAI,EAAC,QAAQ;cACbL,SAAS,EAAC,eAAe;cACzBM,OAAO,EAAEA,CAAA,KAAMf,YAAY,CAACa,KAAK,CAAChB,EAAE,CAAE;cAAAa,QAAA,eAEtC3E,OAAA,CAACN,eAAe;gBAACuF,IAAI,EAAEtF;cAAW;gBAAAuF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B,CAAC,eACTrF,OAAA;cACE+E,IAAI,EAAC,QAAQ;cACbL,SAAS,EAAC,aAAa;cACvBM,OAAO,EAAEA,CAAA,KAAMV,QAAQ,CAACQ,KAAK,CAAChB,EAAE,CAAE;cAAAa,QAAA,eAElC3E,OAAA,CAACN,eAAe;gBAACuF,IAAI,EAAErF;cAAO;gBAAAsF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACNrF,OAAA;YACEsF,KAAK,EAAC,OAAO;YACbC,KAAK,EAAC,KAAK;YACXC,MAAM,EAAC,KAAK;YACZC,GAAG,EAAE,iCAAiCX,KAAK,CAAC5B,QAAQ;UAAG;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC;QAAA,GAtBMP,KAAK,CAAChB,EAAE;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAuBb,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,gBAENrF,OAAA;QAAA2E,QAAA,EAAK;MAAmB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAC9B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENrF,OAAA;MAAK0E,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzB3E,OAAA;QAAK0E,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB3E,OAAA;UAAA2E,QAAA,EAAO;QAAY;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3BrF,OAAA;UACE+E,IAAI,EAAC,MAAM;UACXW,GAAG,EAAE3E,MAAO;UACZ4E,YAAY,EAAE9E,aAAa,CAACS,GAAI;UAChCsE,WAAW,EAAC,mBAAmB;UAC/BC,QAAQ,EAAGC,CAAC,IAAK;YACftF,WAAW,CAACsF,CAAC,CAACC,MAAM,CAACtD,KAAK,CAAC;YAC3BR,iBAAiB,CAAC6D,CAAC,CAACC,MAAM,CAACtD,KAAK,CAAC;UACnC;QAAE;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNrF,OAAA;QAAK0E,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB3E,OAAA;UAAA2E,QAAA,EAAO;QAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBrF,OAAA;UACE0F,GAAG,EAAE1E,OAAQ;UACb2E,YAAY,EAAE9E,aAAa,CAACsC,IAAK;UACjC0C,QAAQ,EAAGC,CAAC,IACVhF,gBAAgB,CAAC;YAAE,GAAGD,aAAa;YAAEsC,IAAI,EAAE2C,CAAC,CAACC,MAAM,CAACtD;UAAM,CAAC,CAC5D;UACDsC,IAAI,EAAC,MAAM;UACXa,WAAW,EAAC;QAAa;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNrF,OAAA;QAAK0E,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB3E,OAAA;UAAA2E,QAAA,EAAO;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnBrF,OAAA;UACE0F,GAAG,EAAEzE,OAAQ;UACb0E,YAAY,EAAE9E,aAAa,CAACuC,IAAK;UACjCyC,QAAQ,EAAGC,CAAC,IACVhF,gBAAgB,CAAC;YAAE,GAAGD,aAAa;YAAEuC,IAAI,EAAE0C,CAAC,CAACC,MAAM,CAACtD;UAAM,CAAC,CAC5D;UACDsC,IAAI,EAAC,MAAM;UACXa,WAAW,EAAC;QAAW;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNrF,OAAA;QAAK0E,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB3E,OAAA;UAAA2E,QAAA,EAAO;QAAU;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACzBrF,OAAA;UACE0F,GAAG,EAAExE,YAAa;UAClByE,YAAY,EAAE9E,aAAa,CAACwC,SAAU;UACtCwC,QAAQ,EAAGC,CAAC,IACVhF,gBAAgB,CAAC;YAAE,GAAGD,aAAa;YAAEwC,SAAS,EAAEyC,CAAC,CAACC,MAAM,CAACtD;UAAM,CAAC,CACjE;UACDsC,IAAI,EAAC,MAAM;UACXa,WAAW,EAAC;QAAY;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNrF,OAAA;QAAK0E,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B3E,OAAA;UAAQ+E,IAAI,EAAC,QAAQ;UAACC,OAAO,EAAElC,UAAW;UAAA6B,QAAA,EAAC;QAE3C;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTrF,OAAA;UAAQ+E,IAAI,EAAC,QAAQ;UAACC,OAAO,EAAET,WAAY;UAAAI,QAAA,EAAC;QAE5C;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACRxE,aAAa,CAACiD,EAAE,iBACf9D,OAAA;UAAQ+E,IAAI,EAAC,QAAQ;UAACC,OAAO,EAAEA,CAAA,KAAMR,WAAW,CAAC3D,aAAa,CAACiD,EAAE,CAAE;UAAAa,QAAA,EAAC;QAEpE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnF,EAAA,CArXQD,SAAS;EAAA,QAWEH,SAAS;AAAA;AAAAkG,EAAA,GAXpB/F,SAAS;AAuXlB,eAAeA,SAAS;AAAC,IAAA+F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}