{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Photo\\\\Photo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './Photo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Photos() {\n  _s();\n  const {\n    auth\n  } = useContext(AuthContext);\n  const {\n    movieId,\n    photoId\n  } = useParams(); // Extract movieId and photoId from URL\n  const [selectedPhoto, setSelectedPhoto] = useState({\n    url: '',\n    // Default empty string for URL\n    description: '' // Default empty string for description\n  });\n  useEffect(() => {\n    // Fetch the photo when movieId or photoId changes\n    if (movieId && photoId) {\n      axios.get(`/movies/${movieId}/photos/${photoId}`, {\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      }).then(response => setSelectedPhoto(response.data)).catch(error => console.error('Error fetching photo:', error));\n    }\n  }, [movieId, photoId, auth.accessToken]);\n\n  // Validate input fields\n  const validateField = (fieldRef, fieldName) => {\n    if (!fieldRef.current.value.trim()) {\n      fieldRef.current.style.border = '2px solid red';\n      setTimeout(() => {\n        fieldRef.current.style.border = '1px solid #ccc';\n      }, 2000);\n      console.log(`${fieldName} cannot be empty.`);\n      return false;\n    }\n    return true;\n  };\n\n  // Save photo\n  const handleSave = () => {\n    console.log('Selected Photo to Save:', selectedPhoto); // Debugging log\n\n    if (!selectedPhoto.url || !selectedPhoto.description) {\n      alert('URL and Description are required.');\n      return; // Prevent saving if URL or description is missing\n    }\n    const dataphoto = {\n      userId: auth.user.userId,\n      movieId: movieId,\n      url: selectedPhoto.url,\n      // Ensure that this is properly set\n      description: selectedPhoto.description // Ensure description is set\n    };\n\n    // Log the data before submitting to ensure everything is correct\n    console.log('Data to be saved:', dataphoto);\n    axios.post('/photos', dataphoto, {\n      headers: {\n        Authorization: `Bearer ${auth.accessToken}`\n      }\n    }).then(() => {\n      alert('Photo added successfully!');\n      setSelectedPhoto({\n        url: '',\n        description: ''\n      }); // Reset form after save\n      getAll(movieId); // Refresh the photo list\n    }).catch(error => {\n      console.error('Error saving photo:', error);\n    });\n  };\n\n  // Delete photo\n  const handleDelete = id => {\n    const isConfirmed = window.confirm('Are you sure you want to delete this photo?');\n    if (isConfirmed) {\n      axios.delete(`/photos/${id}`, {\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      }).then(() => {\n        alert('Photo deleted successfully');\n        getAll(movieId); // Refresh the photo list\n      }).catch(error => {\n        console.error('Error deleting photo:', error);\n      });\n    }\n  };\n\n  // Fetch all photos for the movie\n  const getAll = movieId => {\n    axios.get(`/movies/${movieId}/photos`, {\n      headers: {\n        Authorization: `Bearer ${auth.accessToken}`\n      }\n    }).then(response => {\n      setPhotos(response.data); // Update photos state\n    }).catch(error => {\n      console.error('Error fetching photos:', error);\n    });\n  };\n\n  // Update photo\n  const handleUpdate = id => {\n    if (!selectedPhoto.url || !selectedPhoto.description) {\n      alert('URL and Description are required.');\n      return;\n    }\n    const dataphoto = {\n      userId: auth.user.userId,\n      movieId: selectedPhoto.movieId,\n      url: selectedPhoto.url,\n      description: selectedPhoto.description\n    };\n    axios.patch(`/photos/${id}`, dataphoto, {\n      headers: {\n        Authorization: `Bearer ${auth.accessToken}`\n      }\n    }).then(() => {\n      alert('Photo updated successfully!');\n      setSelectedPhoto({\n        url: '',\n        description: ''\n      }); // Reset form\n      getAll(movieId); // Refresh the photo list\n    }).catch(error => {\n      console.error('Error updating photo:', error);\n    });\n  };\n\n  // Clear selected photo\n  const handleClear = () => {\n    setSelectedPhoto({\n      url: '',\n      description: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photo-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Photo-View-Box\",\n      children: photos && photos.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-display-photo\",\n        children: photos.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-photo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"delete-button\",\n              onClick: () => handleDelete(image.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"edit-button\",\n              onClick: () => setSelectedPhoto(image) // Set selected photo for editing\n              ,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.url,\n            alt: image.description,\n            style: {\n              width: '100%'\n            },\n            className: \"image-style\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-photo\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: image.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this)]\n        }, image.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-photo\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"No Photos Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Photo-Search-Box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parent-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-detail-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"photo-container-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"photo-image-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"photo-movies\",\n                src: selectedPhoto.url || 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg',\n                className: \"photo-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-info-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label-photo\",\n              children: \"Image URL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"photo-url\",\n              type: \"text\",\n              value: selectedPhoto.url || '',\n              onChange: e => setSelectedPhoto({\n                ...selectedPhoto,\n                url: e.target.value\n              }),\n              placeholder: \"Enter image URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label-photo\",\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"photo-description\",\n              value: selectedPhoto.description || '',\n              onChange: e => setSelectedPhoto({\n                ...selectedPhoto,\n                description: e.target.value\n              }),\n              placeholder: \"Enter image description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"save-edit-back-btn\",\n          children: [!selectedPhoto.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-save-btn\",\n            type: \"button\",\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-save-btn\",\n            type: \"button\",\n            onClick: () => handleUpdate(selectedPhoto.id),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-btn\",\n            type: \"button\",\n            onClick: handleClear,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(Photos, \"wP/Bz5dhtNzs/ckSNclwuiEZ6Qg=\", false, function () {\n  return [useParams];\n});\n_c = Photos;\nexport default Photos;\nvar _c;\n$RefreshReg$(_c, \"Photos\");","map":{"version":3,"names":["React","useEffect","useState","useContext","AuthContext","useParams","axios","jsxDEV","_jsxDEV","Photos","_s","auth","movieId","photoId","selectedPhoto","setSelectedPhoto","url","description","get","headers","Authorization","accessToken","then","response","data","catch","error","console","validateField","fieldRef","fieldName","current","value","trim","style","border","setTimeout","log","handleSave","alert","dataphoto","userId","user","post","getAll","handleDelete","id","isConfirmed","window","confirm","delete","setPhotos","handleUpdate","patch","handleClear","className","children","photos","length","map","image","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","width","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Photo/Photo.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './Photo.css';\r\n\r\nfunction Photos() {\r\n  const { auth } = useContext(AuthContext);\r\n  const { movieId, photoId } = useParams(); // Extract movieId and photoId from URL\r\n  const [selectedPhoto, setSelectedPhoto] = useState({\r\n    url: '', // Default empty string for URL\r\n    description: '', // Default empty string for description\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch the photo when movieId or photoId changes\r\n    if (movieId && photoId) {\r\n      axios\r\n        .get(`/movies/${movieId}/photos/${photoId}`, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n        })\r\n        .then((response) => setSelectedPhoto(response.data))\r\n        .catch((error) => console.error('Error fetching photo:', error));\r\n    }\r\n  }, [movieId, photoId, auth.accessToken]);\r\n\r\n  // Validate input fields\r\n  const validateField = (fieldRef, fieldName) => {\r\n    if (!fieldRef.current.value.trim()) {\r\n      fieldRef.current.style.border = '2px solid red';\r\n      setTimeout(() => {\r\n        fieldRef.current.style.border = '1px solid #ccc';\r\n      }, 2000);\r\n      console.log(`${fieldName} cannot be empty.`);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // Save photo\r\n  const handleSave = () => {\r\n    console.log('Selected Photo to Save:', selectedPhoto); // Debugging log\r\n\r\n    if (!selectedPhoto.url || !selectedPhoto.description) {\r\n      alert('URL and Description are required.');\r\n      return; // Prevent saving if URL or description is missing\r\n    }\r\n\r\n    const dataphoto = {\r\n      userId: auth.user.userId,\r\n      movieId: movieId,\r\n      url: selectedPhoto.url, // Ensure that this is properly set\r\n      description: selectedPhoto.description, // Ensure description is set\r\n    };\r\n\r\n    // Log the data before submitting to ensure everything is correct\r\n    console.log('Data to be saved:', dataphoto);\r\n\r\n    axios\r\n      .post('/photos', dataphoto, {\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n      })\r\n      .then(() => {\r\n        alert('Photo added successfully!');\r\n        setSelectedPhoto({ url: '', description: '' }); // Reset form after save\r\n        getAll(movieId); // Refresh the photo list\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error saving photo:', error);\r\n      });\r\n  };\r\n\r\n  // Delete photo\r\n  const handleDelete = (id) => {\r\n    const isConfirmed = window.confirm('Are you sure you want to delete this photo?');\r\n    if (isConfirmed) {\r\n      axios\r\n        .delete(`/photos/${id}`, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n        })\r\n        .then(() => {\r\n          alert('Photo deleted successfully');\r\n          getAll(movieId); // Refresh the photo list\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error deleting photo:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  // Fetch all photos for the movie\r\n  const getAll = (movieId) => {\r\n    axios\r\n      .get(`/movies/${movieId}/photos`, {\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n      })\r\n      .then((response) => {\r\n        setPhotos(response.data); // Update photos state\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching photos:', error);\r\n      });\r\n  };\r\n\r\n  // Update photo\r\n  const handleUpdate = (id) => {\r\n    if (!selectedPhoto.url || !selectedPhoto.description) {\r\n      alert('URL and Description are required.');\r\n      return;\r\n    }\r\n\r\n    const dataphoto = {\r\n      userId: auth.user.userId,\r\n      movieId: selectedPhoto.movieId,\r\n      url: selectedPhoto.url,\r\n      description: selectedPhoto.description,\r\n    };\r\n\r\n    axios\r\n      .patch(`/photos/${id}`, dataphoto, {\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n      })\r\n      .then(() => {\r\n        alert('Photo updated successfully!');\r\n        setSelectedPhoto({ url: '', description: '' }); // Reset form\r\n        getAll(movieId); // Refresh the photo list\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error updating photo:', error);\r\n      });\r\n  };\r\n\r\n  // Clear selected photo\r\n  const handleClear = () => {\r\n    setSelectedPhoto({ url: '', description: '' });\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo-box\">\r\n      <div className=\"Photo-View-Box\">\r\n        {/* Display list of photos */}\r\n        {photos && photos.length > 0 ? (\r\n          <div className=\"card-display-photo\">\r\n            {photos.map((image) => (\r\n              <div key={image.id} className=\"card-photo\">\r\n                <div className=\"buttons-group\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"delete-button\"\r\n                    onClick={() => handleDelete(image.id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"edit-button\"\r\n                    onClick={() => setSelectedPhoto(image)} // Set selected photo for editing\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                </div>\r\n                <img\r\n                  src={image.url}\r\n                  alt={image.description}\r\n                  style={{ width: '100%' }}\r\n                  className=\"image-style\"\r\n                />\r\n                <div className=\"container-photo\">\r\n                  <p>{image.description}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"no-photo\">\r\n            <h3>No Photos Found</h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Photo form for adding/editing */}\r\n      <div className=\"Photo-Search-Box\">\r\n        <div className=\"parent-container\">\r\n          <div className=\"photo-detail-box\">\r\n            <div className=\"photo-container-center\">\r\n              <div className=\"photo-image-container\">\r\n                <img\r\n                  alt=\"photo-movies\"\r\n                  src={selectedPhoto.url || 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'}\r\n                  className=\"photo-img\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"photo-info-text\">\r\n            <div className=\"input-group\">\r\n              <label className=\"label-photo\">Image URL:</label>\r\n              <input\r\n                className=\"photo-url\"\r\n                type=\"text\"\r\n                value={selectedPhoto.url || ''}\r\n                onChange={(e) => setSelectedPhoto({ ...selectedPhoto, url: e.target.value })}\r\n                placeholder=\"Enter image URL\"\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label className=\"label-photo\">Description:</label>\r\n              <textarea\r\n                className=\"photo-description\"\r\n                value={selectedPhoto.description || ''}\r\n                onChange={(e) => setSelectedPhoto({ ...selectedPhoto, description: e.target.value })}\r\n                placeholder=\"Enter image description\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Action buttons */}\r\n          <div className=\"save-edit-back-btn\">\r\n            {!selectedPhoto.id ? (\r\n              <button className=\"edit-save-btn\" type=\"button\" onClick={handleSave}>\r\n                Save\r\n              </button>\r\n            ) : (\r\n              <button className=\"edit-save-btn\" type=\"button\" onClick={() => handleUpdate(selectedPhoto.id)}>\r\n                Update\r\n              </button>\r\n            )}\r\n            <button className=\"clear-btn\" type=\"button\" onClick={handleClear}>\r\n              Clear\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Photos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}