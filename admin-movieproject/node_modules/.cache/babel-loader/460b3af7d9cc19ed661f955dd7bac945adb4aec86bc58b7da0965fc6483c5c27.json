{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Videos\\\\Videos.jsx\",\n  _s = $RefreshSig$();\n// Videos.jsx\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\nimport { useParams } from 'react-router-dom';\nimport VideosForm from './VideosForm'; // Import VideosForm\nimport './Videos.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Videos() {\n  _s();\n  const {\n    auth\n  } = useContext(AuthContext);\n  const {\n    movieId\n  } = useParams();\n  const [videos, setVideos] = useState([]);\n  const [newVideo, setNewVideo] = useState({\n    url: '',\n    description: ''\n  });\n  const [editingVideo, setEditingVideo] = useState(null);\n  const [isSaving, setIsSaving] = useState(false);\n  useEffect(() => {\n    // Fetch videos associated with the current movie\n    const fetchVideos = async () => {\n      try {\n        const response = await axios.get(`/movies/${movieId}/videos`, {\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        console.log('Fetched videos response:', response.data);\n\n        // Check if response.data.videos is an array and set it\n        if (Array.isArray(response.data.videos)) {\n          setVideos(response.data.videos);\n        } else {\n          console.error(\"Error: No videos found in the response or it's not an array\", response.data.videos);\n          setVideos([]); // Reset to empty array if the `videos` key is not an array\n        }\n      } catch (error) {\n        console.error(\"Error fetching videos:\", error);\n        setVideos([]); // Fallback to empty array in case of error\n      }\n    };\n    fetchVideos();\n  }, [movieId, auth.accessToken]);\n\n  // Helper function to extract YouTube video ID from URL\n  const getYouTubeVideoId = url => {\n    if (!url || typeof url !== 'string' || url.trim() === '') {\n      console.error(\"URL is undefined, empty, or not a valid string\");\n      return null; // Return null if URL is invalid\n    }\n    const regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^\\/]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/))?(?:watch\\?v=|e(?:mbed)\\/)([\\w-]{11})/;\n    const match = url.match(regex);\n    return match ? match[1] : null;\n  };\n  const handleAddVideo = async () => {\n    if (!newVideo.url || !newVideo.description) {\n      alert(\"Please provide both a URL and a description for the video.\");\n      return;\n    }\n    const videoId = getYouTubeVideoId(newVideo.url);\n    if (!videoId) {\n      alert(\"Please provide a valid YouTube URL.\");\n      return;\n    }\n    setIsSaving(true);\n    try {\n      const videoData = {\n        movieId,\n        url: newVideo.url,\n        description: newVideo.description,\n        userId: auth.user.userId\n      };\n      const response = await axios.post('/videos', videoData, {\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      });\n\n      // Add the new video to the list and reset the form\n      setVideos(prevVideos => [...prevVideos, response.data]);\n      setNewVideo({\n        url: '',\n        description: ''\n      }); // Clear form fields\n      alert(\"Video added successfully!\");\n    } catch (error) {\n      console.error(\"Error adding video:\", error);\n      alert(\"Failed to add video.\");\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const handleDeleteVideo = async id => {\n    if (window.confirm(\"Are you sure you want to delete this video?\")) {\n      try {\n        await axios.delete(`/videos/${id}`, {\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        setVideos(prevVideos => prevVideos.filter(video => video.id !== id));\n        alert(\"Video deleted successfully!\");\n      } catch (error) {\n        console.error(\"Error deleting video:\", error);\n        alert(\"Failed to delete video.\");\n      }\n    }\n  };\n  const handleUpdateVideo = async () => {\n    if (!editingVideo.url || !editingVideo.description) {\n      alert(\"Please provide both a URL and a description to update the video.\");\n      return;\n    }\n    const videoId = getYouTubeVideoId(editingVideo.url);\n    if (!videoId) {\n      alert(\"Please provide a valid YouTube URL.\");\n      return;\n    }\n    setIsSaving(true);\n    try {\n      const updatedData = {\n        url: editingVideo.url,\n        description: editingVideo.description\n      };\n      await axios.patch(`/videos/${editingVideo.id}`, updatedData, {\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      });\n      setVideos(prevVideos => prevVideos.map(video => video.id === editingVideo.id ? {\n        ...video,\n        ...updatedData\n      } : video));\n      setEditingVideo(null); // Reset editing state\n      alert(\"Video updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating video:\", error);\n      alert(\"Failed to update video.\");\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (editingVideo) {\n      setEditingVideo(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else {\n      setNewVideo(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Video-View-Box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Videos for Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-display-videos\",\n        children: videos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No videos found for this movie.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this) : videos.map(video => {\n          const videoId = getYouTubeVideoId(video.url);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-video\",\n            children: [videoId ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n              width: \"100%\",\n              height: \"315\",\n              src: `https://www.youtube.com/embed/${videoId}`,\n              title: \"Video\",\n              frameBorder: \"0\",\n              allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n              allowFullScreen: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Invalid video URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-video\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: video.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Added on: \", new Date(video.dateCreated).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"buttons-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"edit-button\",\n                  onClick: () => setEditingVideo(video),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button\",\n                  onClick: () => handleDeleteVideo(video.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this)]\n          }, video.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideosForm, {\n      videoData: editingVideo ? editingVideo : newVideo,\n      onSubmit: editingVideo ? handleUpdateVideo : handleAddVideo,\n      onChange: handleInputChange,\n      isSaving: isSaving,\n      editingVideo: editingVideo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(Videos, \"5gqIX21gfEHeRStE2OQ62Gwq68w=\", false, function () {\n  return [useParams];\n});\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","AuthContext","useParams","VideosForm","jsxDEV","_jsxDEV","Videos","_s","auth","movieId","videos","setVideos","newVideo","setNewVideo","url","description","editingVideo","setEditingVideo","isSaving","setIsSaving","fetchVideos","response","get","headers","Authorization","accessToken","console","log","data","Array","isArray","error","getYouTubeVideoId","trim","regex","match","handleAddVideo","alert","videoId","videoData","userId","user","post","prevVideos","handleDeleteVideo","id","window","confirm","delete","filter","video","handleUpdateVideo","updatedData","patch","map","handleInputChange","e","name","value","target","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","width","height","src","title","frameBorder","allow","allowFullScreen","Date","dateCreated","toLocaleDateString","onClick","onSubmit","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Videos/Videos.jsx"],"sourcesContent":["// Videos.jsx\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\r\nimport { useParams } from 'react-router-dom';\r\nimport VideosForm from './VideosForm';  // Import VideosForm\r\nimport './Videos.css';\r\n\r\nfunction Videos() {\r\n  const { auth } = useContext(AuthContext);\r\n  const { movieId } = useParams();\r\n  const [videos, setVideos] = useState([]);\r\n  const [newVideo, setNewVideo] = useState({ url: '', description: '' });\r\n  const [editingVideo, setEditingVideo] = useState(null);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch videos associated with the current movie\r\n    const fetchVideos = async () => {\r\n      try {\r\n        const response = await axios.get(`/movies/${movieId}/videos`, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n        });\r\n\r\n        console.log('Fetched videos response:', response.data);\r\n\r\n        // Check if response.data.videos is an array and set it\r\n        if (Array.isArray(response.data.videos)) {\r\n          setVideos(response.data.videos);\r\n        } else {\r\n          console.error(\"Error: No videos found in the response or it's not an array\", response.data.videos);\r\n          setVideos([]); // Reset to empty array if the `videos` key is not an array\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching videos:\", error);\r\n        setVideos([]); // Fallback to empty array in case of error\r\n      }\r\n    };\r\n\r\n    fetchVideos();\r\n  }, [movieId, auth.accessToken]);\r\n\r\n  // Helper function to extract YouTube video ID from URL\r\n  const getYouTubeVideoId = (url) => {\r\n    if (!url || typeof url !== 'string' || url.trim() === '') {\r\n      console.error(\"URL is undefined, empty, or not a valid string\");\r\n      return null; // Return null if URL is invalid\r\n    }\r\n    \r\n    const regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^\\/]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/))?(?:watch\\?v=|e(?:mbed)\\/)([\\w-]{11})/;\r\n    const match = url.match(regex);\r\n    return match ? match[1] : null;\r\n  };\r\n\r\n  const handleAddVideo = async () => {\r\n    if (!newVideo.url || !newVideo.description) {\r\n      alert(\"Please provide both a URL and a description for the video.\");\r\n      return;\r\n    }\r\n\r\n    const videoId = getYouTubeVideoId(newVideo.url);\r\n    if (!videoId) {\r\n      alert(\"Please provide a valid YouTube URL.\");\r\n      return;\r\n    }\r\n\r\n    setIsSaving(true);\r\n    try {\r\n      const videoData = {\r\n        movieId,\r\n        url: newVideo.url,\r\n        description: newVideo.description,\r\n        userId: auth.user.userId,\r\n      };\r\n\r\n      const response = await axios.post('/videos', videoData, {\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n      });\r\n\r\n      // Add the new video to the list and reset the form\r\n      setVideos((prevVideos) => [...prevVideos, response.data]);\r\n      setNewVideo({ url: '', description: '' }); // Clear form fields\r\n      alert(\"Video added successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error adding video:\", error);\r\n      alert(\"Failed to add video.\");\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteVideo = async (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this video?\")) {\r\n      try {\r\n        await axios.delete(`/videos/${id}`, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n        });\r\n\r\n        setVideos((prevVideos) => prevVideos.filter((video) => video.id !== id));\r\n        alert(\"Video deleted successfully!\");\r\n      } catch (error) {\r\n        console.error(\"Error deleting video:\", error);\r\n        alert(\"Failed to delete video.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUpdateVideo = async () => {\r\n    if (!editingVideo.url || !editingVideo.description) {\r\n      alert(\"Please provide both a URL and a description to update the video.\");\r\n      return;\r\n    }\r\n\r\n    const videoId = getYouTubeVideoId(editingVideo.url);\r\n    if (!videoId) {\r\n      alert(\"Please provide a valid YouTube URL.\");\r\n      return;\r\n    }\r\n\r\n    setIsSaving(true);\r\n    try {\r\n      const updatedData = {\r\n        url: editingVideo.url,\r\n        description: editingVideo.description,\r\n      };\r\n\r\n      await axios.patch(`/videos/${editingVideo.id}`, updatedData, {\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n      });\r\n\r\n      setVideos((prevVideos) =>\r\n        prevVideos.map((video) =>\r\n          video.id === editingVideo.id ? { ...video, ...updatedData } : video\r\n        )\r\n      );\r\n      setEditingVideo(null); // Reset editing state\r\n      alert(\"Video updated successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error updating video:\", error);\r\n      alert(\"Failed to update video.\");\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (editingVideo) {\r\n      setEditingVideo((prev) => ({ ...prev, [name]: value }));\r\n    } else {\r\n      setNewVideo((prev) => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"video-box\">\r\n      <div className=\"Video-View-Box\">\r\n        <h2>Videos for Movie</h2>\r\n\r\n        <div className=\"card-display-videos\">\r\n          {videos.length === 0 ? (\r\n            <p>No videos found for this movie.</p>\r\n          ) : (\r\n            videos.map((video) => {\r\n              const videoId = getYouTubeVideoId(video.url);\r\n              return (\r\n                <div key={video.id} className=\"card-video\">\r\n                  {videoId ? (\r\n                    <iframe\r\n                      width=\"100%\"\r\n                      height=\"315\"\r\n                      src={`https://www.youtube.com/embed/${videoId}`}\r\n                      title=\"Video\"\r\n                      frameBorder=\"0\"\r\n                      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                      allowFullScreen\r\n                    ></iframe>\r\n                  ) : (\r\n                    <p>Invalid video URL</p>\r\n                  )}\r\n                  <div className=\"container-video\">\r\n                    <h4>{video.description}</h4>\r\n                    <p>Added on: {new Date(video.dateCreated).toLocaleDateString()}</p>\r\n                    <div className=\"buttons-group\">\r\n                      <button className=\"edit-button\" onClick={() => setEditingVideo(video)}>\r\n                        Edit\r\n                      </button>\r\n                      <button className=\"delete-button\" onClick={() => handleDeleteVideo(video.id)}>\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <VideosForm\r\n        videoData={editingVideo ? editingVideo : newVideo}\r\n        onSubmit={editingVideo ? handleUpdateVideo : handleAddVideo}\r\n        onChange={handleInputChange}\r\n        isSaving={isSaving}\r\n        editingVideo={editingVideo}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Videos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}