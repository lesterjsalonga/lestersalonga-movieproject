{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CastandCrew from '../CastandCrew/CastandCrew';\nimport axios from 'axios';\nimport './Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [movieTitle, setMovieTitle] = useState('');\n  const [selectedCast, setSelectedCast] = useState([]); // To store selected cast data\n  const [genre, setGenre] = useState('');\n  const [releaseDate, setReleaseDate] = useState('');\n\n  // Handle form submission\n  const handleSaveMovie = () => {\n    if (!movieTitle || !selectedCast.length || !genre || !releaseDate) {\n      alert('Please fill in all fields and select cast members.');\n      return;\n    }\n    const movieData = {\n      title: movieTitle,\n      genre,\n      releaseDate,\n      cast: selectedCast // Send selected cast with the movie data\n    };\n\n    // Replace with your backend API URL\n    axios.post('/movies', movieData).then(response => {\n      alert('Movie saved successfully');\n      console.log(response.data);\n    }).catch(error => {\n      console.error('Error saving movie:', error);\n      alert('Error saving movie.');\n    });\n  };\n\n  // This function will receive cast data from CastandCrew component\n  const handleAddCast = newCast => {\n    setSelectedCast(newCast);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Movie Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: movieTitle,\n        onChange: e => setMovieTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Genre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: genre,\n        onChange: e => setGenre(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Release Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: releaseDate,\n        onChange: e => setReleaseDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Cast:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CastandCrew, {\n        onAddCast: handleAddCast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-cast\",\n        children: selectedCast.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: selectedCast.map((cast, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [cast.name, \" (\", cast.characterName || 'Character Name', \")\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No cast selected yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleSaveMovie,\n      children: \"Save Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"JWHti8wkLxoDhtJiMnTIEStlvf8=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","CastandCrew","axios","jsxDEV","_jsxDEV","Form","_s","movieTitle","setMovieTitle","selectedCast","setSelectedCast","genre","setGenre","releaseDate","setReleaseDate","handleSaveMovie","length","alert","movieData","title","cast","post","then","response","console","log","data","catch","error","handleAddCast","newCast","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onAddCast","map","index","name","characterName","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Form.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport CastandCrew from '../CastandCrew/CastandCrew'; \r\nimport axios from 'axios';\r\nimport './Form.css';\r\n\r\nconst Form = () => {\r\n  const [movieTitle, setMovieTitle] = useState('');\r\n  const [selectedCast, setSelectedCast] = useState([]); // To store selected cast data\r\n  const [genre, setGenre] = useState('');\r\n  const [releaseDate, setReleaseDate] = useState('');\r\n\r\n  // Handle form submission\r\n  const handleSaveMovie = () => {\r\n    if (!movieTitle || !selectedCast.length || !genre || !releaseDate) {\r\n      alert('Please fill in all fields and select cast members.');\r\n      return;\r\n    }\r\n\r\n    const movieData = {\r\n      title: movieTitle,\r\n      genre,\r\n      releaseDate,\r\n      cast: selectedCast, // Send selected cast with the movie data\r\n    };\r\n\r\n    // Replace with your backend API URL\r\n    axios.post('/movies', movieData)\r\n      .then(response => {\r\n        alert('Movie saved successfully');\r\n        console.log(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error saving movie:', error);\r\n        alert('Error saving movie.');\r\n      });\r\n  };\r\n\r\n  // This function will receive cast data from CastandCrew component\r\n  const handleAddCast = (newCast) => {\r\n    setSelectedCast(newCast);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>Movie Form</h1>\r\n      <div>\r\n        <label>Movie Title:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={movieTitle}\r\n          onChange={(e) => setMovieTitle(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Genre:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={genre}\r\n          onChange={(e) => setGenre(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Release Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          value={releaseDate}\r\n          onChange={(e) => setReleaseDate(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Cast:</label>\r\n        {/* Pass the selected cast and the function to update cast */}\r\n        <CastandCrew onAddCast={handleAddCast} />\r\n        <div className=\"selected-cast\">\r\n          {selectedCast.length > 0 ? (\r\n            <ul>\r\n              {selectedCast.map((cast, index) => (\r\n                <li key={index}>{cast.name} ({cast.characterName || 'Character Name'})</li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No cast selected yet</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <button type=\"button\" onClick={handleSaveMovie}>\r\n        Save Movie\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}