{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Photos\\\\Photos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext, useCallback, useRef } from 'react';\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\nimport './Photos.css';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Photos() {\n  _s();\n  const {\n    auth\n  } = useContext(AuthContext);\n  const [photoid, setPhotoId] = useState(undefined);\n  const urlRef = useRef();\n  const descriptionRef = useRef();\n  const [photos, setPhotos] = useState([]);\n  const [selectedphoto, setSelectedPhoto] = useState({});\n  const [tmdbMovieId, setTmdbMovieId] = useState(null);\n  const [importMessage, setImportMessage] = useState('');\n  let {\n    movieId\n  } = useParams();\n  const getAll = useCallback(movieId => {\n    axios({\n      method: 'get',\n      url: `/movies/${movieId}`,\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${auth.accessToken}`\n      }\n    }).then(response => {\n      setPhotos(response.data.photos);\n      setTmdbMovieId(response.data.tmdbId);\n    }).catch(error => {\n      console.error(\"Error fetching Photos:\", error.response.data);\n    });\n  }, [auth.accessToken]);\n  useEffect(() => {\n    getAll(movieId);\n  }, [movieId, getAll]);\n  const importPhotosFromTMDB = async () => {\n    if (!tmdbMovieId) {\n      setImportMessage('TMDB Movie ID not found');\n      setTimeout(() => setImportMessage(''), 3000);\n      return;\n    }\n    try {\n      const response = await axios({\n        method: 'get',\n        url: `https://api.themoviedb.org/3/movie/${tmdbMovieId}/images`,\n        headers: {\n          Accept: 'application/json',\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MGY0ZjFlMmNhODQ1ZjA3NWY5MmI5ZDRlMGY3ZTEwYiIsIm5iZiI6MTcyOTkyNjY3NC40NzIwOTksInN1YiI6IjY3MTM3ODRmNjUwMjQ4YjlkYjYxZTgxMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RRJNLOg8pmgYoomiCWKtwkw74T3ZtAs7ZScqxo1bzWg'\n        }\n      });\n      const importedPhotos = [...response.data.backdrops.slice(0, 5), ...response.data.posters.slice(0, 5)];\n      const importPromises = importedPhotos.map(async photo => {\n        const payload = {\n          userId: auth.user.userId,\n          movieId: movieId,\n          url: `https://image.tmdb.org/t/p/original${photo.file_path}`,\n          description: `TMDB ${photo.type || 'Image'}`\n        };\n        try {\n          await axios.post('/admin/photos', payload, {\n            headers: {\n              Authorization: `Bearer ${auth.accessToken}`\n            }\n          });\n        } catch (error) {\n          console.error(`Error importing photo:`, error);\n        }\n      });\n      await Promise.all(importPromises);\n      getAll(movieId);\n      setImportMessage(`Successfully imported ${importedPhotos.length} photos`);\n      setTimeout(() => {\n        setImportMessage('');\n      }, 3000);\n    } catch (error) {\n      console.error(\"Error importing photos:\", error);\n      setImportMessage('Failed to import photos');\n      setTimeout(() => {\n        setImportMessage('');\n      }, 3000);\n    }\n  };\n  const validateField = (fieldRef, fieldName) => {\n    if (!fieldRef.current.value.trim()) {\n      fieldRef.current.style.border = '2px solid red';\n      setTimeout(() => {\n        fieldRef.current.style.border = '1px solid #ccc';\n      }, 2000);\n      console.log(`${fieldName} cannot be empty.`);\n      return false;\n    }\n    return true;\n  };\n  const handlesave = async () => {\n    const validateFields = () => {\n      const isUrlValid = validateField(urlRef, \"URL\");\n      const isDescriptionValid = validateField(descriptionRef, \"Description\");\n      return isUrlValid && isDescriptionValid;\n    };\n    if (!validateFields()) {\n      return;\n    } else {\n      try {\n        const dataphoto = {\n          userId: auth.user.userId,\n          movieId: movieId,\n          url: selectedphoto.url,\n          description: selectedphoto.description\n        };\n        await axios({\n          method: 'POST',\n          url: '/admin/photos',\n          data: dataphoto,\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        alert('Added Success');\n        setSelectedPhoto({});\n        getAll(movieId);\n      } catch (error) {\n        var _error$response;\n        console.log(\"Error Saving Photo\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      }\n    }\n  };\n  const handledelete = id => {\n    const isConfirm = window.confirm(\"Are you Sure to Delete this Photo?\");\n    if (isConfirm) {\n      axios({\n        method: 'delete',\n        url: `/photos/${id}`,\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      }).then(() => {\n        alert(\"Delete Success\");\n        getAll(movieId);\n      }).catch(err => {\n        console.log(\"Error Deleting Photo\", err);\n      });\n    }\n  };\n  const handleclear = useCallback(() => {\n    setSelectedPhoto({});\n    setPhotoId(undefined);\n  }, [setSelectedPhoto, setPhotoId]);\n  const photofetch = async id => {\n    axios({\n      method: 'get',\n      url: `/photos/${id}`,\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${auth.accessToken}`\n      }\n    }).then(response => {\n      setSelectedPhoto(response.data);\n      setPhotoId(response.data.id);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const photoUpdate = async id => {\n    const validateFields = () => {\n      const isUrlValid = validateField(urlRef, \"URL\");\n      const isDescriptionValid = validateField(descriptionRef, \"Description\");\n      return isUrlValid && isDescriptionValid;\n    };\n    if (!validateFields()) {\n      return;\n    } else {\n      const isConfirm = window.confirm(\"Are you sure you want to update the Photo?\");\n      if (isConfirm) {\n        const dataphoto = {\n          userId: auth.user.userId,\n          movieId: selectedphoto.movieId,\n          description: selectedphoto.description,\n          url: selectedphoto.url\n        };\n        console.log(\"Updating photo with data:\", dataphoto);\n        try {\n          await axios({\n            method: 'patch',\n            url: `/photos/${id}`,\n            data: dataphoto,\n            headers: {\n              Accept: 'application/json',\n              Authorization: `Bearer ${auth.accessToken}`\n            }\n          });\n          alert('Updated successfully!');\n          handleclear();\n          getAll(movieId);\n        } catch (error) {\n          var _error$response2;\n          console.log(\"Error Updating Photo\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photo-box\",\n    children: [importMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"import-message\",\n      children: importMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Photo-View-Box\",\n      children: photos.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-display-photo\",\n        children: photos.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-photo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"delete-button\",\n              onClick: () => handledelete(image.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"edit-button\",\n              onClick: () => photofetch(image.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: image.url,\n            alt: image.description,\n            style: {\n              width: '100%'\n            },\n            className: \"image-style\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-photo\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: image.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this)]\n        }, image.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-photo\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Photos not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Photo-Search-Box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parent-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-box-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"import-button\",\n            type: \"button\",\n            onClick: importPhotosFromTMDB,\n            children: \"Import from TMDB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-detail-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"photo-container-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"photo-image-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"photo-movies\",\n                src: selectedphoto.url ? selectedphoto.url : 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg',\n                className: \"photo-img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"photo-info-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label-photo\",\n              children: \"Url Image:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"photo-url\",\n              value: selectedphoto.url || '',\n              onChange: e => setSelectedPhoto(prev => ({\n                ...prev,\n                url: e.target.value\n              })),\n              ref: urlRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label-photo\",\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"photo-description\",\n              value: selectedphoto.description || '',\n              onChange: e => setSelectedPhoto(prev => ({\n                ...prev,\n                description: e.target.value\n              })),\n              ref: descriptionRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"save-edit-back-btn\",\n          children: [!photoid ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-save-btn\",\n            type: \"button\",\n            onClick: handlesave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-save-btn\",\n            type: \"button\",\n            onClick: () => photoUpdate(photoid),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-btn\",\n            type: \"button\",\n            onClick: handleclear,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n}\n_s(Photos, \"PMMvikf+kY/F4JwJRgzqp/KAp0o=\", false, function () {\n  return [useParams];\n});\n_c = Photos;\nexport default Photos;\nvar _c;\n$RefreshReg$(_c, \"Photos\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useCallback","useRef","AuthContext","axios","useParams","jsxDEV","_jsxDEV","Photos","_s","auth","photoid","setPhotoId","undefined","urlRef","descriptionRef","photos","setPhotos","selectedphoto","setSelectedPhoto","tmdbMovieId","setTmdbMovieId","importMessage","setImportMessage","movieId","getAll","method","url","headers","Accept","Authorization","accessToken","then","response","data","tmdbId","catch","error","console","importPhotosFromTMDB","setTimeout","importedPhotos","backdrops","slice","posters","importPromises","map","photo","payload","userId","user","file_path","description","type","post","Promise","all","length","validateField","fieldRef","fieldName","current","value","trim","style","border","log","handlesave","validateFields","isUrlValid","isDescriptionValid","dataphoto","alert","_error$response","message","handledelete","id","isConfirm","window","confirm","err","handleclear","photofetch","photoUpdate","_error$response2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","image","onClick","src","alt","width","onChange","e","prev","target","ref","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Photos/Photos.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext, useCallback, useRef } from 'react';\r\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\r\nimport './Photos.css';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Photos() {\r\n  const { auth } = useContext(AuthContext);\r\n  const [photoid, setPhotoId] = useState(undefined);\r\n  const urlRef = useRef();\r\n  const descriptionRef = useRef();\r\n  const [photos, setPhotos] = useState([]);\r\n  const [selectedphoto, setSelectedPhoto] = useState({});\r\n  const [tmdbMovieId, setTmdbMovieId] = useState(null);\r\n  const [importMessage, setImportMessage] = useState('');\r\n  let { movieId } = useParams();\r\n\r\n  const getAll = useCallback((movieId) => {\r\n    axios({\r\n      method: 'get',\r\n      url: `/movies/${movieId}`,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        Authorization: `Bearer ${auth.accessToken}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setPhotos(response.data.photos);\r\n        setTmdbMovieId(response.data.tmdbId);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching Photos:\", error.response.data);\r\n      });\r\n  }, [auth.accessToken]);\r\n\r\n  useEffect(() => {\r\n    getAll(movieId);\r\n  }, [movieId, getAll]);\r\n\r\n  const importPhotosFromTMDB = async () => {\r\n    if (!tmdbMovieId) {\r\n      setImportMessage('TMDB Movie ID not found');\r\n      setTimeout(() => setImportMessage(''), 3000);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios({\r\n        method: 'get',\r\n        url: `https://api.themoviedb.org/3/movie/${tmdbMovieId}/images`,\r\n        headers: {\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MGY0ZjFlMmNhODQ1ZjA3NWY5MmI5ZDRlMGY3ZTEwYiIsIm5iZiI6MTcyOTkyNjY3NC40NzIwOTksInN1YiI6IjY3MTM3ODRmNjUwMjQ4YjlkYjYxZTgxMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RRJNLOg8pmgYoomiCWKtwkw74T3ZtAs7ZScqxo1bzWg'\r\n        },\r\n      });\r\n\r\n      const importedPhotos = [\r\n        ...response.data.backdrops.slice(0, 5),\r\n        ...response.data.posters.slice(0, 5)\r\n      ];\r\n      \r\n      const importPromises = importedPhotos.map(async (photo) => {\r\n        const payload = {\r\n          userId: auth.user.userId,\r\n          movieId: movieId,\r\n          url: `https://image.tmdb.org/t/p/original${photo.file_path}`,\r\n          description: `TMDB ${photo.type || 'Image'}`,\r\n        };\r\n\r\n        try {\r\n          await axios.post('/admin/photos', payload, {\r\n            headers: {\r\n              Authorization: `Bearer ${auth.accessToken}`,\r\n            },\r\n          });\r\n        } catch (error) {\r\n          console.error(`Error importing photo:`, error);\r\n        }\r\n      });\r\n\r\n      await Promise.all(importPromises);\r\n      getAll(movieId);\r\n\r\n      setImportMessage(`Successfully imported ${importedPhotos.length} photos`);\r\n      \r\n      setTimeout(() => {\r\n        setImportMessage('');\r\n      }, 3000);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error importing photos:\", error);\r\n      setImportMessage('Failed to import photos');\r\n      \r\n      setTimeout(() => {\r\n        setImportMessage('');\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const validateField = (fieldRef, fieldName) => {\r\n    if (!fieldRef.current.value.trim()) {\r\n      fieldRef.current.style.border = '2px solid red';\r\n      setTimeout(() => {\r\n        fieldRef.current.style.border = '1px solid #ccc';\r\n      }, 2000);\r\n      console.log(`${fieldName} cannot be empty.`);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handlesave = async () => {\r\n    const validateFields = () => {\r\n      const isUrlValid = validateField(urlRef, \"URL\");\r\n      const isDescriptionValid = validateField(descriptionRef, \"Description\");\r\n\r\n      return isUrlValid && isDescriptionValid;\r\n    };\r\n\r\n    if (!validateFields()) {\r\n      return;\r\n    } else {\r\n      try {\r\n        const dataphoto = {\r\n          userId: auth.user.userId,\r\n          movieId: movieId,\r\n          url: selectedphoto.url,\r\n          description: selectedphoto.description,\r\n        };\r\n\r\n        await axios({\r\n          method: 'POST',\r\n          url: '/admin/photos',\r\n          data: dataphoto,\r\n          headers: {\r\n            Authorization: `Bearer ${auth.accessToken}`,\r\n          },\r\n        });\r\n        alert('Added Success');\r\n        setSelectedPhoto({});\r\n        getAll(movieId);\r\n      } catch (error) {\r\n        console.log(\"Error Saving Photo\", error.response?.data || error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handledelete = (id) => {\r\n    const isConfirm = window.confirm(\"Are you Sure to Delete this Photo?\");\r\n    if (isConfirm) {\r\n      axios({\r\n        method: 'delete',\r\n        url: `/photos/${id}`,\r\n        headers: {\r\n          Authorization: `Bearer ${auth.accessToken}`,\r\n        },\r\n      }).then(() => {\r\n        alert(\"Delete Success\");\r\n        getAll(movieId);\r\n      }).catch((err) => {\r\n        console.log(\"Error Deleting Photo\", err);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleclear = useCallback(() => {\r\n    setSelectedPhoto({});\r\n    setPhotoId(undefined);\r\n  }, [setSelectedPhoto, setPhotoId]);\r\n\r\n  const photofetch = async (id) => {\r\n    axios({\r\n      method: 'get',\r\n      url: `/photos/${id}`,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        Authorization: `Bearer ${auth.accessToken}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setSelectedPhoto(response.data);\r\n        setPhotoId(response.data.id);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const photoUpdate = async (id) => {\r\n    const validateFields = () => {\r\n      const isUrlValid = validateField(urlRef, \"URL\");\r\n      const isDescriptionValid = validateField(descriptionRef, \"Description\");\r\n\r\n      return isUrlValid && isDescriptionValid;\r\n    };\r\n\r\n    if (!validateFields()) {\r\n      return;\r\n    } else {\r\n      const isConfirm = window.confirm(\"Are you sure you want to update the Photo?\");\r\n      if (isConfirm) {\r\n        const dataphoto = {\r\n          userId: auth.user.userId,\r\n          movieId: selectedphoto.movieId,\r\n          description: selectedphoto.description,\r\n          url: selectedphoto.url,\r\n        };\r\n\r\n        console.log(\"Updating photo with data:\", dataphoto);\r\n\r\n        try {\r\n          await axios({\r\n            method: 'patch',\r\n            url: `/photos/${id}`,\r\n            data: dataphoto,\r\n            headers: {\r\n              Accept: 'application/json',\r\n              Authorization: `Bearer ${auth.accessToken}`,\r\n            },\r\n          });\r\n          alert('Updated successfully!');\r\n          handleclear();\r\n          getAll(movieId);\r\n        } catch (error) {\r\n          console.log(\"Error Updating Photo\", error.response?.data || error.message);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='photo-box'>\r\n      {importMessage && (\r\n        <div className=\"import-message\">\r\n          {importMessage}\r\n        </div>\r\n      )}\r\n  \r\n      <div className='Photo-View-Box'>\r\n        {photos.length > 0 ? (\r\n          <div className='card-display-photo'>\r\n            {photos.map((image) => (\r\n              <div key={image.id} className='card-photo'>\r\n                <div className='buttons-group'>\r\n                  <button\r\n                    type='button'\r\n                    className='delete-button'\r\n                    onClick={() => handledelete(image.id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <button\r\n                    type='button'\r\n                    className='edit-button'\r\n                    onClick={() => photofetch(image.id)}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                </div>\r\n                <img src={image.url} alt={image.description} style={{ width: '100%' }} className='image-style' />\r\n                <div className='container-photo'>\r\n                  <p>{image.description}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className='no-photo'>\r\n            <h3>Photos not Found</h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n  \r\n      <div className='Photo-Search-Box'>\r\n        <div className='parent-container'>\r\n          <div className='search-box-btn'>\r\n            <button\r\n              className='import-button'\r\n              type='button'\r\n              onClick={importPhotosFromTMDB}\r\n            >\r\n              Import from TMDB\r\n            </button>\r\n          </div>\r\n  \r\n          <div className='photo-detail-box'>\r\n            <div className='photo-container-center'>\r\n              <div className='photo-image-container'>\r\n                <img\r\n                  alt='photo-movies'\r\n                  src={selectedphoto.url\r\n                    ? selectedphoto.url\r\n                    : 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\r\n                  }\r\n                  className='photo-img'\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n  \r\n          <div className='photo-info-text'>\r\n            <div className='input-group'>\r\n              <label className='label-photo'>Url Image:</label>\r\n              <input\r\n                className='photo-url'\r\n                value={selectedphoto.url || ''}\r\n                onChange={(e) => setSelectedPhoto(prev => ({ ...prev, url: e.target.value }))}\r\n                ref={urlRef}\r\n              />\r\n            </div>\r\n  \r\n            <div className='input-group'>\r\n              <label className='label-photo'>Description:</label>\r\n              <textarea\r\n                className='photo-description'\r\n                value={selectedphoto.description || ''}\r\n                onChange={(e) => setSelectedPhoto(prev => ({ ...prev, description: e.target.value }))}\r\n                ref={descriptionRef}\r\n              />\r\n            </div>\r\n          </div>\r\n  \r\n          <div className='save-edit-back-btn'>\r\n            {!photoid ? (\r\n              <button className='edit-save-btn' type='button' onClick={handlesave}>\r\n                Save\r\n              </button>\r\n            ) : (\r\n              <button className='edit-save-btn' type='button' onClick={() => photoUpdate(photoid)}>\r\n                Update\r\n              </button>\r\n            )}\r\n  \r\n            <button className='clear-btn' type='button' onClick={handleclear}>\r\n              Clear\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Photos;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}