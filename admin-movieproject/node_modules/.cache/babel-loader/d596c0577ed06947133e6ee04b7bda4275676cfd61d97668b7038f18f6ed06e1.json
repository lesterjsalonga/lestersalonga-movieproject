{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Videos\\\\Videos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport './Videos.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Videos() {\n  _s();\n  const {\n    auth\n  } = useContext(AuthContext);\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState({});\n  const [videoUrl, setVideoUrl] = useState('');\n  const [videoKey, setVideoKey] = useState('');\n  const [videoName, setVideoName] = useState('');\n  const [videoSite, setVideoSite] = useState('');\n  const [videoType, setVideoType] = useState('');\n  const [official, setOfficial] = useState(false);\n  const {\n    movieId\n  } = useParams();\n\n  // Fetch all videos for the movie\n  const fetchVideos = useCallback(async movieId => {\n    try {\n      const response = await axios.get(`/movies/${movieId}`, {\n        headers: {\n          Accept: 'application/json',\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      });\n      setVideos(response.data.videos);\n    } catch (error) {\n      console.error('Error fetching videos:', error);\n    }\n  }, [auth.accessToken]);\n\n  // Extract YouTube video ID from the URL\n  const extractVideoId = url => {\n    const regex = /(?:https?:\\/\\/(?:www\\.)?youtube\\.com\\/(?:watch\\?v=|embed\\/)([\\w-]+))/i;\n    const match = url.match(regex);\n    return match ? match[1] : null;\n  };\n\n  // Handle video form submission (save)\n  const handleSave = async () => {\n    const videoData = {\n      userId: auth.user.userId,\n      movieId: movieId,\n      url: `https://www.youtube.com/embed/${videoKey}`,\n      videoKey: videoKey,\n      name: videoName,\n      site: videoSite,\n      videoType: videoType,\n      official: official\n    };\n    try {\n      await axios.post('/admin/videos', videoData, {\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      });\n      alert('Video added successfully!');\n      fetchVideos(movieId); // Refresh the video list\n      resetForm(); // Reset the form after saving\n    } catch (error) {\n      console.error('Error saving video:', error);\n      alert('Error saving video, please try again.');\n    }\n  };\n\n  // Handle video update\n  const handleUpdate = async id => {\n    const videoData = {\n      userId: auth.user.userId,\n      movieId: movieId,\n      url: `https://www.youtube.com/embed/${videoKey}`,\n      videoKey: videoKey,\n      name: videoName,\n      site: videoSite,\n      videoType: videoType,\n      official: official\n    };\n    try {\n      await axios.patch(`/videos/${id}`, videoData, {\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      });\n      alert('Video updated successfully!');\n      fetchVideos(movieId); // Refresh the video list\n      resetForm(); // Reset the form after updating\n    } catch (error) {\n      console.error('Error updating video:', error);\n      alert('Error updating video, please try again.');\n    }\n  };\n\n  // Handle video deletion\n  const handleDelete = async id => {\n    const confirmDelete = window.confirm('Are you sure you want to delete this video?');\n    if (confirmDelete) {\n      try {\n        await axios.delete(`/videos/${id}`, {\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        alert('Video deleted successfully!');\n        fetchVideos(movieId); // Refresh the video list\n      } catch (error) {\n        console.error('Error deleting video:', error);\n        alert('Error deleting video, please try again.');\n      }\n    }\n  };\n\n  // Reset form fields\n  const resetForm = () => {\n    setVideoUrl('');\n    setVideoKey('');\n    setVideoName('');\n    setVideoSite('');\n    setVideoType('');\n    setOfficial(false);\n    setSelectedVideo({});\n  };\n  useEffect(() => {\n    fetchVideos(movieId);\n  }, [movieId, fetchVideos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videos-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videos-list\",\n      children: videos.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"videos-cards\",\n        children: videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => handleDelete(video.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-button\",\n              onClick: () => setSelectedVideo(video),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n            title: video.name,\n            width: \"100%\",\n            height: \"200\",\n            src: `https://www.youtube.com/embed/${video.videoKey}`,\n            frameBorder: \"0\",\n            allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n            allowFullScreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-info\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: video.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this)]\n        }, video.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No videos found for this movie.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedVideo.id ? 'Edit Video' : 'Add New Video'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Video URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          value: videoUrl,\n          onChange: e => {\n            const url = e.target.value;\n            setVideoUrl(url);\n            const id = extractVideoId(url);\n            if (id) {\n              setVideoKey(id);\n            }\n          },\n          placeholder: \"Enter YouTube URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Video Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: videoName,\n          onChange: e => setVideoName(e.target.value),\n          placeholder: \"Enter video name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Site\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: videoSite,\n          onChange: e => setVideoSite(e.target.value),\n          placeholder: \"Enter site name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Video Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: videoType,\n          onChange: e => setVideoType(e.target.value),\n          placeholder: \"Enter video type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Official\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: official ? 'Yes' : 'No',\n          onChange: e => setOfficial(e.target.value === 'Yes'),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Yes\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"No\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [selectedVideo.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdate(selectedVideo.id),\n          children: \"Update Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          children: \"Save Video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetForm,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(Videos, \"6aPQriQJScg/YDFzH6xC/E4C7cM=\", false, function () {\n  return [useParams];\n});\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","useCallback","AuthContext","axios","useParams","jsxDEV","_jsxDEV","Videos","_s","auth","videos","setVideos","selectedVideo","setSelectedVideo","videoUrl","setVideoUrl","videoKey","setVideoKey","videoName","setVideoName","videoSite","setVideoSite","videoType","setVideoType","official","setOfficial","movieId","fetchVideos","response","get","headers","Accept","Authorization","accessToken","data","error","console","extractVideoId","url","regex","match","handleSave","videoData","userId","user","name","site","post","alert","resetForm","handleUpdate","id","patch","handleDelete","confirmDelete","window","confirm","delete","className","children","length","map","video","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","width","height","src","frameBorder","allow","allowFullScreen","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Videos/Videos.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef, useCallback } from 'react';\r\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport './Videos.css';\r\n\r\nfunction Videos() {\r\n  const { auth } = useContext(AuthContext);\r\n  const [videos, setVideos] = useState([]);\r\n  const [selectedVideo, setSelectedVideo] = useState({});\r\n  const [videoUrl, setVideoUrl] = useState('');\r\n  const [videoKey, setVideoKey] = useState('');\r\n  const [videoName, setVideoName] = useState('');\r\n  const [videoSite, setVideoSite] = useState('');\r\n  const [videoType, setVideoType] = useState('');\r\n  const [official, setOfficial] = useState(false);\r\n  const { movieId } = useParams();\r\n\r\n  // Fetch all videos for the movie\r\n  const fetchVideos = useCallback(async (movieId) => {\r\n    try {\r\n      const response = await axios.get(`/movies/${movieId}`, {\r\n        headers: {\r\n          Accept: 'application/json',\r\n          Authorization: `Bearer ${auth.accessToken}`,\r\n        },\r\n      });\r\n      setVideos(response.data.videos);\r\n    } catch (error) {\r\n      console.error('Error fetching videos:', error);\r\n    }\r\n  }, [auth.accessToken]);\r\n\r\n  // Extract YouTube video ID from the URL\r\n  const extractVideoId = (url) => {\r\n    const regex = /(?:https?:\\/\\/(?:www\\.)?youtube\\.com\\/(?:watch\\?v=|embed\\/)([\\w-]+))/i;\r\n    const match = url.match(regex);\r\n    return match ? match[1] : null;\r\n  };\r\n\r\n  // Handle video form submission (save)\r\n  const handleSave = async () => {\r\n    const videoData = {\r\n      userId: auth.user.userId,\r\n      movieId: movieId,\r\n      url: `https://www.youtube.com/embed/${videoKey}`,\r\n      videoKey: videoKey,\r\n      name: videoName,\r\n      site: videoSite,\r\n      videoType: videoType,\r\n      official: official,\r\n    };\r\n\r\n    try {\r\n      await axios.post('/admin/videos', videoData, {\r\n        headers: {\r\n          Authorization: `Bearer ${auth.accessToken}`,\r\n        },\r\n      });\r\n      alert('Video added successfully!');\r\n      fetchVideos(movieId); // Refresh the video list\r\n      resetForm(); // Reset the form after saving\r\n    } catch (error) {\r\n      console.error('Error saving video:', error);\r\n      alert('Error saving video, please try again.');\r\n    }\r\n  };\r\n\r\n  // Handle video update\r\n  const handleUpdate = async (id) => {\r\n    const videoData = {\r\n      userId: auth.user.userId,\r\n      movieId: movieId,\r\n      url: `https://www.youtube.com/embed/${videoKey}`,\r\n      videoKey: videoKey,\r\n      name: videoName,\r\n      site: videoSite,\r\n      videoType: videoType,\r\n      official: official,\r\n    };\r\n\r\n    try {\r\n      await axios.patch(`/videos/${id}`, videoData, {\r\n        headers: {\r\n          Authorization: `Bearer ${auth.accessToken}`,\r\n        },\r\n      });\r\n      alert('Video updated successfully!');\r\n      fetchVideos(movieId); // Refresh the video list\r\n      resetForm(); // Reset the form after updating\r\n    } catch (error) {\r\n      console.error('Error updating video:', error);\r\n      alert('Error updating video, please try again.');\r\n    }\r\n  };\r\n\r\n  // Handle video deletion\r\n  const handleDelete = async (id) => {\r\n    const confirmDelete = window.confirm('Are you sure you want to delete this video?');\r\n    if (confirmDelete) {\r\n      try {\r\n        await axios.delete(`/videos/${id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${auth.accessToken}`,\r\n          },\r\n        });\r\n        alert('Video deleted successfully!');\r\n        fetchVideos(movieId); // Refresh the video list\r\n      } catch (error) {\r\n        console.error('Error deleting video:', error);\r\n        alert('Error deleting video, please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Reset form fields\r\n  const resetForm = () => {\r\n    setVideoUrl('');\r\n    setVideoKey('');\r\n    setVideoName('');\r\n    setVideoSite('');\r\n    setVideoType('');\r\n    setOfficial(false);\r\n    setSelectedVideo({});\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchVideos(movieId);\r\n  }, [movieId, fetchVideos]);\r\n\r\n  return (\r\n    <div className=\"videos-container\">\r\n      <div className=\"videos-list\">\r\n        {videos.length > 0 ? (\r\n          <div className=\"videos-cards\">\r\n            {videos.map((video) => (\r\n              <div key={video.id} className=\"video-card\">\r\n                <div className=\"video-actions\">\r\n                  <button\r\n                    className=\"delete-button\"\r\n                    onClick={() => handleDelete(video.id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <button\r\n                    className=\"edit-button\"\r\n                    onClick={() => setSelectedVideo(video)}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                </div>\r\n                <iframe\r\n                  title={video.name}\r\n                  width=\"100%\"\r\n                  height=\"200\"\r\n                  src={`https://www.youtube.com/embed/${video.videoKey}`}\r\n                  frameBorder=\"0\"\r\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                  allowFullScreen\r\n                ></iframe>\r\n                <div className=\"video-info\">\r\n                  <p>{video.name}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p>No videos found for this movie.</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"video-form\">\r\n        <h3>{selectedVideo.id ? 'Edit Video' : 'Add New Video'}</h3>\r\n        <div className=\"form-group\">\r\n          <label>Video URL</label>\r\n          <input\r\n            type=\"url\"\r\n            value={videoUrl}\r\n            onChange={(e) => {\r\n              const url = e.target.value;\r\n              setVideoUrl(url);\r\n              const id = extractVideoId(url);\r\n              if (id) {\r\n                setVideoKey(id);\r\n              }\r\n            }}\r\n            placeholder=\"Enter YouTube URL\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Video Name</label>\r\n          <input\r\n            type=\"text\"\r\n            value={videoName}\r\n            onChange={(e) => setVideoName(e.target.value)}\r\n            placeholder=\"Enter video name\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Site</label>\r\n          <input\r\n            type=\"text\"\r\n            value={videoSite}\r\n            onChange={(e) => setVideoSite(e.target.value)}\r\n            placeholder=\"Enter site name\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Video Type</label>\r\n          <input\r\n            type=\"text\"\r\n            value={videoType}\r\n            onChange={(e) => setVideoType(e.target.value)}\r\n            placeholder=\"Enter video type\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Official</label>\r\n          <select\r\n            value={official ? 'Yes' : 'No'}\r\n            onChange={(e) => setOfficial(e.target.value === 'Yes')}\r\n          >\r\n            <option value=\"Yes\">Yes</option>\r\n            <option value=\"No\">No</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-actions\">\r\n          {selectedVideo.id ? (\r\n            <button onClick={() => handleUpdate(selectedVideo.id)}>Update Video</button>\r\n          ) : (\r\n            <button onClick={handleSave}>Save Video</button>\r\n          )}\r\n          <button onClick={resetForm}>Clear</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Videos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}