{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Cast\\\\Cast.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cast() {\n  _s();\n  const [castMembers, setCastMembers] = useState([]);\n  const [selectedCast, setSelectedCast] = useState(null);\n  useEffect(() => {\n    // Get the token from localStorage and set it for Axios\n    const token = localStorage.getItem('accessToken');\n    if (token) {\n      axios.defaults.headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    // Fetch Cast Members\n    fetchCastMembers();\n  }, []);\n  const fetchCastMembers = async () => {\n    try {\n      const res = await axios.get('http://localhost/movieproject-api/casts');\n      setCastMembers(res.data); // Assuming response data contains cast members\n    } catch (error) {\n      console.error('Error fetching cast members:', error);\n    }\n  };\n  const saveCastMember = async () => {\n    const castData = {\n      userId: 1,\n      // This should be dynamic based on the logged-in user\n      movieId: 38,\n      name: selectedCast.name,\n      characterName: selectedCast.characterName,\n      url: selectedCast.imageURL\n    };\n    try {\n      const res = await axios.post('http://localhost/movieproject-api/admin/casts', castData);\n      console.log('Cast saved:', res.data);\n    } catch (error) {\n      console.error('Error saving cast member:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Cast Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: castMembers.map(cast => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [cast.name, \" - \", cast.characterName, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedCast(cast),\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, cast.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), selectedCast && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: selectedCast.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveCastMember,\n        children: \"Save Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Cast, \"Vx/votGD6/xI2MPgmEbHsAwXMx8=\");\n_c = Cast;\nexport default Cast;\nvar _c;\n$RefreshReg$(_c, \"Cast\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","Cast","_s","castMembers","setCastMembers","selectedCast","setSelectedCast","token","localStorage","getItem","defaults","headers","fetchCastMembers","res","get","data","error","console","saveCastMember","castData","userId","movieId","name","characterName","url","imageURL","post","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","cast","onClick","id","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Cast/Cast.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Cast() {\r\n  const [castMembers, setCastMembers] = useState([]);\r\n  const [selectedCast, setSelectedCast] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Get the token from localStorage and set it for Axios\r\n    const token = localStorage.getItem('accessToken');\r\n    if (token) {\r\n      axios.defaults.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    // Fetch Cast Members\r\n    fetchCastMembers();\r\n  }, []);\r\n\r\n  const fetchCastMembers = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost/movieproject-api/casts');\r\n      setCastMembers(res.data); // Assuming response data contains cast members\r\n    } catch (error) {\r\n      console.error('Error fetching cast members:', error);\r\n    }\r\n  };\r\n\r\n  const saveCastMember = async () => {\r\n    const castData = {\r\n      userId: 1, // This should be dynamic based on the logged-in user\r\n      movieId: 38,\r\n      name: selectedCast.name,\r\n      characterName: selectedCast.characterName,\r\n      url: selectedCast.imageURL,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        'http://localhost/movieproject-api/admin/casts',\r\n        castData\r\n      );\r\n      console.log('Cast saved:', res.data);\r\n    } catch (error) {\r\n      console.error('Error saving cast member:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Cast Management</h3>\r\n      <ul>\r\n        {castMembers.map((cast) => (\r\n          <li key={cast.id}>\r\n            {cast.name} - {cast.characterName}\r\n            <button onClick={() => setSelectedCast(cast)}>Select</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {selectedCast && (\r\n        <div>\r\n          <h4>{selectedCast.name}</h4>\r\n          <button onClick={saveCastMember}>Save Cast</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cast;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}