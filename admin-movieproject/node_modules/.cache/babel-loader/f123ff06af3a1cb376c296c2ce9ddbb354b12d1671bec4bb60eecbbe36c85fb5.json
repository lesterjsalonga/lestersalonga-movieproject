{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useParams, useNavigate, Outlet } from 'react-router-dom';\nimport './Form.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [searchedMovieList, setSearchedMovieList] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(undefined);\n  const [movie, setMovie] = useState(undefined);\n  const [notFound, setNotFound] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  let {\n    movieId\n  } = useParams();\n\n  // Additional state for cast, crew, photos, and videos\n  const [castAndCrew, setCastAndCrew] = useState([]);\n  const [photos, setPhotos] = useState([]);\n  const [videos, setVideos] = useState([]);\n  const API_BASE_URL = 'https://api.themoviedb.org/3';\n  const TMDB_HEADERS = {\n    Accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NTAxODgxZmE3YWRhZTQzYWY0MGFmNDA1YzFjODliNCIsIm5iZiI6MTczMjU5NTU3OS4yMjMwMTI3LCJzdWIiOiI2NzEyZmFiYTI1YzcwYjhiMWQ2N2Y4YjQiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.oJ-YA-BPl-l8XBcp_VYDJDTO66e31OMKA-igarucAqE'\n  };\n  const generateImageUrl = path => {\n    return path ? `https://image.tmdb.org/t/p/original/${path}` : '';\n  };\n  const handleSearch = useCallback(async (page = 1) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`, {\n        headers: TMDB_HEADERS\n      });\n      if (response.data.results.length === 0) {\n        setNotFound(true);\n        setSearchedMovieList([]);\n        setTotalPages(0);\n      } else {\n        setSearchedMovieList(response.data.results);\n        setTotalPages(response.data.total_pages);\n        setNotFound(false);\n      }\n    } catch (err) {\n      setError('Error fetching movies. Please try again later.');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [query]);\n  const handleSelectMovie = movie => {\n    setSelectedMovie(movie);\n  };\n  const handleSave = async () => {\n    const accessToken = localStorage.getItem('accessToken');\n    if (!selectedMovie) {\n      alert('Please search and select a movie.');\n      return;\n    }\n    const requiredFields = [{\n      name: 'backdrop_path',\n      value: selectedMovie.backdrop_path\n    }, {\n      name: 'title',\n      value: selectedMovie.title\n    }, {\n      name: 'overview',\n      value: selectedMovie.overview\n    }, {\n      name: 'popularity',\n      value: selectedMovie.popularity\n    }, {\n      name: 'release_date',\n      value: selectedMovie.release_date\n    }, {\n      name: 'vote_average',\n      value: selectedMovie.vote_average\n    }];\n    const missingFields = requiredFields.filter(field => !field.value);\n    if (missingFields.length > 0) {\n      setError(`Missing required fields: ${missingFields.map(field => field.name).join(', ')}`);\n      return;\n    }\n\n    // Handle backdrop image (fallback if missing)\n    const backdropPath = selectedMovie.backdrop_path ? generateImageUrl(selectedMovie.backdrop_path) : '';\n\n    // If backdrop image is required but missing, show error\n    if (!backdropPath) {\n      setError('Backdrop image is required.');\n      return;\n    }\n    const data = {\n      tmdbId: selectedMovie.id,\n      title: selectedMovie.title,\n      overview: selectedMovie.overview,\n      popularity: parseFloat(selectedMovie.popularity),\n      releaseDate: selectedMovie.release_date,\n      voteAverage: parseFloat(selectedMovie.vote_average),\n      backdropPath: backdropPath,\n      posterPath: generateImageUrl(selectedMovie.poster_path),\n      isFeatured: selectedMovie.isFeatured || false,\n      castAndCrew,\n      photos,\n      videos\n    };\n    console.log('Data to be sent:', data);\n    try {\n      if (movieId) {\n        const response = await axios.patch(`/movies/${movieId}`, data, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        console.log('Movie updated response:', response);\n        alert('Movie updated successfully.');\n      } else {\n        // Creating new movie\n        const response = await axios.post('/movies', data, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        console.log('Movie created response:', response);\n        alert('Movie created successfully.');\n      }\n      navigate('/main/movies');\n    } catch (err) {\n      setError('Error saving movie. Please try again later.');\n      console.error('Save movie error:', err.response);\n      if (err.response && err.response.data && err.response.data.errors) {\n        console.error('Error details:', err.response.data.errors);\n        setError(`Validation errors: ${err.response.data.errors.map(error => error.message).join(', ')}`);\n      }\n    }\n  };\n\n  // Fetch additional movie data (cast, crew, photos, videos)\n  useEffect(() => {\n    if (selectedMovie !== null && selectedMovie !== void 0 && selectedMovie.id) {\n      const fetchMovieDetails = async () => {\n        try {\n          const castResponse = await axios.get(`${API_BASE_URL}/movie/${selectedMovie.id}/credits`, {\n            headers: TMDB_HEADERS\n          });\n          setCastAndCrew(castResponse.data.cast);\n          const photosResponse = await axios.get(`${API_BASE_URL}/movie/${selectedMovie.id}/images`, {\n            headers: TMDB_HEADERS\n          });\n          setPhotos(photosResponse.data.backdrops);\n          const videosResponse = await axios.get(`${API_BASE_URL}/movie/${selectedMovie.id}/videos`, {\n            headers: TMDB_HEADERS\n          });\n          setVideos(videosResponse.data.results);\n        } catch (err) {\n          console.error('Error fetching additional movie details:', err);\n        }\n      };\n      fetchMovieDetails();\n    }\n  }, [selectedMovie]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [!movieId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Search Movie:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"Enter movie title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSearch(1),\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searched-movie\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this) : notFound ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No movies found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }, this) : searchedMovieList.map(movie => /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => handleSelectMovie(movie),\n          children: movie.title\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: currentPage === 1,\n          onClick: () => {\n            setCurrentPage(prev => prev - 1);\n            handleSearch(currentPage - 1);\n          },\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" Page \", currentPage, \" of \", totalPages, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: currentPage === totalPages,\n          onClick: () => {\n            setCurrentPage(prev => prev + 1);\n            handleSearch(currentPage + 1);\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [(selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.poster_path) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: generateImageUrl(selectedMovie.poster_path),\n          alt: selectedMovie.title,\n          className: \"poster-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.title) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.overview) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            overview: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Popularity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.popularity) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            popularity: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Release Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.release_date) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            release_date: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Vote Average\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.vote_average) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            vote_average: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleSave,\n          children: movieId ? 'Update' : 'Save'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Cast and Crew\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: castAndCrew.map(person => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [person.name, \" as \", person.character]\n              }, person.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 20\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body images-grid\",\n            children: photos.map(photo => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: generateImageUrl(photo.file_path),\n              alt: \"movie backdrop\"\n            }, photo.file_path, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 18\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: \"Videos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: videos.map(video => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"video-link\",\n                  href: `https://www.youtube.com/watch?v=${video.key}`,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: video.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 22\n                }, this)\n              }, video.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 20\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 8\n    }, this), movieId && selectedMovie && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => navigate(`/main/movies/form/${movieId}/cast-and-crews`),\n            children: \"Cast & Crews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => navigate(`/main/movies/form/${movieId}/videos`),\n            children: \"Videos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => navigate(`/main/movies/form/${movieId}/photos`),\n            children: \"Photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"v53dsjgBbu1JD2wiISc13oixj44=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["axios","useCallback","useEffect","useState","useParams","useNavigate","Outlet","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","query","setQuery","searchedMovieList","setSearchedMovieList","selectedMovie","setSelectedMovie","undefined","movie","setMovie","notFound","setNotFound","currentPage","setCurrentPage","totalPages","setTotalPages","isLoading","setIsLoading","error","setError","navigate","movieId","castAndCrew","setCastAndCrew","photos","setPhotos","videos","setVideos","API_BASE_URL","TMDB_HEADERS","Accept","Authorization","generateImageUrl","path","handleSearch","page","response","get","headers","data","results","length","total_pages","err","console","handleSelectMovie","handleSave","accessToken","localStorage","getItem","alert","requiredFields","name","value","backdrop_path","title","overview","popularity","release_date","vote_average","missingFields","filter","field","map","join","backdropPath","tmdbId","id","parseFloat","releaseDate","voteAverage","posterPath","poster_path","isFeatured","log","patch","post","errors","message","fetchMovieDetails","castResponse","cast","photosResponse","backdrops","videosResponse","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","onClick","disabled","prev","src","alt","rows","person","character","photo","file_path","video","href","key","rel","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Form.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useParams, useNavigate, Outlet } from 'react-router-dom';\r\nimport './Form.css';\r\n\r\nconst Form = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [searchedMovieList, setSearchedMovieList] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState(undefined);\r\n  const [movie, setMovie] = useState(undefined);\r\n  const [notFound, setNotFound] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n  let { movieId } = useParams();\r\n\r\n  // Additional state for cast, crew, photos, and videos\r\n  const [castAndCrew, setCastAndCrew] = useState([]);\r\n  const [photos, setPhotos] = useState([]);\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  const API_BASE_URL = 'https://api.themoviedb.org/3';\r\n  const TMDB_HEADERS = {\r\n    Accept: 'application/json',\r\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NTAxODgxZmE3YWRhZTQzYWY0MGFmNDA1YzFjODliNCIsIm5iZiI6MTczMjU5NTU3OS4yMjMwMTI3LCJzdWIiOiI2NzEyZmFiYTI1YzcwYjhiMWQ2N2Y4YjQiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.oJ-YA-BPl-l8XBcp_VYDJDTO66e31OMKA-igarucAqE',\r\n  };\r\n\r\n  const generateImageUrl = (path) => {\r\n    return path ? `https://image.tmdb.org/t/p/original/${path}` : '';\r\n  };\r\n\r\n  const handleSearch = useCallback(async (page = 1) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(\r\n        `${API_BASE_URL}/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`,\r\n        { headers: TMDB_HEADERS }\r\n      );\r\n      if (response.data.results.length === 0) {\r\n        setNotFound(true);\r\n        setSearchedMovieList([]);\r\n        setTotalPages(0);\r\n      } else {\r\n        setSearchedMovieList(response.data.results);\r\n        setTotalPages(response.data.total_pages);\r\n        setNotFound(false);\r\n      }\r\n    } catch (err) {\r\n      setError('Error fetching movies. Please try again later.');\r\n      console.error(err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [query]);\r\n\r\n  const handleSelectMovie = (movie) => {\r\n    setSelectedMovie(movie);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    if (!selectedMovie) {\r\n      alert('Please search and select a movie.');\r\n      return;\r\n    }\r\n\r\n    const requiredFields = [\r\n      { name: 'backdrop_path', value: selectedMovie.backdrop_path },\r\n      { name: 'title', value: selectedMovie.title },\r\n      { name: 'overview', value: selectedMovie.overview },\r\n      { name: 'popularity', value: selectedMovie.popularity },\r\n      { name: 'release_date', value: selectedMovie.release_date },\r\n      { name: 'vote_average', value: selectedMovie.vote_average },\r\n    ];\r\n\r\n    const missingFields = requiredFields.filter(field => !field.value);\r\n    if (missingFields.length > 0) {\r\n      setError(`Missing required fields: ${missingFields.map(field => field.name).join(', ')}`);\r\n      return;\r\n    }\r\n\r\n    // Handle backdrop image (fallback if missing)\r\n    const backdropPath = selectedMovie.backdrop_path ? generateImageUrl(selectedMovie.backdrop_path) : '';\r\n\r\n    // If backdrop image is required but missing, show error\r\n    if (!backdropPath) {\r\n      setError('Backdrop image is required.');\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      tmdbId: selectedMovie.id,\r\n      title: selectedMovie.title,\r\n      overview: selectedMovie.overview,\r\n      popularity: parseFloat(selectedMovie.popularity),\r\n      releaseDate: selectedMovie.release_date,\r\n      voteAverage: parseFloat(selectedMovie.vote_average),\r\n      backdropPath: backdropPath,\r\n      posterPath: generateImageUrl(selectedMovie.poster_path),\r\n      isFeatured: selectedMovie.isFeatured || false,\r\n      castAndCrew,\r\n      photos,\r\n      videos,\r\n    };\r\n\r\n    console.log('Data to be sent:', data);\r\n\r\n    try {\r\n      if (movieId) {\r\n        const response = await axios.patch(`/movies/${movieId}`, data, {\r\n          headers: { Authorization: `Bearer ${accessToken}` },\r\n        });\r\n        console.log('Movie updated response:', response);\r\n        alert('Movie updated successfully.');\r\n      } else {\r\n        // Creating new movie\r\n        const response = await axios.post('/movies', data, {\r\n          headers: { Authorization: `Bearer ${accessToken}` },\r\n        });\r\n        console.log('Movie created response:', response);\r\n        alert('Movie created successfully.');\r\n      }\r\n      navigate('/main/movies');\r\n    } catch (err) {\r\n      setError('Error saving movie. Please try again later.');\r\n      console.error('Save movie error:', err.response);\r\n      \r\n      if (err.response && err.response.data && err.response.data.errors) {\r\n        console.error('Error details:', err.response.data.errors);\r\n        setError(`Validation errors: ${err.response.data.errors.map(error => error.message).join(', ')}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Fetch additional movie data (cast, crew, photos, videos)\r\n  useEffect(() => {\r\n    if (selectedMovie?.id) {\r\n      const fetchMovieDetails = async () => {\r\n        try {\r\n          const castResponse = await axios.get(\r\n            `${API_BASE_URL}/movie/${selectedMovie.id}/credits`,\r\n            { headers: TMDB_HEADERS }\r\n          );\r\n          setCastAndCrew(castResponse.data.cast);\r\n\r\n          const photosResponse = await axios.get(\r\n            `${API_BASE_URL}/movie/${selectedMovie.id}/images`,\r\n            { headers: TMDB_HEADERS }\r\n          );\r\n          setPhotos(photosResponse.data.backdrops);\r\n\r\n          const videosResponse = await axios.get(\r\n            `${API_BASE_URL}/movie/${selectedMovie.id}/videos`,\r\n            { headers: TMDB_HEADERS }\r\n          );\r\n          setVideos(videosResponse.data.results);\r\n        } catch (err) {\r\n          console.error('Error fetching additional movie details:', err);\r\n        }\r\n      };\r\n      \r\n      fetchMovieDetails();\r\n    }\r\n  }, [selectedMovie]);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {!movieId && (\r\n        <>\r\n          <div className=\"search-container\">\r\n            <label>Search Movie:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              placeholder=\"Enter movie title\"\r\n            />\r\n            <button onClick={() => handleSearch(1)}>Search</button>\r\n          </div>\r\n          <div className=\"searched-movie\">\r\n            {isLoading ? (\r\n              <p>Loading...</p>\r\n            ) : notFound ? (\r\n              <p>No movies found.</p>\r\n            ) : (\r\n              searchedMovieList.map((movie) => (\r\n                <p key={movie.id} onClick={() => handleSelectMovie(movie)}>\r\n                  {movie.title}\r\n                </p>\r\n              ))\r\n            )}\r\n          </div>\r\n          {totalPages > 1 && (\r\n            <div className=\"pagination\">\r\n              <button disabled={currentPage === 1} onClick={() => { \r\n                setCurrentPage((prev) => prev - 1); \r\n                handleSearch(currentPage - 1); \r\n              }}>\r\n                Previous\r\n              </button>\r\n              <span> Page {currentPage} of {totalPages} </span>\r\n              <button disabled={currentPage === totalPages} onClick={() => { \r\n                setCurrentPage((prev) => prev + 1); \r\n                handleSearch(currentPage + 1); \r\n              }}>\r\n                Next\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n      \r\n      {/* Movie Details */}\r\n      <div className=\"movie-details\">\r\n        <form>\r\n          {selectedMovie?.poster_path && (\r\n            <img src={generateImageUrl(selectedMovie.poster_path)} alt={selectedMovie.title} className=\"poster-image\" />\r\n          )}\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={selectedMovie?.title || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, title: e.target.value })}\r\n          />\r\n          <label>Overview</label>\r\n          <textarea\r\n            rows=\"5\"\r\n            value={selectedMovie?.overview || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, overview: e.target.value })}\r\n          ></textarea>\r\n          <label>Popularity</label>\r\n          <input\r\n            type=\"number\"\r\n            value={selectedMovie?.popularity || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, popularity: e.target.value })}\r\n          />\r\n          <label>Release Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={selectedMovie?.release_date || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, release_date: e.target.value })}\r\n          />\r\n          <label>Vote Average</label>\r\n          <input\r\n            type=\"number\"\r\n            value={selectedMovie?.vote_average || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, vote_average: e.target.value })}\r\n          />\r\n          <button type=\"button\" onClick={handleSave}>\r\n            {movieId ? 'Update' : 'Save'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n       {/* Cast and Crew */}\r\n       <div className=\"details-section\">\r\n         <div className=\"card-container\">\r\n           <div className=\"card\">\r\n             <div className=\"card-header\">Cast and Crew</div>\r\n             <div className=\"card-body\">\r\n               <ul>\r\n                 {castAndCrew.map((person) => (\r\n                   <li key={person.id}>\r\n                     {person.name} as {person.character}\r\n                   </li>\r\n                 ))}\r\n               </ul>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n\r\n       {/* Photos */}\r\n       <div className=\"details-section\">\r\n         <div className=\"card-container\">\r\n           <div className=\"card\">\r\n             <div className=\"card-header\">Photos</div>\r\n             <div className=\"card-body images-grid\">\r\n               {photos.map((photo) => (\r\n                 <img key={photo.file_path} src={generateImageUrl(photo.file_path)} alt=\"movie backdrop\" />\r\n               ))}\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n\r\n       {/* Videos */}\r\n       <div className=\"details-section\">\r\n         <div className=\"card-container\">\r\n           <div className=\"card\">\r\n             <div className=\"card-header\">Videos</div>\r\n             <div className=\"card-body\">\r\n               <ul>\r\n                 {videos.map((video) => (\r\n                   <li key={video.id}>\r\n                     <a className=\"video-link\" href={`https://www.youtube.com/watch?v=${video.key}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                       {video.name}\r\n                     </a>\r\n                   </li>\r\n                 ))}\r\n               </ul>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n\r\n       {/* Navigation Tabs */}\r\n       {movieId && selectedMovie && (\r\n         <>\r\n           <hr />\r\n           <nav>\r\n             <ul className=\"tabs\">\r\n               <li onClick={() => navigate(`/main/movies/form/${movieId}/cast-and-crews`)}>Cast & Crews</li>\r\n               <li onClick={() => navigate(`/main/movies/form/${movieId}/videos`)}>Videos</li>\r\n               <li onClick={() => navigate(`/main/movies/form/${movieId}/photos`)}>Photos</li>\r\n             </ul>\r\n           </nav>\r\n           <Outlet />\r\n         </>\r\n       )}\r\n     </div>\r\n   );\r\n};\r\n\r\nexport default Form;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}