{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate, Outlet } from 'react-router-dom';\nimport './Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [searchedArtistList, setSearchedArtistList] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(null);\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const {\n    movieId\n  } = useParams();\n  const navigate = useNavigate();\n  const API_BASE_URL = 'https://api.themoviedb.org/3';\n  const TMDB_HEADERS = {\n    Accept: 'application/json',\n    Authorization: 'Bearer YOUR_TMDB_API_TOKEN'\n  };\n  const generateImageUrl = path => {\n    return path ? `https://image.tmdb.org/t/p/original/${path}` : '';\n  };\n  const handleSearchArtists = useCallback(async (page = 1) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/search/person?query=${query}&page=${page}`, {\n        headers: TMDB_HEADERS\n      });\n      if (response.data.results.length === 0) {\n        setNotFound(true);\n        setSearchedArtistList([]);\n        setTotalPages(0);\n      } else {\n        setSearchedArtistList(response.data.results);\n        setTotalPages(response.data.total_pages);\n        setNotFound(false);\n      }\n    } catch (err) {\n      setError('Error fetching artists. Please try again later.');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [query]);\n  const handleSelectArtist = artist => {\n    setSelectedArtist(artist);\n  };\n  const handleSaveCast = async () => {\n    const accessToken = localStorage.getItem('accessToken');\n    if (!selectedArtist) {\n      alert('Please search and select a cast/crew member.');\n      return;\n    }\n    const data = {\n      tmdbId: selectedArtist.id,\n      name: selectedArtist.name,\n      character: selectedArtist.character,\n      // assuming we might store their role in the movie\n      profilePath: generateImageUrl(selectedArtist.profile_path)\n    };\n    try {\n      await axios.post('/movieproject-api/admin/casts', data, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      alert('Cast added successfully.');\n      navigate('/main/movies'); // Navigate back to the movie list\n    } catch (err) {\n      setError('Error saving cast. Please try again later.');\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    if (movieId) {\n      const fetchMovie = async () => {\n        try {\n          const response = await axios.get(`/movies/${movieId}`);\n          setMovie(response.data);\n        } catch (err) {\n          setError('Error fetching movie details. Please try again later.');\n          console.error(err);\n        }\n      };\n      fetchMovie();\n    }\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieform-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movieId ? 'Edit Movie' : 'Create Movie'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(`/main/movies/form/${movieId}/cast-and-crews`),\n        children: \"Add Cast and Crew\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Search Cast and Crew\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSearchArtists(1),\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }, this), notFound && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No artists found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 20\n    }, this), searchedArtistList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searched-artists\",\n      children: searchedArtistList.map(artist => /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => handleSelectArtist(artist),\n        children: artist.name\n      }, artist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), selectedArtist && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-artist\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: generateImageUrl(selectedArtist.profile_path),\n        alt: selectedArtist.name,\n        className: \"artist-profile-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedArtist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedArtist.character || 'No character assigned'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveCast,\n        children: \"Save Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"qM7/fSWzSTsbiXprXBc1AW4zFgM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","useParams","useNavigate","Outlet","jsxDEV","_jsxDEV","Form","_s","query","setQuery","searchedArtistList","setSearchedArtistList","selectedArtist","setSelectedArtist","movie","setMovie","error","setError","isLoading","setIsLoading","notFound","setNotFound","currentPage","setCurrentPage","totalPages","setTotalPages","movieId","navigate","API_BASE_URL","TMDB_HEADERS","Accept","Authorization","generateImageUrl","path","handleSearchArtists","page","response","get","headers","data","results","length","total_pages","err","console","handleSelectArtist","artist","handleSaveCast","accessToken","localStorage","getItem","alert","tmdbId","id","name","character","profilePath","profile_path","post","fetchMovie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","placeholder","map","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Form.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate, Outlet } from 'react-router-dom';\r\nimport './Form.css';\r\n\r\nconst Form = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [searchedArtistList, setSearchedArtistList] = useState([]);\r\n  const [selectedArtist, setSelectedArtist] = useState(null);\r\n  const [movie, setMovie] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [notFound, setNotFound] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  const { movieId } = useParams();\r\n  const navigate = useNavigate();\r\n  \r\n  const API_BASE_URL = 'https://api.themoviedb.org/3';\r\n  const TMDB_HEADERS = {\r\n    Accept: 'application/json',\r\n    Authorization: 'Bearer YOUR_TMDB_API_TOKEN',\r\n  };\r\n\r\n  const generateImageUrl = (path) => {\r\n    return path ? `https://image.tmdb.org/t/p/original/${path}` : '';\r\n  };\r\n\r\n  const handleSearchArtists = useCallback(async (page = 1) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(\r\n        `${API_BASE_URL}/search/person?query=${query}&page=${page}`,\r\n        { headers: TMDB_HEADERS }\r\n      );\r\n      if (response.data.results.length === 0) {\r\n        setNotFound(true);\r\n        setSearchedArtistList([]);\r\n        setTotalPages(0);\r\n      } else {\r\n        setSearchedArtistList(response.data.results);\r\n        setTotalPages(response.data.total_pages);\r\n        setNotFound(false);\r\n      }\r\n    } catch (err) {\r\n      setError('Error fetching artists. Please try again later.');\r\n      console.error(err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [query]);\r\n\r\n  const handleSelectArtist = (artist) => {\r\n    setSelectedArtist(artist);\r\n  };\r\n\r\n  const handleSaveCast = async () => {\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    if (!selectedArtist) {\r\n      alert('Please search and select a cast/crew member.');\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      tmdbId: selectedArtist.id,\r\n      name: selectedArtist.name,\r\n      character: selectedArtist.character,  // assuming we might store their role in the movie\r\n      profilePath: generateImageUrl(selectedArtist.profile_path),\r\n    };\r\n\r\n    try {\r\n      await axios.post('/movieproject-api/admin/casts', data, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n      alert('Cast added successfully.');\r\n      navigate('/main/movies');  // Navigate back to the movie list\r\n    } catch (err) {\r\n      setError('Error saving cast. Please try again later.');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (movieId) {\r\n      const fetchMovie = async () => {\r\n        try {\r\n          const response = await axios.get(`/movies/${movieId}`);\r\n          setMovie(response.data);\r\n        } catch (err) {\r\n          setError('Error fetching movie details. Please try again later.');\r\n          console.error(err);\r\n        }\r\n      };\r\n      fetchMovie();\r\n    }\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div className=\"movieform-container\">\r\n      <h1>{movieId ? 'Edit Movie' : 'Create Movie'}</h1>\r\n\r\n      {error && <p className=\"text-danger\">{error}</p>}\r\n\r\n      <div>\r\n        <button onClick={() => navigate(`/main/movies/form/${movieId}/cast-and-crews`)}>\r\n          Add Cast and Crew\r\n        </button>\r\n      </div>\r\n\r\n      {/* Cast & Crew Search */}\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={(e) => setQuery(e.target.value)}\r\n          placeholder=\"Search Cast and Crew\"\r\n        />\r\n        <button onClick={() => handleSearchArtists(1)}>Search</button>\r\n      </div>\r\n\r\n      {isLoading && <p>Loading...</p>}\r\n      {notFound && <p>No artists found.</p>}\r\n      {searchedArtistList.length > 0 && (\r\n        <div className=\"searched-artists\">\r\n          {searchedArtistList.map((artist) => (\r\n            <p key={artist.id} onClick={() => handleSelectArtist(artist)}>\r\n              {artist.name}\r\n            </p>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {selectedArtist && (\r\n        <div className=\"selected-artist\">\r\n          <img\r\n            src={generateImageUrl(selectedArtist.profile_path)}\r\n            alt={selectedArtist.name}\r\n            className=\"artist-profile-image\"\r\n          />\r\n          <p>{selectedArtist.name}</p>\r\n          <p>{selectedArtist.character || 'No character assigned'}</p>\r\n          <button onClick={handleSaveCast}>Save Cast</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}