{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useParams, useNavigate, Outlet } from 'react-router-dom';\nimport './Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [searchedMovieList, setSearchedMovieList] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(undefined);\n  const [movie, setMovie] = useState(undefined);\n  const [notFound, setNotFound] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [castQuery, setCastQuery] = useState('');\n  const [searchedCastList, setSearchedCastList] = useState([]);\n  const [selectedCast, setSelectedCast] = useState([]);\n  const navigate = useNavigate();\n  let {\n    movieId\n  } = useParams();\n  const API_BASE_URL = 'https://api.themoviedb.org/3';\n  const TMDB_HEADERS = {\n    Accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTdiNmUyNGJkNWRkNjhiNmE1ZWFjZjgyNWY3NGY5ZCIsIm5iZiI6MTcyOTI5NzI5Ny4wNzMzNTEsInN1YiI6IjY2MzhlZGM0MmZhZjRkMDEzMGM2NzM3NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ZIX4EF2yAKl6NwhcmhZucxSQi1rJDZiGG80tDd6_9XI'\n  };\n  const generateImageUrl = path => {\n    return path ? `https://image.tmdb.org/t/p/original/${path}` : '';\n  };\n\n  // Movie search handler\n  const handleSearch = useCallback(async (page = 1) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`, {\n        headers: TMDB_HEADERS\n      });\n      if (response.data.results.length === 0) {\n        setNotFound(true);\n        setSearchedMovieList([]);\n        setTotalPages(0);\n      } else {\n        setSearchedMovieList(response.data.results);\n        setTotalPages(response.data.total_pages);\n        setNotFound(false);\n      }\n    } catch (err) {\n      setError('Error fetching movies. Please try again later.');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [query]);\n\n  // Cast search handler\n  const handleCastSearch = useCallback(async (page = 1) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/search/person?query=${castQuery}&include_adult=false&language=en-US&page=${page}`, {\n        headers: TMDB_HEADERS\n      });\n      if (response.data.results.length === 0) {\n        setNotFound(true);\n        setSearchedCastList([]);\n      } else {\n        setSearchedCastList(response.data.results);\n        setNotFound(false);\n      }\n    } catch (err) {\n      setError('Error fetching cast. Please try again later.');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [castQuery]);\n  const handleSelectMovie = movie => {\n    setSelectedMovie(movie);\n  };\n  const handleSelectCast = cast => {\n    if (!selectedCast.some(c => c.id === cast.id)) {\n      setSelectedCast(prev => [...prev, cast]);\n    }\n  };\n  const handleRemoveCast = castId => {\n    setSelectedCast(prev => prev.filter(cast => cast.id !== castId));\n  };\n  const handleSave = async () => {\n    const accessToken = localStorage.getItem('accessToken');\n    if (!selectedMovie) {\n      alert('Please search and select a movie.');\n      return;\n    }\n    const data = {\n      tmdbId: selectedMovie.id,\n      title: selectedMovie.title,\n      overview: selectedMovie.overview,\n      popularity: selectedMovie.popularity,\n      releaseDate: selectedMovie.release_date,\n      voteAverage: selectedMovie.vote_average,\n      backdropPath: generateImageUrl(selectedMovie.backdrop_path),\n      posterPath: generateImageUrl(selectedMovie.poster_path),\n      isFeatured: 0,\n      cast: selectedCast.map(cast => ({\n        tmdbId: cast.id,\n        name: cast.name,\n        character: cast.character || 'N/A'\n      }))\n    };\n    try {\n      if (movieId) {\n        await axios.patch(`/movies/${movieId}`, data, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        alert('Movie updated successfully.');\n      } else {\n        await axios.post('/movies', data, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        alert('Movie created successfully.');\n      }\n      navigate('/main/movies');\n    } catch (err) {\n      setError('Error saving movie. Please try again later.');\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    if (movieId) {\n      const fetchMovie = async () => {\n        try {\n          const response = await axios.get(`/movies/${movieId}`);\n          setMovie(response.data);\n          setSelectedMovie({\n            id: response.data.tmdbId,\n            title: response.data.title,\n            overview: response.data.overview,\n            popularity: response.data.popularity,\n            poster_path: response.data.posterPath,\n            release_date: response.data.releaseDate,\n            vote_average: response.data.voteAverage\n          });\n        } catch (err) {\n          setError('Error fetching movie details. Please try again later.');\n          console.error(err);\n        }\n      };\n      fetchMovie();\n    }\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moviecontainer mt-5 overflow-auto movieform-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movieId ? 'Edit Movie' : 'Create Movie'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger text-center\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.title) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.overview) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            overview: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleSave,\n          children: movieId ? 'Update' : 'Save'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cast-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Cast and Crew\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: castQuery,\n          onChange: e => setCastQuery(e.target.value),\n          placeholder: \"Search for cast member...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleCastSearch(1),\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searched-cast\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this) : notFound ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No cast found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this) : searchedCastList.map(cast => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cast-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: cast.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSelectCast(cast),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 17\n          }, this)]\n        }, cast.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-cast\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Selected Cast\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), selectedCast.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: selectedCast.map(cast => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [cast.name, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveCast(cast.id),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this)]\n          }, cast.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No cast selected.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), movieId && selectedMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              navigate(`/main/movies/form/${movieId}/cast-and-crews`);\n            },\n            children: \"Cast & Crews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              navigate(`/main/movies/form/${movieId}/videos`);\n            },\n            children: \"Videos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              navigate(`/main/movies/form/${movieId}/photos`);\n            },\n            children: \"Photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"MBC91M6R+So6N3HQuVFmzjGjRX4=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["axios","useCallback","useEffect","useState","useParams","useNavigate","Outlet","jsxDEV","_jsxDEV","Form","_s","query","setQuery","searchedMovieList","setSearchedMovieList","selectedMovie","setSelectedMovie","undefined","movie","setMovie","notFound","setNotFound","currentPage","setCurrentPage","totalPages","setTotalPages","isLoading","setIsLoading","error","setError","castQuery","setCastQuery","searchedCastList","setSearchedCastList","selectedCast","setSelectedCast","navigate","movieId","API_BASE_URL","TMDB_HEADERS","Accept","Authorization","generateImageUrl","path","handleSearch","page","response","get","headers","data","results","length","total_pages","err","console","handleCastSearch","handleSelectMovie","handleSelectCast","cast","some","c","id","prev","handleRemoveCast","castId","filter","handleSave","accessToken","localStorage","getItem","alert","tmdbId","title","overview","popularity","releaseDate","release_date","voteAverage","vote_average","backdropPath","backdrop_path","posterPath","poster_path","isFeatured","map","name","character","patch","post","fetchMovie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","rows","onClick","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Form.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useParams, useNavigate, Outlet } from 'react-router-dom';\r\nimport './Form.css';\r\n\r\nconst Form = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [searchedMovieList, setSearchedMovieList] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState(undefined);\r\n  const [movie, setMovie] = useState(undefined);\r\n  const [notFound, setNotFound] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const [castQuery, setCastQuery] = useState('');\r\n  const [searchedCastList, setSearchedCastList] = useState([]);\r\n  const [selectedCast, setSelectedCast] = useState([]);\r\n\r\n  const navigate = useNavigate();\r\n  let { movieId } = useParams();\r\n\r\n  const API_BASE_URL = 'https://api.themoviedb.org/3';\r\n  const TMDB_HEADERS = {\r\n    Accept: 'application/json',\r\n    Authorization:\r\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTdiNmUyNGJkNWRkNjhiNmE1ZWFjZjgyNWY3NGY5ZCIsIm5iZiI6MTcyOTI5NzI5Ny4wNzMzNTEsInN1YiI6IjY2MzhlZGM0MmZhZjRkMDEzMGM2NzM3NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ZIX4EF2yAKl6NwhcmhZucxSQi1rJDZiGG80tDd6_9XI',\r\n  };\r\n\r\n  const generateImageUrl = (path) => {\r\n    return path ? `https://image.tmdb.org/t/p/original/${path}` : '';\r\n  };\r\n\r\n  // Movie search handler\r\n  const handleSearch = useCallback(async (page = 1) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(\r\n        `${API_BASE_URL}/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`,\r\n        { headers: TMDB_HEADERS }\r\n      );\r\n\r\n      if (response.data.results.length === 0) {\r\n        setNotFound(true);\r\n        setSearchedMovieList([]);\r\n        setTotalPages(0);\r\n      } else {\r\n        setSearchedMovieList(response.data.results);\r\n        setTotalPages(response.data.total_pages);\r\n        setNotFound(false);\r\n      }\r\n    } catch (err) {\r\n      setError('Error fetching movies. Please try again later.');\r\n      console.error(err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [query]);\r\n\r\n  // Cast search handler\r\n  const handleCastSearch = useCallback(async (page = 1) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(\r\n        `${API_BASE_URL}/search/person?query=${castQuery}&include_adult=false&language=en-US&page=${page}`,\r\n        { headers: TMDB_HEADERS }\r\n      );\r\n\r\n      if (response.data.results.length === 0) {\r\n        setNotFound(true);\r\n        setSearchedCastList([]);\r\n      } else {\r\n        setSearchedCastList(response.data.results);\r\n        setNotFound(false);\r\n      }\r\n    } catch (err) {\r\n      setError('Error fetching cast. Please try again later.');\r\n      console.error(err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [castQuery]);\r\n\r\n  const handleSelectMovie = (movie) => {\r\n    setSelectedMovie(movie);\r\n  };\r\n\r\n  const handleSelectCast = (cast) => {\r\n    if (!selectedCast.some((c) => c.id === cast.id)) {\r\n      setSelectedCast((prev) => [...prev, cast]);\r\n    }\r\n  };\r\n\r\n  const handleRemoveCast = (castId) => {\r\n    setSelectedCast((prev) => prev.filter((cast) => cast.id !== castId));\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    if (!selectedMovie) {\r\n      alert('Please search and select a movie.');\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      tmdbId: selectedMovie.id,\r\n      title: selectedMovie.title,\r\n      overview: selectedMovie.overview,\r\n      popularity: selectedMovie.popularity,\r\n      releaseDate: selectedMovie.release_date,\r\n      voteAverage: selectedMovie.vote_average,\r\n      backdropPath: generateImageUrl(selectedMovie.backdrop_path),\r\n      posterPath: generateImageUrl(selectedMovie.poster_path),\r\n      isFeatured: 0,\r\n      cast: selectedCast.map((cast) => ({\r\n        tmdbId: cast.id,\r\n        name: cast.name,\r\n        character: cast.character || 'N/A',\r\n      })),\r\n    };\r\n\r\n    try {\r\n      if (movieId) {\r\n        await axios.patch(`/movies/${movieId}`, data, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        });\r\n        alert('Movie updated successfully.');\r\n      } else {\r\n        await axios.post('/movies', data, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        });\r\n        alert('Movie created successfully.');\r\n      }\r\n      navigate('/main/movies');\r\n    } catch (err) {\r\n      setError('Error saving movie. Please try again later.');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (movieId) {\r\n      const fetchMovie = async () => {\r\n        try {\r\n          const response = await axios.get(`/movies/${movieId}`);\r\n          setMovie(response.data);\r\n          setSelectedMovie({\r\n            id: response.data.tmdbId,\r\n            title: response.data.title,\r\n            overview: response.data.overview,\r\n            popularity: response.data.popularity,\r\n            poster_path: response.data.posterPath,\r\n            release_date: response.data.releaseDate,\r\n            vote_average: response.data.voteAverage,\r\n          });\r\n        } catch (err) {\r\n          setError('Error fetching movie details. Please try again later.');\r\n          console.error(err);\r\n        }\r\n      };\r\n\r\n      fetchMovie();\r\n    }\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div className=\"moviecontainer mt-5 overflow-auto movieform-container\">\r\n      <h1>{movieId ? 'Edit Movie' : 'Create Movie'}</h1>\r\n\r\n      {error && <p className=\"text-danger text-center\">{error}</p>}\r\n\r\n      <div className=\"movie-details\">\r\n        <form>\r\n          {/* Movie Details Section */}\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={selectedMovie?.title || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, title: e.target.value })}\r\n          />\r\n\r\n          <label>Overview</label>\r\n          <textarea\r\n            rows=\"5\"\r\n            value={selectedMovie?.overview || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, overview: e.target.value })}\r\n          ></textarea>\r\n\r\n          <button type=\"button\" onClick={handleSave}>\r\n            {movieId ? 'Update' : 'Save'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Cast and Crew Section */}\r\n      <div className=\"cast-section\">\r\n        <h2>Cast and Crew</h2>\r\n        <div className=\"search-container\">\r\n          <input\r\n            type=\"text\"\r\n            value={castQuery}\r\n            onChange={(e) => setCastQuery(e.target.value)}\r\n            placeholder=\"Search for cast member...\"\r\n          />\r\n          <button onClick={() => handleCastSearch(1)}>Search</button>\r\n        </div>\r\n\r\n        <div className=\"searched-cast\">\r\n          {isLoading ? (\r\n            <p>Loading...</p>\r\n          ) : notFound ? (\r\n            <p>No cast found.</p>\r\n          ) : (\r\n            searchedCastList.map((cast) => (\r\n              <div key={cast.id} className=\"cast-item\">\r\n                <p>{cast.name}</p>\r\n                <button onClick={() => handleSelectCast(cast)}>Add</button>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"selected-cast\">\r\n          <h3>Selected Cast</h3>\r\n          {selectedCast.length > 0 ? (\r\n            <ul>\r\n              {selectedCast.map((cast) => (\r\n                <li key={cast.id}>\r\n                  {cast.name}\r\n                  <button onClick={() => handleRemoveCast(cast.id)}>Remove</button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No cast selected.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {movieId && selectedMovie && (\r\n        <div>\r\n          <hr />\r\n          <nav>\r\n            <ul className=\"tabs\">\r\n              <li\r\n                onClick={() => {\r\n                  navigate(`/main/movies/form/${movieId}/cast-and-crews`);\r\n                }}\r\n              >\r\n                Cast & Crews\r\n              </li>\r\n              <li\r\n                onClick={() => {\r\n                  navigate(`/main/movies/form/${movieId}/videos`);\r\n                }}\r\n              >\r\n                Videos\r\n              </li>\r\n              <li\r\n                onClick={() => {\r\n                  navigate(`/main/movies/form/${movieId}/photos`);\r\n                }}\r\n              >\r\n                Photos\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          <Outlet />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}