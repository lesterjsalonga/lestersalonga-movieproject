{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\CastandCrew\\\\CastandCrew.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport './CastandCrew.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CastandCrew = ({\n  onAddCast\n}) => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [searchedPersonList, setSearchedPersonList] = useState([]);\n  const [selectedPerson, setSelectedPerson] = useState(null);\n  const [addedCast, setAddedCast] = useState([]);\n  const accessToken = localStorage.getItem('accessToken'); // Assuming accessToken is stored in localStorage\n\n  // Search for people using the TMDB API\n  const handleSearch = () => {\n    if (!query) return; // Prevent search if query is empty\n\n    axios.get(`https://api.themoviedb.org/3/search/person?query=${query}&include_adult=false&language=en-US&page=1`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      setSearchedPersonList(response.data.results);\n    }).catch(error => {\n      console.error('Error fetching person data:', error);\n    });\n  };\n\n  // Select a person from the search results\n  const handleSelectPerson = person => {\n    setSelectedPerson(person);\n  };\n\n  // Add selected person to the added cast list\n  const handleAddCast = () => {\n    if (!selectedPerson) {\n      alert('Please select a person to add to the cast.');\n      return;\n    }\n\n    // Avoid duplicates\n    if (addedCast.some(cast => cast.id === selectedPerson.id)) {\n      alert('This person is already added to the cast.');\n      return;\n    }\n    const updatedCast = [...addedCast, {\n      id: selectedPerson.id,\n      name: selectedPerson.name,\n      profilePath: selectedPerson.profile_path ? `https://image.tmdb.org/t/p/original/${selectedPerson.profile_path}` : 'https://via.placeholder.com/150',\n      // Use a placeholder image if profile_path is not available\n      characterName: '' // You can ask user to add the character name later\n    }];\n    setAddedCast(updatedCast);\n    onAddCast(updatedCast); // Pass the added cast back to parent component (Form)\n    setSelectedPerson(null); // Reset selected person\n  };\n\n  // Handle change in the query input\n  const handleQueryChange = e => {\n    setQuery(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cast-and-crew-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Search for Cast:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: handleQueryChange,\n        placeholder: \"Search for actors or crew\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searched-person-list\",\n      children: searchedPersonList.map(person => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"person-item\",\n        onClick: () => handleSelectPerson(person),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w92${person.profile_path}`,\n          alt: person.name,\n          className: \"person-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: person.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, person.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), selectedPerson && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"person-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedPerson.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddCast,\n        children: \"Add to Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"added-cast\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Added Cast:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: addedCast.map((cast, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: cast.profilePath,\n            alt: cast.name,\n            width: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), cast.name, \" (\", cast.characterName || 'No character name', \")\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(CastandCrew, \"ta4eYNqlV50KMx1yW8ogIOi6PZc=\");\n_c = CastandCrew;\nexport default CastandCrew;\nvar _c;\n$RefreshReg$(_c, \"CastandCrew\");","map":{"version":3,"names":["axios","useState","useEffect","jsxDEV","_jsxDEV","CastandCrew","onAddCast","_s","query","setQuery","searchedPersonList","setSearchedPersonList","selectedPerson","setSelectedPerson","addedCast","setAddedCast","accessToken","localStorage","getItem","handleSearch","get","headers","Authorization","then","response","data","results","catch","error","console","handleSelectPerson","person","handleAddCast","alert","some","cast","id","updatedCast","name","profilePath","profile_path","characterName","handleQueryChange","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","map","src","alt","index","width","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/CastandCrew/CastandCrew.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useState, useEffect } from 'react';\r\nimport './CastandCrew.css';\r\n\r\nconst CastandCrew = ({ onAddCast }) => {\r\n  const [query, setQuery] = useState('');\r\n  const [searchedPersonList, setSearchedPersonList] = useState([]);\r\n  const [selectedPerson, setSelectedPerson] = useState(null);\r\n  const [addedCast, setAddedCast] = useState([]);\r\n\r\n  const accessToken = localStorage.getItem('accessToken'); // Assuming accessToken is stored in localStorage\r\n\r\n  // Search for people using the TMDB API\r\n  const handleSearch = () => {\r\n    if (!query) return; // Prevent search if query is empty\r\n\r\n    axios.get(`https://api.themoviedb.org/3/search/person?query=${query}&include_adult=false&language=en-US&page=1`, {\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setSearchedPersonList(response.data.results);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching person data:', error);\r\n      });\r\n  };\r\n\r\n  // Select a person from the search results\r\n  const handleSelectPerson = (person) => {\r\n    setSelectedPerson(person);\r\n  };\r\n\r\n  // Add selected person to the added cast list\r\n  const handleAddCast = () => {\r\n    if (!selectedPerson) {\r\n      alert('Please select a person to add to the cast.');\r\n      return;\r\n    }\r\n\r\n    // Avoid duplicates\r\n    if (addedCast.some(cast => cast.id === selectedPerson.id)) {\r\n      alert('This person is already added to the cast.');\r\n      return;\r\n    }\r\n\r\n    const updatedCast = [\r\n      ...addedCast,\r\n      {\r\n        id: selectedPerson.id,\r\n        name: selectedPerson.name,\r\n        profilePath: selectedPerson.profile_path\r\n          ? `https://image.tmdb.org/t/p/original/${selectedPerson.profile_path}`\r\n          : 'https://via.placeholder.com/150', // Use a placeholder image if profile_path is not available\r\n        characterName: '', // You can ask user to add the character name later\r\n      }\r\n    ];\r\n    \r\n    setAddedCast(updatedCast);\r\n    onAddCast(updatedCast); // Pass the added cast back to parent component (Form)\r\n    setSelectedPerson(null); // Reset selected person\r\n  };\r\n\r\n  // Handle change in the query input\r\n  const handleQueryChange = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"cast-and-crew-container\">\r\n      <div className=\"search-container\">\r\n        <label>Search for Cast:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={handleQueryChange}\r\n          placeholder=\"Search for actors or crew\"\r\n        />\r\n        <button onClick={handleSearch}>Search</button>\r\n      </div>\r\n\r\n      <div className=\"searched-person-list\">\r\n        {searchedPersonList.map((person) => (\r\n          <div key={person.id} className=\"person-item\" onClick={() => handleSelectPerson(person)}>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w92${person.profile_path}`}\r\n              alt={person.name}\r\n              className=\"person-image\"\r\n            />\r\n            <p>{person.name}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {selectedPerson && (\r\n        <div className=\"person-details\">\r\n          <h3>{selectedPerson.name}</h3>\r\n          <button onClick={handleAddCast}>Add to Cast</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"added-cast\">\r\n        <h3>Added Cast:</h3>\r\n        <ul>\r\n          {addedCast.map((cast, index) => (\r\n            <li key={index}>\r\n              <img src={cast.profilePath} alt={cast.name} width={50} />\r\n              {cast.name} ({cast.characterName || 'No character name'})\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CastandCrew;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}