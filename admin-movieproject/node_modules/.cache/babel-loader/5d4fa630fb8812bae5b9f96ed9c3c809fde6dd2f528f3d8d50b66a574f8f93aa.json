{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useParams, useNavigate, Outlet } from 'react-router-dom';\nimport './Form.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [searchedMovieList, setSearchedMovieList] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(undefined);\n  const [movie, setMovie] = useState(undefined);\n  const [notFound, setNotFound] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  let {\n    movieId\n  } = useParams();\n\n  // Additional state for cast, crew, photos, and videos\n  const [castAndCrew, setCastAndCrew] = useState([]);\n  const [photos, setPhotos] = useState([]);\n  const [videos, setVideos] = useState([]);\n  const API_BASE_URL = 'https://api.themoviedb.org/3';\n  const TMDB_HEADERS = {\n    Accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NTAxODgxZmE3YWRhZTQzYWY0MGFmNDA1YzFjODliNCIsIm5iZiI6MTczMjU5NTU3OS4yMjMwMTI3LCJzdWIiOiI2NzEyZmFiYTI1YzcwYjhiMWQ2N2Y4YjQiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.oJ-YA-BPl-l8XBcp_VYDJDTO66e31OMKA-igarucAqE'\n  };\n  const generateImageUrl = path => {\n    return path ? `https://image.tmdb.org/t/p/original/${path}` : '';\n  };\n  const handleSearch = useCallback(async (page = 1) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`, {\n        headers: TMDB_HEADERS\n      });\n      if (response.data.results.length === 0) {\n        setNotFound(true);\n        setSearchedMovieList([]);\n        setTotalPages(0);\n      } else {\n        setSearchedMovieList(response.data.results);\n        setTotalPages(response.data.total_pages);\n        setNotFound(false);\n      }\n    } catch (err) {\n      setError('Error fetching movies. Please try again later.');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [query]);\n  const handleSelectMovie = movie => {\n    setSelectedMovie(movie);\n  };\n  const handleSave = async () => {\n    const accessToken = localStorage.getItem('accessToken');\n    if (!selectedMovie) {\n      alert('Please search and select a movie.');\n      return;\n    }\n    const requiredFields = [{\n      name: 'backdrop_path',\n      value: selectedMovie.backdrop_path\n    }, {\n      name: 'title',\n      value: selectedMovie.title\n    }, {\n      name: 'overview',\n      value: selectedMovie.overview\n    }, {\n      name: 'popularity',\n      value: selectedMovie.popularity\n    }, {\n      name: 'release_date',\n      value: selectedMovie.release_date\n    }, {\n      name: 'vote_average',\n      value: selectedMovie.vote_average\n    }];\n    const missingFields = requiredFields.filter(field => !field.value);\n    if (missingFields.length > 0) {\n      setError(`Missing required fields: ${missingFields.map(field => field.name).join(', ')}`);\n      return;\n    }\n\n    // Handle backdrop image (fallback if missing)\n    const backdropPath = selectedMovie.backdrop_path ? generateImageUrl(selectedMovie.backdrop_path) : ''; // Fallback to empty string if not available\n\n    // If backdrop image is required, but missing, show error\n    if (!backdropPath) {\n      setError('Backdrop image is required.');\n      return;\n    }\n    const data = {\n      tmdbId: selectedMovie.id,\n      title: selectedMovie.title,\n      overview: selectedMovie.overview,\n      popularity: parseFloat(selectedMovie.popularity),\n      releaseDate: selectedMovie.release_date,\n      voteAverage: parseFloat(selectedMovie.vote_average),\n      backdropPath: backdropPath,\n      // Ensure the backdrop path is properly set\n      posterPath: generateImageUrl(selectedMovie.poster_path),\n      isFeatured: selectedMovie.isFeatured || false,\n      castAndCrew,\n      // Add cast and crew\n      photos,\n      // Add photos\n      videos // Add videos\n    };\n    console.log('Data to be sent:', data);\n    try {\n      if (movieId) {\n        const response = await axios.patch(`/movies/${movieId}`, data, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        console.log('Movie updated response:', response);\n        alert('Movie updated successfully.');\n      } else {\n        // Creating new movie\n        const response = await axios.post('/movies', data, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        console.log('Movie created response:', response);\n        alert('Movie created successfully.');\n      }\n      navigate('/main/movies');\n    } catch (err) {\n      setError('Error saving movie. Please try again later.');\n      console.error('Save movie error:', err.response);\n      if (err.response && err.response.data && err.response.data.errors) {\n        console.error('Error details:', err.response.data.errors);\n        setError(`Validation errors: ${err.response.data.errors.map(error => error.message).join(', ')}`);\n      }\n    }\n  };\n\n  // Fetch additional movie data (cast, crew, photos, videos)\n  useEffect(() => {\n    if (selectedMovie !== null && selectedMovie !== void 0 && selectedMovie.id) {\n      const fetchMovieDetails = async () => {\n        try {\n          const castResponse = await axios.get(`${API_BASE_URL}/movie/${selectedMovie.id}/credits`, {\n            headers: TMDB_HEADERS\n          });\n          setCastAndCrew(castResponse.data.cast);\n          const photosResponse = await axios.get(`${API_BASE_URL}/movie/${selectedMovie.id}/images`, {\n            headers: TMDB_HEADERS\n          });\n          setPhotos(photosResponse.data.backdrops);\n          const videosResponse = await axios.get(`${API_BASE_URL}/movie/${selectedMovie.id}/videos`, {\n            headers: TMDB_HEADERS\n          });\n          setVideos(videosResponse.data.results);\n        } catch (err) {\n          console.error('Error fetching additional movie details:', err);\n        }\n      };\n      fetchMovieDetails();\n    }\n  }, [selectedMovie]);\n\n  // Fetch movie details when editing\n  useEffect(() => {\n    if (movieId) {\n      const fetchMovie = async () => {\n        try {\n          const response = await axios.get(`/movies/${movieId}`);\n          setMovie(response.data);\n          setSelectedMovie({\n            id: response.data.tmdbId,\n            title: response.data.title,\n            overview: response.data.overview,\n            popularity: response.data.popularity,\n            poster_path: response.data.posterPath,\n            release_date: response.data.releaseDate,\n            vote_average: response.data.voteAverage,\n            backdrop_path: response.data.backdropPath\n          });\n        } catch (err) {\n          setError('Error fetching movie details. Please try again later.');\n          console.error(err);\n        }\n      };\n      fetchMovie();\n    }\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moviecontainer mt-5 overflow-auto movieform-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movieId ? 'Edit Movie' : 'Create Movie'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger text-center\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }, this), !movieId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Search Movie:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"Enter movie title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSearch(1),\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searched-movie\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }, this) : notFound ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No movies found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this) : searchedMovieList.map(movie => /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => handleSelectMovie(movie),\n          children: movie.title\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: currentPage === 1,\n          onClick: () => {\n            setCurrentPage(prev => prev - 1);\n            handleSearch(currentPage - 1);\n          },\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Page \", currentPage, \" of \", totalPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: currentPage === totalPages,\n          onClick: () => {\n            setCurrentPage(prev => prev + 1);\n            handleSearch(currentPage + 1);\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [(selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.poster_path) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: generateImageUrl(selectedMovie.poster_path),\n          alt: selectedMovie.title,\n          className: \"poster-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.title) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.overview) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            overview: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Popularity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.popularity) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            popularity: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Release Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.release_date) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            release_date: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Vote Average\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.vote_average) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            vote_average: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleSave,\n          children: movieId ? 'Update' : 'Save'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Cast and Crew\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: castAndCrew.map(person => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [person.name, \" as \", person.character]\n        }, person.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Photos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"photos\",\n        children: photos.map(photo => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: generateImageUrl(photo.file_path),\n          alt: \"movie backdrop\"\n        }, photo.file_path, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Videos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: videos.map(video => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://www.youtube.com/watch?v=${video.key}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: video.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this)\n        }, video.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), movieId && selectedMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              navigate(`/main/movies/form/${movieId}/cast-and-crews`);\n            },\n            children: \"Cast & Crews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              navigate(`/main/movies/form/${movieId}/videos`);\n            },\n            children: \"Videos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              navigate(`/main/movies/form/${movieId}/photos`);\n            },\n            children: \"Photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"8hsZ65nKIlEK/L2ZVmIG8QNepD0=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["axios","useCallback","useEffect","useState","useParams","useNavigate","Outlet","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","query","setQuery","searchedMovieList","setSearchedMovieList","selectedMovie","setSelectedMovie","undefined","movie","setMovie","notFound","setNotFound","currentPage","setCurrentPage","totalPages","setTotalPages","isLoading","setIsLoading","error","setError","navigate","movieId","castAndCrew","setCastAndCrew","photos","setPhotos","videos","setVideos","API_BASE_URL","TMDB_HEADERS","Accept","Authorization","generateImageUrl","path","handleSearch","page","response","get","headers","data","results","length","total_pages","err","console","handleSelectMovie","handleSave","accessToken","localStorage","getItem","alert","requiredFields","name","value","backdrop_path","title","overview","popularity","release_date","vote_average","missingFields","filter","field","map","join","backdropPath","tmdbId","id","parseFloat","releaseDate","voteAverage","posterPath","poster_path","isFeatured","log","patch","post","errors","message","fetchMovieDetails","castResponse","cast","photosResponse","backdrops","videosResponse","fetchMovie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","onClick","disabled","prev","src","alt","rows","person","character","photo","file_path","video","href","key","rel","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Form.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useParams, useNavigate, Outlet } from 'react-router-dom';\r\nimport './Form.css';\r\n\r\nconst Form = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [searchedMovieList, setSearchedMovieList] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState(undefined);\r\n  const [movie, setMovie] = useState(undefined);\r\n  const [notFound, setNotFound] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n  let { movieId } = useParams();\r\n\r\n  // Additional state for cast, crew, photos, and videos\r\n  const [castAndCrew, setCastAndCrew] = useState([]);\r\n  const [photos, setPhotos] = useState([]);\r\n  const [videos, setVideos] = useState([]);\r\n\r\n  const API_BASE_URL = 'https://api.themoviedb.org/3';\r\n  const TMDB_HEADERS = {\r\n    Accept: 'application/json',\r\n    Authorization:\r\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NTAxODgxZmE3YWRhZTQzYWY0MGFmNDA1YzFjODliNCIsIm5iZiI6MTczMjU5NTU3OS4yMjMwMTI3LCJzdWIiOiI2NzEyZmFiYTI1YzcwYjhiMWQ2N2Y4YjQiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.oJ-YA-BPl-l8XBcp_VYDJDTO66e31OMKA-igarucAqE',\r\n  };\r\n\r\n  const generateImageUrl = (path) => {\r\n    return path ? `https://image.tmdb.org/t/p/original/${path}` : '';\r\n  };\r\n\r\n  const handleSearch = useCallback(async (page = 1) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(\r\n        `${API_BASE_URL}/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`,\r\n        { headers: TMDB_HEADERS }\r\n      );\r\n\r\n      if (response.data.results.length === 0) {\r\n        setNotFound(true);\r\n        setSearchedMovieList([]);\r\n        setTotalPages(0);\r\n      } else {\r\n        setSearchedMovieList(response.data.results);\r\n        setTotalPages(response.data.total_pages);\r\n        setNotFound(false);\r\n      }\r\n    } catch (err) {\r\n      setError('Error fetching movies. Please try again later.');\r\n      console.error(err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [query]);\r\n\r\n  const handleSelectMovie = (movie) => {\r\n    setSelectedMovie(movie);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    if (!selectedMovie) {\r\n      alert('Please search and select a movie.');\r\n      return;\r\n    }\r\n  \r\n    const requiredFields = [\r\n      { name: 'backdrop_path', value: selectedMovie.backdrop_path },\r\n      { name: 'title', value: selectedMovie.title },\r\n      { name: 'overview', value: selectedMovie.overview },\r\n      { name: 'popularity', value: selectedMovie.popularity },\r\n      { name: 'release_date', value: selectedMovie.release_date },\r\n      { name: 'vote_average', value: selectedMovie.vote_average },\r\n    ];\r\n  \r\n    const missingFields = requiredFields.filter(field => !field.value);\r\n  \r\n    if (missingFields.length > 0) {\r\n      setError(`Missing required fields: ${missingFields.map(field => field.name).join(', ')}`);\r\n      return;\r\n    }\r\n  \r\n    // Handle backdrop image (fallback if missing)\r\n    const backdropPath = selectedMovie.backdrop_path\r\n      ? generateImageUrl(selectedMovie.backdrop_path)\r\n      : ''; // Fallback to empty string if not available\r\n  \r\n    // If backdrop image is required, but missing, show error\r\n    if (!backdropPath) {\r\n      setError('Backdrop image is required.');\r\n      return;\r\n    }\r\n  \r\n    const data = {\r\n      tmdbId: selectedMovie.id,\r\n      title: selectedMovie.title,\r\n      overview: selectedMovie.overview,\r\n      popularity: parseFloat(selectedMovie.popularity), \r\n      releaseDate: selectedMovie.release_date, \r\n      voteAverage: parseFloat(selectedMovie.vote_average), \r\n      backdropPath: backdropPath, // Ensure the backdrop path is properly set\r\n      posterPath: generateImageUrl(selectedMovie.poster_path),\r\n      isFeatured: selectedMovie.isFeatured || false, \r\n      castAndCrew,   // Add cast and crew\r\n      photos,        // Add photos\r\n      videos,        // Add videos\r\n    };\r\n  \r\n    console.log('Data to be sent:', data); \r\n  \r\n    try {\r\n      if (movieId) {\r\n        const response = await axios.patch(`/movies/${movieId}`, data, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        });\r\n        console.log('Movie updated response:', response);\r\n        alert('Movie updated successfully.');\r\n      } else {\r\n        // Creating new movie\r\n        const response = await axios.post('/movies', data, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        });\r\n        console.log('Movie created response:', response);\r\n        alert('Movie created successfully.');\r\n      }\r\n      navigate('/main/movies');\r\n    } catch (err) {\r\n      setError('Error saving movie. Please try again later.');\r\n      console.error('Save movie error:', err.response);\r\n      if (err.response && err.response.data && err.response.data.errors) {\r\n        console.error('Error details:', err.response.data.errors);\r\n        setError(`Validation errors: ${err.response.data.errors.map(error => error.message).join(', ')}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Fetch additional movie data (cast, crew, photos, videos)\r\n  useEffect(() => {\r\n    if (selectedMovie?.id) {\r\n      const fetchMovieDetails = async () => {\r\n        try {\r\n          const castResponse = await axios.get(\r\n            `${API_BASE_URL}/movie/${selectedMovie.id}/credits`,\r\n            { headers: TMDB_HEADERS }\r\n          );\r\n          setCastAndCrew(castResponse.data.cast);\r\n\r\n          const photosResponse = await axios.get(\r\n            `${API_BASE_URL}/movie/${selectedMovie.id}/images`,\r\n            { headers: TMDB_HEADERS }\r\n          );\r\n          setPhotos(photosResponse.data.backdrops);\r\n\r\n          const videosResponse = await axios.get(\r\n            `${API_BASE_URL}/movie/${selectedMovie.id}/videos`,\r\n            { headers: TMDB_HEADERS }\r\n          );\r\n          setVideos(videosResponse.data.results);\r\n        } catch (err) {\r\n          console.error('Error fetching additional movie details:', err);\r\n        }\r\n      };\r\n\r\n      fetchMovieDetails();\r\n    }\r\n  }, [selectedMovie]);\r\n\r\n  // Fetch movie details when editing\r\n  useEffect(() => {\r\n    if (movieId) {\r\n      const fetchMovie = async () => {\r\n        try {\r\n          const response = await axios.get(`/movies/${movieId}`);\r\n          setMovie(response.data);\r\n          setSelectedMovie({\r\n            id: response.data.tmdbId,\r\n            title: response.data.title,\r\n            overview: response.data.overview,\r\n            popularity: response.data.popularity,\r\n            poster_path: response.data.posterPath,\r\n            release_date: response.data.releaseDate,\r\n            vote_average: response.data.voteAverage,\r\n            backdrop_path: response.data.backdropPath,\r\n          });\r\n        } catch (err) {\r\n          setError('Error fetching movie details. Please try again later.');\r\n          console.error(err);\r\n        }\r\n      };\r\n\r\n      fetchMovie();\r\n    }\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div className=\"moviecontainer mt-5 overflow-auto movieform-container\">\r\n      <h1>{movieId ? 'Edit Movie' : 'Create Movie'}</h1>\r\n\r\n      {error && <p className=\"text-danger text-center\">{error}</p>}\r\n\r\n      {!movieId && (\r\n        <>\r\n          <div className=\"search-container\">\r\n            <label>Search Movie:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              placeholder=\"Enter movie title\"\r\n            />\r\n            <button onClick={() => handleSearch(1)}>Search</button>\r\n          </div>\r\n\r\n          <div className=\"searched-movie\">\r\n            {isLoading ? (\r\n              <p>Loading...</p>\r\n            ) : notFound ? (\r\n              <p>No movies found.</p>\r\n            ) : (\r\n              searchedMovieList.map((movie) => (\r\n                <p key={movie.id} onClick={() => handleSelectMovie(movie)}>\r\n                  {movie.title}\r\n                </p>\r\n              ))\r\n            )}\r\n          </div>\r\n\r\n          {totalPages > 1 && (\r\n            <div className=\"pagination\">\r\n              <button\r\n                disabled={currentPage === 1}\r\n                onClick={() => {\r\n                  setCurrentPage((prev) => prev - 1);\r\n                  handleSearch(currentPage - 1);\r\n                }}\r\n              >\r\n                Previous\r\n              </button>\r\n              <span>\r\n                Page {currentPage} of {totalPages}\r\n              </span>\r\n              <button\r\n                disabled={currentPage === totalPages}\r\n                onClick={() => {\r\n                  setCurrentPage((prev) => prev + 1);\r\n                  handleSearch(currentPage + 1);\r\n                }}\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      <div className=\"movie-details\">\r\n        <form>\r\n          {selectedMovie?.poster_path && (\r\n            <img\r\n              src={generateImageUrl(selectedMovie.poster_path)}\r\n              alt={selectedMovie.title}\r\n              className=\"poster-image\"\r\n            />\r\n          )}\r\n\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={selectedMovie?.title || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, title: e.target.value })}\r\n          />\r\n\r\n          <label>Overview</label>\r\n          <textarea\r\n            rows=\"5\"\r\n            value={selectedMovie?.overview || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, overview: e.target.value })}\r\n          ></textarea>\r\n\r\n          <label>Popularity</label>\r\n          <input\r\n            type=\"number\"\r\n            value={selectedMovie?.popularity || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, popularity: e.target.value })}\r\n          />\r\n\r\n          <label>Release Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={selectedMovie?.release_date || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, release_date: e.target.value })}\r\n          />\r\n\r\n          <label>Vote Average</label>\r\n          <input\r\n            type=\"number\"\r\n            value={selectedMovie?.vote_average || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, vote_average: e.target.value })}\r\n          />\r\n\r\n          <button type=\"button\" onClick={handleSave}>\r\n            {movieId ? 'Update' : 'Save'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Cast and Crew */}\r\n      <div className=\"movie-details\">\r\n        <h3>Cast and Crew</h3>\r\n        <ul>\r\n          {castAndCrew.map((person) => (\r\n            <li key={person.id}>\r\n              {person.name} as {person.character}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Photos */}\r\n      <div className=\"movie-details\">\r\n        <h3>Photos</h3>\r\n        <div className=\"photos\">\r\n          {photos.map((photo) => (\r\n            <img key={photo.file_path} src={generateImageUrl(photo.file_path)} alt=\"movie backdrop\" />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Videos */}\r\n      <div className=\"movie-details\">\r\n        <h3>Videos</h3>\r\n        <ul>\r\n          {videos.map((video) => (\r\n            <li key={video.id}>\r\n              <a href={`https://www.youtube.com/watch?v=${video.key}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {video.name}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {movieId && selectedMovie && (\r\n        <div>\r\n          <hr />\r\n          <nav>\r\n            <ul className=\"tabs\">\r\n              <li\r\n                onClick={() => {\r\n                  navigate(`/main/movies/form/${movieId}/cast-and-crews`);\r\n                }}\r\n              >\r\n                Cast & Crews\r\n              </li>\r\n              <li\r\n                onClick={() => {\r\n                  navigate(`/main/movies/form/${movieId}/videos`);\r\n                }}\r\n              >\r\n                Videos\r\n              </li>\r\n              <li\r\n                onClick={() => {\r\n                  navigate(`/main/movies/form/${movieId}/photos`);\r\n                }}\r\n              >\r\n                Photos\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          <Outlet />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}