{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Photos\\\\Photos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\nimport { useParams } from 'react-router-dom';\nimport PhotosForm from './PhotosForm';\nimport './Photos.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Photos() {\n  _s();\n  const {\n    auth\n  } = useContext(AuthContext);\n  const {\n    tmdbId\n  } = useParams(); // Fetch tmdbId from URL parameters\n  const [photos, setPhotos] = useState([]);\n  const [newPhoto, setNewPhoto] = useState({\n    url: '',\n    description: ''\n  });\n  const [isSaving, setIsSaving] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n\n  // Fetch photos for the specific movie based on tmdbId\n  useEffect(() => {\n    if (!tmdbId) {\n      console.error(\"tmdbId is missing or undefined\");\n      return;\n    }\n    const fetchPhotos = async () => {\n      try {\n        const response = await axios.get(`/movies/${tmdbId}/photos`, {\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        if (response.data && Array.isArray(response.data.photos)) {\n          setPhotos(response.data.photos);\n        } else {\n          console.error(\"Error: Photos not found or data format is incorrect\");\n          setPhotos([]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching photos:\", error);\n        setIsError(true);\n        setAlertMessage(\"Failed to load photos.\");\n      }\n    };\n    fetchPhotos();\n  }, [tmdbId, auth.accessToken]);\n\n  // Handle photo form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewPhoto(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Add a new photo to the database\n  const handleAddPhoto = async () => {\n    if (!newPhoto.url || !newPhoto.description) {\n      alert(\"Please provide both a URL and a description for the photo.\");\n      return;\n    }\n    setIsSaving(true);\n    try {\n      const photoData = {\n        movieId: tmdbId,\n        // Use tmdbId as movieId\n        url: newPhoto.url,\n        description: newPhoto.description,\n        userId: auth.user.userId // Assuming you have a userId in the AuthContext\n      };\n      const response = await axios.post('/photos', photoData, {\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      });\n      setPhotos(prevPhotos => [...prevPhotos, response.data]);\n      setNewPhoto({\n        url: '',\n        description: ''\n      });\n      alert(\"Photo added successfully!\");\n      setIsSaving(false);\n    } catch (error) {\n      console.error(\"Error adding photo:\", error);\n      alert(\"Failed to add photo.\");\n      setIsSaving(false);\n    }\n  };\n\n  // Handle photo deletion\n  const handleDeletePhoto = async id => {\n    if (window.confirm(\"Are you sure you want to delete this photo?\")) {\n      try {\n        await axios.delete(`/photos/${id}`, {\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        setPhotos(prevPhotos => prevPhotos.filter(photo => photo.id !== id));\n        alert(\"Photo deleted successfully!\");\n      } catch (error) {\n        console.error(\"Error deleting photo:\", error);\n        alert(\"Failed to delete photo.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photo-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"photo-view-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Photos for Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-display-photos\",\n        children: photos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No photos found for this movie.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this) : photos.map(photo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-photo\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: photo.url,\n            alt: photo.description,\n            className: \"photo-thumbnail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-photo\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: photo.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Added on: \", new Date(photo.dateCreated).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttons-group\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete-button\",\n                onClick: () => handleDeletePhoto(photo.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)]\n        }, photo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PhotosForm, {\n      photoData: newPhoto,\n      onSubmit: handleAddPhoto,\n      onChange: handleInputChange,\n      isSaving: isSaving\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(Photos, \"dX17i4OjvH0ap4Xw/4TWmI/MRuY=\", false, function () {\n  return [useParams];\n});\n_c = Photos;\nexport default Photos;\nvar _c;\n$RefreshReg$(_c, \"Photos\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","AuthContext","useParams","PhotosForm","jsxDEV","_jsxDEV","Photos","_s","auth","tmdbId","photos","setPhotos","newPhoto","setNewPhoto","url","description","isSaving","setIsSaving","isError","setIsError","alertMessage","setAlertMessage","console","error","fetchPhotos","response","get","headers","Authorization","accessToken","data","Array","isArray","handleInputChange","e","name","value","target","prev","handleAddPhoto","alert","photoData","movieId","userId","user","post","prevPhotos","handleDeletePhoto","id","window","confirm","delete","filter","photo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","src","alt","Date","dateCreated","toLocaleDateString","onClick","onSubmit","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Photos/Photos.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\r\nimport { useParams } from 'react-router-dom';\r\nimport PhotosForm from './PhotosForm';\r\nimport './Photos.css';\r\n\r\nfunction Photos() {\r\n  const { auth } = useContext(AuthContext);\r\n  const { tmdbId } = useParams();  // Fetch tmdbId from URL parameters\r\n  const [photos, setPhotos] = useState([]);\r\n  const [newPhoto, setNewPhoto] = useState({ url: '', description: '' });\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n\r\n  // Fetch photos for the specific movie based on tmdbId\r\n  useEffect(() => {\r\n    if (!tmdbId) {\r\n      console.error(\"tmdbId is missing or undefined\");\r\n      return;\r\n    }\r\n\r\n    const fetchPhotos = async () => {\r\n      try {\r\n        const response = await axios.get(`/movies/${tmdbId}/photos`, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n        });\r\n\r\n        if (response.data && Array.isArray(response.data.photos)) {\r\n          setPhotos(response.data.photos);\r\n        } else {\r\n          console.error(\"Error: Photos not found or data format is incorrect\");\r\n          setPhotos([]);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching photos:\", error);\r\n        setIsError(true);\r\n        setAlertMessage(\"Failed to load photos.\");\r\n      }\r\n    };\r\n\r\n    fetchPhotos();\r\n  }, [tmdbId, auth.accessToken]);\r\n\r\n  // Handle photo form input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewPhoto((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Add a new photo to the database\r\n  const handleAddPhoto = async () => {\r\n    if (!newPhoto.url || !newPhoto.description) {\r\n      alert(\"Please provide both a URL and a description for the photo.\");\r\n      return;\r\n    }\r\n\r\n    setIsSaving(true);\r\n    try {\r\n      const photoData = {\r\n        movieId: tmdbId,  // Use tmdbId as movieId\r\n        url: newPhoto.url,\r\n        description: newPhoto.description,\r\n        userId: auth.user.userId,  // Assuming you have a userId in the AuthContext\r\n      };\r\n\r\n      const response = await axios.post('/photos', photoData, {\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n      });\r\n\r\n      setPhotos((prevPhotos) => [...prevPhotos, response.data]);\r\n      setNewPhoto({ url: '', description: '' });\r\n\r\n      alert(\"Photo added successfully!\");\r\n      setIsSaving(false);\r\n    } catch (error) {\r\n      console.error(\"Error adding photo:\", error);\r\n      alert(\"Failed to add photo.\");\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  // Handle photo deletion\r\n  const handleDeletePhoto = async (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this photo?\")) {\r\n      try {\r\n        await axios.delete(`/photos/${id}`, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n        });\r\n\r\n        setPhotos((prevPhotos) => prevPhotos.filter((photo) => photo.id !== id));\r\n        alert(\"Photo deleted successfully!\");\r\n      } catch (error) {\r\n        console.error(\"Error deleting photo:\", error);\r\n        alert(\"Failed to delete photo.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo-box\">\r\n      <div className=\"photo-view-box\">\r\n        <h2>Photos for Movie</h2>\r\n\r\n        <div className=\"card-display-photos\">\r\n          {photos.length === 0 ? (\r\n            <p>No photos found for this movie.</p>\r\n          ) : (\r\n            photos.map((photo) => (\r\n              <div key={photo.id} className=\"card-photo\">\r\n                <img\r\n                  src={photo.url}\r\n                  alt={photo.description}\r\n                  className=\"photo-thumbnail\"\r\n                />\r\n                <div className=\"container-photo\">\r\n                  <h4>{photo.description}</h4>\r\n                  <p>Added on: {new Date(photo.dateCreated).toLocaleDateString()}</p>\r\n                  <div className=\"buttons-group\">\r\n                    <button\r\n                      className=\"delete-button\"\r\n                      onClick={() => handleDeletePhoto(photo.id)}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <PhotosForm\r\n        photoData={newPhoto}\r\n        onSubmit={handleAddPhoto}\r\n        onChange={handleInputChange}\r\n        isSaving={isSaving}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Photos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}