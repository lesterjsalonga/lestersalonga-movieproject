{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Public\\\\Login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useCallback, useEffect } from 'react';\nimport './Login.css';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isFieldsDirty, setIsFieldsDirty] = useState(false);\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const [isShowPassword, setIsShowPassword] = useState(false);\n  const [debounceState, setDebounceState] = useState(false);\n  const [status, setStatus] = useState('idle');\n  const navigate = useNavigate();\n\n  // Toggle password visibility\n  const handleShowPassword = useCallback(() => {\n    setIsShowPassword(value => !value);\n  }, [isShowPassword]);\n\n  // Handle form field changes\n  const handleOnChange = (event, type) => {\n    setDebounceState(false);\n    setIsFieldsDirty(true);\n    switch (type) {\n      case 'email':\n        setEmail(event.target.value);\n        break;\n      case 'password':\n        setPassword(event.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Login function to handle the authentication request\n  const handleLogin = async () => {\n    const data = {\n      email,\n      password\n    };\n    setStatus('loading');\n    console.log(data);\n    try {\n      const res = await axios.post('/user/login', data);\n      console.log(res);\n\n      // Store the access token and user role in localStorage\n      localStorage.setItem('accessToken', res.data.access_token);\n      localStorage.setItem('role', res.data.user.role); // Storing role\n\n      // Automatically set up the Authorization header for subsequent requests\n      axios.defaults.headers['Authorization'] = `Bearer ${res.data.access_token}`;\n\n      // Redirect based on role (user or admin)\n      if (res.data.user.role === 'user') {\n        navigate('/main/movies');\n      } else {\n        alert('Unknown role');\n        setStatus('idle');\n      }\n    } catch (e) {\n      console.log(e);\n      setStatus('idle');\n      alert('Login failed. Please check your credentials!');\n    }\n  };\n  useEffect(() => {\n    setDebounceState(true);\n  }, [email, password]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"E-mail:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"email\",\n                ref: emailRef,\n                onChange: e => handleOnChange(e, 'email')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), debounceState && isFieldsDirty && email === '' && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errors\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Password:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: isShowPassword ? 'text' : 'password',\n                name: \"password\",\n                ref: passwordRef,\n                onChange: e => handleOnChange(e, 'password')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), debounceState && isFieldsDirty && password === '' && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errors\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"show-password\",\n            onClick: handleShowPassword,\n            children: [isShowPassword ? 'Hide' : 'Show', \" Password\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submit-container\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              disabled: status === 'loading',\n              onClick: handleLogin,\n              children: status === 'idle' ? 'Login' : 'Loading...'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"register-container\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/register\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"QIDh/LBIPoJasvrJpiUPwVASnIQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useRef","useCallback","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","isFieldsDirty","setIsFieldsDirty","emailRef","passwordRef","isShowPassword","setIsShowPassword","debounceState","setDebounceState","status","setStatus","navigate","handleShowPassword","value","handleOnChange","event","type","target","handleLogin","data","console","log","res","post","localStorage","setItem","access_token","user","role","defaults","headers","alert","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","ref","onChange","onClick","disabled","href","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Public/Login/Login.jsx"],"sourcesContent":["import { useState, useRef, useCallback, useEffect } from 'react';\r\nimport './Login.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isFieldsDirty, setIsFieldsDirty] = useState(false);\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const [isShowPassword, setIsShowPassword] = useState(false);\r\n  const [debounceState, setDebounceState] = useState(false);\r\n  const [status, setStatus] = useState('idle');\r\n  const navigate = useNavigate();\r\n\r\n  // Toggle password visibility\r\n  const handleShowPassword = useCallback(() => {\r\n    setIsShowPassword((value) => !value);\r\n  }, [isShowPassword]);\r\n\r\n  // Handle form field changes\r\n  const handleOnChange = (event, type) => {\r\n    setDebounceState(false);\r\n    setIsFieldsDirty(true);\r\n\r\n    switch (type) {\r\n      case 'email':\r\n        setEmail(event.target.value);\r\n        break;\r\n\r\n      case 'password':\r\n        setPassword(event.target.value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Login function to handle the authentication request\r\n  const handleLogin = async () => {\r\n    const data = { email, password };\r\n    setStatus('loading');\r\n    console.log(data);\r\n\r\n    try {\r\n      const res = await axios.post('/user/login', data);\r\n      console.log(res);\r\n\r\n      // Store the access token and user role in localStorage\r\n      localStorage.setItem('accessToken', res.data.access_token);\r\n      localStorage.setItem('role', res.data.user.role);  // Storing role\r\n\r\n      // Automatically set up the Authorization header for subsequent requests\r\n      axios.defaults.headers['Authorization'] = `Bearer ${res.data.access_token}`;\r\n\r\n      // Redirect based on role (user or admin)\r\n      if (res.data.user.role === 'user') {\r\n        navigate('/main/movies');\r\n\r\n      } else {\r\n        alert('Unknown role');\r\n        setStatus('idle');\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      setStatus('idle');\r\n      alert('Login failed. Please check your credentials!');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDebounceState(true);\r\n  }, [email, password]);\r\n\r\n  return (\r\n    <div className='Login'>\r\n      <div className='main-container'>\r\n        <h3>Login</h3>\r\n        <form>\r\n          <div className='form-container'>\r\n            <div>\r\n              <div className='form-group'>\r\n                <label>E-mail:</label>\r\n                <input\r\n                  type='text'\r\n                  name='email'\r\n                  ref={emailRef}\r\n                  onChange={(e) => handleOnChange(e, 'email')}\r\n                />\r\n              </div>\r\n              {debounceState && isFieldsDirty && email === '' && (\r\n                <span className='errors'>This field is required</span>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <div className='form-group'>\r\n                <label>Password:</label>\r\n                <input\r\n                  type={isShowPassword ? 'text' : 'password'}\r\n                  name='password'\r\n                  ref={passwordRef}\r\n                  onChange={(e) => handleOnChange(e, 'password')}\r\n                />\r\n              </div>\r\n              {debounceState && isFieldsDirty && password === '' && (\r\n                <span className='errors'>This field is required</span>\r\n              )}\r\n            </div>\r\n            <div className='show-password' onClick={handleShowPassword}>\r\n              {isShowPassword ? 'Hide' : 'Show'} Password\r\n            </div>\r\n\r\n            <div className='submit-container'>\r\n              <button\r\n                type='button'\r\n                disabled={status === 'loading'}\r\n                onClick={handleLogin}\r\n              >\r\n                {status === 'idle' ? 'Login' : 'Loading...'}\r\n              </button>\r\n            </div>\r\n            <div className='register-container'>\r\n              <a href='/register'>\r\n                <small>Register</small>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}