{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Videos\\\\Videos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\nimport { useParams } from 'react-router-dom';\nimport VideosForm from './VideosForm';\nimport './Videos.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Videos() {\n  _s();\n  const {\n    auth\n  } = useContext(AuthContext);\n  const {\n    movieId\n  } = useParams();\n  const [videos, setVideos] = useState([]);\n  const [newVideo, setNewVideo] = useState({\n    url: '',\n    description: '',\n    site: '',\n    videoKey: '',\n    videoType: '',\n    official: 'No' // default to 'No'\n  });\n  const [editingVideo, setEditingVideo] = useState(null);\n  const [isSaving, setIsSaving] = useState(false);\n  const [importMessage, setImportMessage] = useState('');\n  const [tmdbMovieId, setTmdbMovieId] = useState(null);\n  const getYouTubeVideoId = url => {\n    if (!url || typeof url !== 'string' || url.trim() === '') {\n      console.error(\"URL is undefined, empty, or not a valid string:\", url);\n      return null;\n    }\n    const regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^\\/]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/))?(?:watch\\?v=|e(?:mbed)\\/)([\\w-]{11})|(?:youtu\\.be\\/)([\\w-]{11})/;\n    const match = url.match(regex);\n    if (match) {\n      return match[1] || match[2];\n    }\n    return null;\n  };\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(`/movies/${movieId}`, {\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        setTmdbMovieId(response.data.tmdbId);\n      } catch (error) {\n        console.error(\"Error fetching movie details:\", error);\n      }\n    };\n    const fetchVideos = async () => {\n      try {\n        const response = await axios.get(`/movies/${movieId}/videos`, {\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        if (Array.isArray(response.data.videos)) {\n          setVideos(response.data.videos);\n        } else {\n          console.error(\"Error: No videos found or videos is not an array\");\n          setVideos([]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching videos:\", error);\n        setVideos([]);\n      }\n    };\n    fetchMovieDetails();\n    fetchVideos();\n  }, [movieId, auth.accessToken]);\n  const importVideosFromTMDB = async () => {\n    if (!tmdbMovieId) {\n      setImportMessage('TMDB Movie ID not found');\n      setTimeout(() => setImportMessage(''), 3000);\n      return;\n    }\n    try {\n      const response = await axios({\n        method: 'get',\n        url: `https://api.themoviedb.org/3/movie/${tmdbMovieId}/videos?language=en-US`,\n        headers: {\n          Accept: 'application/json',\n          Authorization: 'Bearer YOUR_TMDB_API_KEY'\n        }\n      });\n      const importedVideos = response.data.results;\n      const importPromises = importedVideos.map(async video => {\n        if (video.site === 'YouTube') {\n          const payload = {\n            userId: auth.user.userId,\n            movieId: movieId,\n            url: `https://www.youtube.com/watch?v=${video.key}`,\n            description: video.name,\n            site: 'YouTube',\n            videoKey: video.key,\n            videoType: video.type || 'Trailer',\n            // default to 'Trailer' if no type exists\n            official: video.official ? 'Yes' : 'No'\n          };\n          try {\n            await axios.post('/videos', payload, {\n              headers: {\n                Authorization: `Bearer ${auth.accessToken}`\n              }\n            });\n          } catch (error) {\n            console.error(`Error importing video ${video.name}:`, error);\n          }\n        }\n      });\n      await Promise.all(importPromises);\n\n      // Refresh videos list\n      const updatedVideosResponse = await axios.get(`/movies/${movieId}/videos`, {\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      });\n      setVideos(updatedVideosResponse.data.videos);\n      setImportMessage(`Successfully imported ${importedVideos.filter(v => v.site === 'YouTube').length} videos`);\n      setTimeout(() => {\n        setImportMessage('');\n      }, 3000);\n    } catch (error) {\n      console.error(\"Error importing videos:\", error);\n      setImportMessage('Failed to import videos');\n      setTimeout(() => {\n        setImportMessage('');\n      }, 3000);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (editingVideo) {\n      setEditingVideo(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else {\n      setNewVideo(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const handleAddVideo = async () => {\n    if (!newVideo.url || !newVideo.description) {\n      alert(\"Please provide both a URL and a description for the video.\");\n      return;\n    }\n    const videoId = getYouTubeVideoId(newVideo.url);\n    if (!videoId) {\n      alert(\"Please provide a valid YouTube URL.\");\n      return;\n    }\n    setIsSaving(true);\n    try {\n      const videoData = {\n        movieId,\n        url: newVideo.url,\n        description: newVideo.description,\n        site: newVideo.site,\n        videoKey: newVideo.videoKey,\n        videoType: newVideo.videoType,\n        official: newVideo.official,\n        userId: auth.user.userId\n      };\n      const response = await axios.post('/videos', videoData, {\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      });\n      setVideos(prevVideos => [...prevVideos, response.data]);\n      setNewVideo({\n        url: '',\n        description: '',\n        site: '',\n        videoKey: '',\n        videoType: '',\n        official: 'No'\n      });\n      alert(\"Video added successfully!\");\n    } catch (error) {\n      console.error(\"Error adding video:\", error);\n      alert(\"Failed to add video.\");\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  const handleDeleteVideo = async id => {\n    if (window.confirm(\"Are you sure you want to delete this video?\")) {\n      try {\n        await axios.delete(`/videos/${id}`, {\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        setVideos(prevVideos => prevVideos.filter(video => video.id !== id));\n        alert(\"Video deleted successfully!\");\n      } catch (error) {\n        console.error(\"Error deleting video:\", error);\n        alert(\"Failed to delete video.\");\n      }\n    }\n  };\n  const handleUpdateVideo = async () => {\n    const validateFields = () => {\n      if (!editingVideo.url) {\n        alert(\"Please provide a valid URL.\");\n        return false;\n      }\n      if (!editingVideo.description) {\n        alert(\"Please provide a description.\");\n        return false;\n      }\n      return true;\n    };\n    if (!validateFields()) {\n      return;\n    } else {\n      const isConfirm = window.confirm(\"Are you sure you want to update the video?\");\n      if (isConfirm) {\n        const updatedData = {\n          id: editingVideo.id,\n          url: editingVideo.url,\n          description: editingVideo.description,\n          movieId: editingVideo.movieId,\n          site: editingVideo.site,\n          videoKey: editingVideo.videoKey,\n          videoType: editingVideo.videoType,\n          official: editingVideo.official\n        };\n        try {\n          const response = await axios({\n            method: 'patch',\n            url: `/videos/${editingVideo.id}`,\n            data: updatedData,\n            headers: {\n              Accept: 'application/json',\n              Authorization: `Bearer ${auth.accessToken}`\n            }\n          });\n          alert(\"Video updated successfully!\");\n          setVideos(prevVideos => prevVideos.map(video => video.id === editingVideo.id ? response.data : video));\n          setEditingVideo(null);\n        } catch (error) {\n          console.error(\"Error updating video:\", error);\n          alert(\"Failed to update video.\");\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videos-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"import-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: importVideosFromTMDB,\n        children: \"Import Videos from TMDB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), importMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: importMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: editingVideo ? 'Edit Video' : 'Add New Video'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          name: \"url\",\n          value: editingVideo ? editingVideo.url : newVideo.url,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"description\",\n          value: editingVideo ? editingVideo.description : newVideo.description,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Site\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"site\",\n          value: editingVideo ? editingVideo.site : newVideo.site,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Video Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"videoKey\",\n          value: editingVideo ? editingVideo.videoKey : newVideo.videoKey,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Video Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"videoType\",\n          value: editingVideo ? editingVideo.videoType : newVideo.videoType,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Official\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"official\",\n          value: editingVideo ? editingVideo.official : newVideo.official,\n          onChange: handleInputChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Yes\",\n            children: \"Yes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"No\",\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: editingVideo ? handleUpdateVideo : handleAddVideo,\n          children: editingVideo ? 'Update Video' : 'Add Video'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-list\",\n      children: videos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No videos available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this) : videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n          title: video.id,\n          src: `https://www.youtube.com/embed/${video.videoKey}`,\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: video.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Type: \", video.videoType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Official: \", video.official]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setEditingVideo(video),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteVideo(video.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }, this)]\n      }, video.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n}\n_s(Videos, \"ltgYrUFlaiImmyR/dI5HuTeFqrk=\", false, function () {\n  return [useParams];\n});\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","AuthContext","useParams","VideosForm","jsxDEV","_jsxDEV","Videos","_s","auth","movieId","videos","setVideos","newVideo","setNewVideo","url","description","site","videoKey","videoType","official","editingVideo","setEditingVideo","isSaving","setIsSaving","importMessage","setImportMessage","tmdbMovieId","setTmdbMovieId","getYouTubeVideoId","trim","console","error","regex","match","fetchMovieDetails","response","get","headers","Authorization","accessToken","data","tmdbId","fetchVideos","Array","isArray","importVideosFromTMDB","setTimeout","method","Accept","importedVideos","results","importPromises","map","video","payload","userId","user","key","name","type","post","Promise","all","updatedVideosResponse","filter","v","length","handleInputChange","e","value","target","prev","handleAddVideo","alert","videoId","videoData","prevVideos","handleDeleteVideo","id","window","confirm","delete","handleUpdateVideo","validateFields","isConfirm","updatedData","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","preventDefault","onChange","title","src","frameBorder","allow","allowFullScreen","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Videos/Videos.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\r\nimport { useParams } from 'react-router-dom';\r\nimport VideosForm from './VideosForm';\r\nimport './Videos.css';\r\n\r\nfunction Videos() {\r\n  const { auth } = useContext(AuthContext);\r\n  const { movieId } = useParams();\r\n  const [videos, setVideos] = useState([]);\r\n  const [newVideo, setNewVideo] = useState({\r\n    url: '',\r\n    description: '',\r\n    site: '',\r\n    videoKey: '',\r\n    videoType: '',\r\n    official: 'No' // default to 'No'\r\n  });\r\n  const [editingVideo, setEditingVideo] = useState(null);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [importMessage, setImportMessage] = useState('');\r\n  const [tmdbMovieId, setTmdbMovieId] = useState(null);\r\n\r\n  const getYouTubeVideoId = (url) => {\r\n    if (!url || typeof url !== 'string' || url.trim() === '') {\r\n      console.error(\"URL is undefined, empty, or not a valid string:\", url);\r\n      return null;\r\n    }\r\n\r\n    const regex = /(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^\\/]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/))?(?:watch\\?v=|e(?:mbed)\\/)([\\w-]{11})|(?:youtu\\.be\\/)([\\w-]{11})/;\r\n    const match = url.match(regex);\r\n\r\n    if (match) {\r\n      return match[1] || match[2];\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchMovieDetails = async () => {\r\n      try {\r\n        const response = await axios.get(`/movies/${movieId}`, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n        });\r\n        setTmdbMovieId(response.data.tmdbId);\r\n      } catch (error) {\r\n        console.error(\"Error fetching movie details:\", error);\r\n      }\r\n    };\r\n\r\n    const fetchVideos = async () => {\r\n      try {\r\n        const response = await axios.get(`/movies/${movieId}/videos`, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n        });\r\n\r\n        if (Array.isArray(response.data.videos)) {\r\n          setVideos(response.data.videos);\r\n        } else {\r\n          console.error(\"Error: No videos found or videos is not an array\");\r\n          setVideos([]);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching videos:\", error);\r\n        setVideos([]);\r\n      }\r\n    };\r\n\r\n    fetchMovieDetails();\r\n    fetchVideos();\r\n  }, [movieId, auth.accessToken]);\r\n\r\n  const importVideosFromTMDB = async () => {\r\n    if (!tmdbMovieId) {\r\n      setImportMessage('TMDB Movie ID not found');\r\n      setTimeout(() => setImportMessage(''), 3000);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios({\r\n        method: 'get',\r\n        url: `https://api.themoviedb.org/3/movie/${tmdbMovieId}/videos?language=en-US`,\r\n        headers: {\r\n          Accept: 'application/json',\r\n          Authorization: 'Bearer YOUR_TMDB_API_KEY',\r\n        },\r\n      });\r\n\r\n      const importedVideos = response.data.results;\r\n      \r\n      const importPromises = importedVideos.map(async (video) => {\r\n        if (video.site === 'YouTube') {\r\n          const payload = {\r\n            userId: auth.user.userId,\r\n            movieId: movieId,\r\n            url: `https://www.youtube.com/watch?v=${video.key}`,\r\n            description: video.name,\r\n            site: 'YouTube',\r\n            videoKey: video.key,\r\n            videoType: video.type || 'Trailer', // default to 'Trailer' if no type exists\r\n            official: video.official ? 'Yes' : 'No',\r\n          };\r\n\r\n          try {\r\n            await axios.post('/videos', payload, {\r\n              headers: {\r\n                Authorization: `Bearer ${auth.accessToken}`,\r\n              },\r\n            });\r\n          } catch (error) {\r\n            console.error(`Error importing video ${video.name}:`, error);\r\n          }\r\n        }\r\n      });\r\n\r\n      await Promise.all(importPromises);\r\n\r\n      // Refresh videos list\r\n      const updatedVideosResponse = await axios.get(`/movies/${movieId}/videos`, {\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n      });\r\n\r\n      setVideos(updatedVideosResponse.data.videos);\r\n\r\n      setImportMessage(`Successfully imported ${importedVideos.filter(v => v.site === 'YouTube').length} videos`);\r\n      \r\n      setTimeout(() => {\r\n        setImportMessage('');\r\n      }, 3000);\r\n\r\n    } catch (error) {\r\n      console.error(\"Error importing videos:\", error);\r\n      setImportMessage('Failed to import videos');\r\n      \r\n      setTimeout(() => {\r\n        setImportMessage('');\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (editingVideo) {\r\n      setEditingVideo((prev) => ({ ...prev, [name]: value }));\r\n    } else {\r\n      setNewVideo((prev) => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const handleAddVideo = async () => {\r\n    if (!newVideo.url || !newVideo.description) {\r\n      alert(\"Please provide both a URL and a description for the video.\");\r\n      return;\r\n    }\r\n\r\n    const videoId = getYouTubeVideoId(newVideo.url);\r\n\r\n    if (!videoId) {\r\n      alert(\"Please provide a valid YouTube URL.\");\r\n      return;\r\n    }\r\n\r\n    setIsSaving(true);\r\n    try {\r\n      const videoData = {\r\n        movieId,\r\n        url: newVideo.url,\r\n        description: newVideo.description,\r\n        site: newVideo.site,\r\n        videoKey: newVideo.videoKey,\r\n        videoType: newVideo.videoType,\r\n        official: newVideo.official,\r\n        userId: auth.user.userId,\r\n      };\r\n\r\n      const response = await axios.post('/videos', videoData, {\r\n        headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n      });\r\n\r\n      setVideos((prevVideos) => [...prevVideos, response.data]);\r\n\r\n      setNewVideo({ url: '', description: '', site: '', videoKey: '', videoType: '', official: 'No' });\r\n\r\n      alert(\"Video added successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error adding video:\", error);\r\n      alert(\"Failed to add video.\");\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteVideo = async (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this video?\")) {\r\n      try {\r\n        await axios.delete(`/videos/${id}`, {\r\n          headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n        });\r\n\r\n        setVideos((prevVideos) => prevVideos.filter((video) => video.id !== id));\r\n        alert(\"Video deleted successfully!\");\r\n      } catch (error) {\r\n        console.error(\"Error deleting video:\", error);\r\n        alert(\"Failed to delete video.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUpdateVideo = async () => {\r\n    const validateFields = () => {\r\n      if (!editingVideo.url) {\r\n        alert(\"Please provide a valid URL.\");\r\n        return false;\r\n      }\r\n      if (!editingVideo.description) {\r\n        alert(\"Please provide a description.\");\r\n        return false;\r\n      }\r\n      return true;\r\n    };\r\n  \r\n    if (!validateFields()) {\r\n      return;\r\n    } else {\r\n      const isConfirm = window.confirm(\"Are you sure you want to update the video?\");\r\n      if (isConfirm) {\r\n        const updatedData = {\r\n          id: editingVideo.id,\r\n          url: editingVideo.url,\r\n          description: editingVideo.description,\r\n          movieId: editingVideo.movieId,\r\n          site: editingVideo.site,\r\n          videoKey: editingVideo.videoKey,\r\n          videoType: editingVideo.videoType,\r\n          official: editingVideo.official,\r\n        };\r\n  \r\n        try {\r\n          const response = await axios({\r\n            method: 'patch',\r\n            url: `/videos/${editingVideo.id}`,\r\n            data: updatedData,\r\n            headers: {\r\n              Accept: 'application/json',\r\n              Authorization: `Bearer ${auth.accessToken}`,\r\n            },\r\n          });\r\n  \r\n          alert(\"Video updated successfully!\");\r\n  \r\n          setVideos((prevVideos) =>\r\n            prevVideos.map((video) => (video.id === editingVideo.id ? response.data : video))\r\n          );\r\n  \r\n          setEditingVideo(null);\r\n        } catch (error) {\r\n          console.error(\"Error updating video:\", error);\r\n          alert(\"Failed to update video.\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"videos-container\">\r\n      <div className=\"import-section\">\r\n        <button onClick={importVideosFromTMDB}>Import Videos from TMDB</button>\r\n        {importMessage && <p>{importMessage}</p>}\r\n      </div>\r\n\r\n      {/* Add Video Form */}\r\n      <div className=\"video-form\">\r\n        <h2>{editingVideo ? 'Edit Video' : 'Add New Video'}</h2>\r\n        <form onSubmit={(e) => e.preventDefault()}>\r\n          <label>URL</label>\r\n          <input\r\n            type=\"url\"\r\n            name=\"url\"\r\n            value={editingVideo ? editingVideo.url : newVideo.url}\r\n            onChange={handleInputChange}\r\n          />\r\n          <label>Description</label>\r\n          <textarea\r\n            name=\"description\"\r\n            value={editingVideo ? editingVideo.description : newVideo.description}\r\n            onChange={handleInputChange}\r\n          />\r\n          <label>Site</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"site\"\r\n            value={editingVideo ? editingVideo.site : newVideo.site}\r\n            onChange={handleInputChange}\r\n          />\r\n          <label>Video Key</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"videoKey\"\r\n            value={editingVideo ? editingVideo.videoKey : newVideo.videoKey}\r\n            onChange={handleInputChange}\r\n          />\r\n          <label>Video Type</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"videoType\"\r\n            value={editingVideo ? editingVideo.videoType : newVideo.videoType}\r\n            onChange={handleInputChange}\r\n          />\r\n          <label>Official</label>\r\n          <select\r\n            name=\"official\"\r\n            value={editingVideo ? editingVideo.official : newVideo.official}\r\n            onChange={handleInputChange}\r\n          >\r\n            <option value=\"Yes\">Yes</option>\r\n            <option value=\"No\">No</option>\r\n          </select>\r\n\r\n          <button onClick={editingVideo ? handleUpdateVideo : handleAddVideo}>\r\n            {editingVideo ? 'Update Video' : 'Add Video'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Video List */}\r\n      <div className=\"video-list\">\r\n        {videos.length === 0 ? (\r\n          <p>No videos available.</p>\r\n        ) : (\r\n          videos.map((video) => (\r\n            <div className=\"video-card\" key={video.id}>\r\n              <iframe\r\n                title={video.id}\r\n                src={`https://www.youtube.com/embed/${video.videoKey}`}\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n              />\r\n              <p>{video.description}</p>\r\n              <p>Type: {video.videoType}</p>\r\n              <p>Official: {video.official}</p>\r\n              <button onClick={() => setEditingVideo(video)}>Edit</button>\r\n              <button onClick={() => handleDeleteVideo(video.id)}>Delete</button>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Videos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}