{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\CastandCrew\\\\CastandCrew.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CastandCrew = ({\n  movieId,\n  selectedCast,\n  setSelectedCast\n}) => {\n  _s();\n  const [castQuery, setCastQuery] = useState('');\n  const [searchedCastList, setSearchedCastList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const API_BASE_URL = 'https://api.themoviedb.org/3';\n  const TMDB_HEADERS = {\n    Accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTdiNmUyNGJkNWRkNjhiNmE1ZWFjZjgyNWY3NGY5ZCIsIm5iZiI6MTcyOTI5NzI5Ny4wNzMzNTEsInN1YiI6IjY2MzhlZGM0MmZhZjRkMDEzMGM2NzM3NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ZIX4EF2yAKl6NwhcmhZucxSQi1rJDZiGG80tDd6_9XI'\n  };\n\n  // Cast search handler\n  const handleCastSearch = useCallback(async () => {\n    if (!castQuery) return;\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/search/person?query=${castQuery}&include_adult=false&language=en-US&page=1`, {\n        headers: TMDB_HEADERS\n      });\n      setSearchedCastList(response.data.results);\n    } catch (err) {\n      setError('Error fetching cast. Please try again later.');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [castQuery]);\n\n  // Add cast member to selected list\n  const handleSelectCast = cast => {\n    if (!selectedCast.some(c => c.id === cast.id)) {\n      setSelectedCast(prev => [...prev, cast]);\n    }\n  };\n\n  // Remove cast member from selected list\n  const handleRemoveCast = castId => {\n    setSelectedCast(prev => prev.filter(cast => cast.id !== castId));\n  };\n\n  // Search trigger\n  useEffect(() => {\n    if (castQuery) {\n      handleCastSearch();\n    }\n  }, [castQuery, handleCastSearch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cast-and-crew-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cast and Crew\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: castQuery,\n        onChange: e => setCastQuery(e.target.value),\n        placeholder: \"Search for cast member...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCastSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searched-cast-list\",\n      children: searchedCastList.map(cast => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cast-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: cast.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSelectCast(cast),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, cast.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-cast-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), selectedCast.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedCast.map(cast => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [cast.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveCast(cast.id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, cast.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No cast selected.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(CastandCrew, \"BQ04f/Vu+39lufrvTt/d5WlP1AM=\");\n_c = CastandCrew;\nexport default CastandCrew;\nvar _c;\n$RefreshReg$(_c, \"CastandCrew\");","map":{"version":3,"names":["useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","CastandCrew","movieId","selectedCast","setSelectedCast","_s","castQuery","setCastQuery","searchedCastList","setSearchedCastList","isLoading","setIsLoading","error","setError","API_BASE_URL","TMDB_HEADERS","Accept","Authorization","handleCastSearch","response","get","headers","data","results","err","console","handleSelectCast","cast","some","c","id","prev","handleRemoveCast","castId","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","name","length","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/CastandCrew/CastandCrew.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CastandCrew = ({ movieId, selectedCast, setSelectedCast }) => {\r\n  const [castQuery, setCastQuery] = useState('');\r\n  const [searchedCastList, setSearchedCastList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const API_BASE_URL = 'https://api.themoviedb.org/3';\r\n  const TMDB_HEADERS = {\r\n    Accept: 'application/json',\r\n    Authorization:\r\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI5YTdiNmUyNGJkNWRkNjhiNmE1ZWFjZjgyNWY3NGY5ZCIsIm5iZiI6MTcyOTI5NzI5Ny4wNzMzNTEsInN1YiI6IjY2MzhlZGM0MmZhZjRkMDEzMGM2NzM3NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ZIX4EF2yAKl6NwhcmhZucxSQi1rJDZiGG80tDd6_9XI',\r\n  };\r\n\r\n  // Cast search handler\r\n  const handleCastSearch = useCallback(async () => {\r\n    if (!castQuery) return;\r\n\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(\r\n        `${API_BASE_URL}/search/person?query=${castQuery}&include_adult=false&language=en-US&page=1`,\r\n        { headers: TMDB_HEADERS }\r\n      );\r\n\r\n      setSearchedCastList(response.data.results);\r\n    } catch (err) {\r\n      setError('Error fetching cast. Please try again later.');\r\n      console.error(err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [castQuery]);\r\n\r\n  // Add cast member to selected list\r\n  const handleSelectCast = (cast) => {\r\n    if (!selectedCast.some((c) => c.id === cast.id)) {\r\n      setSelectedCast((prev) => [...prev, cast]);\r\n    }\r\n  };\r\n\r\n  // Remove cast member from selected list\r\n  const handleRemoveCast = (castId) => {\r\n    setSelectedCast((prev) => prev.filter((cast) => cast.id !== castId));\r\n  };\r\n\r\n  // Search trigger\r\n  useEffect(() => {\r\n    if (castQuery) {\r\n      handleCastSearch();\r\n    }\r\n  }, [castQuery, handleCastSearch]);\r\n\r\n  return (\r\n    <div className=\"cast-and-crew-section\">\r\n      <h2>Cast and Crew</h2>\r\n      \r\n      {/* Cast search input */}\r\n      <div className=\"search-container\">\r\n        <input\r\n          type=\"text\"\r\n          value={castQuery}\r\n          onChange={(e) => setCastQuery(e.target.value)}\r\n          placeholder=\"Search for cast member...\"\r\n        />\r\n        <button onClick={handleCastSearch}>Search</button>\r\n      </div>\r\n\r\n      {/* Error message */}\r\n      {error && <p className=\"text-danger\">{error}</p>}\r\n\r\n      {/* Cast search results */}\r\n      {isLoading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <div className=\"searched-cast-list\">\r\n          {searchedCastList.map((cast) => (\r\n            <div key={cast.id} className=\"cast-item\">\r\n              <p>{cast.name}</p>\r\n              <button onClick={() => handleSelectCast(cast)}>Add</button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Selected cast list */}\r\n      <div className=\"selected-cast-list\">\r\n        <h3>Selected Cast</h3>\r\n        {selectedCast.length > 0 ? (\r\n          <ul>\r\n            {selectedCast.map((cast) => (\r\n              <li key={cast.id}>\r\n                {cast.name} \r\n                <button onClick={() => handleRemoveCast(cast.id)}>Remove</button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No cast selected.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CastandCrew;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}