{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Videos\\\\Videos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport './Videos.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { useDebounce } from '../../../../../utils/hooks/useDebounce';\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Form({\n  data,\n  state,\n  setState\n}) {\n  _s();\n  const {\n    auth\n  } = useContext(AppContext);\n  let {\n    tmdbId,\n    movieId\n  } = useParams();\n  const [selectedData, setSelectedData] = useState(data);\n  const [file, setFile] = useState(null); // Use state to manage the file\n  const urlRef = useRef();\n  const descriptionRef = useRef();\n  const [status, setStatus] = useState('idle');\n  const navigate = useNavigate();\n  const userInputDebounce = useDebounce({\n    selectedData\n  }, 2000);\n  const [debounceState, setDebounceState] = useState(false);\n  const [isFieldsDirty, setIsFieldsDirty] = useState(false);\n\n  // alert box state\n  const [alertMessage, setAlertMessage] = useState('');\n  const [isError, setIsError] = useState(false);\n  useEffect(() => {\n    setSelectedData(data);\n  }, [data]);\n\n  // Handle file input change and set the file in state\n  const handleFileChange = event => {\n    const uploadedFile = event.target.files[0];\n    setFile(uploadedFile); // Update the file state\n    console.log(uploadedFile); // This will log the file when it changes\n  };\n  const handleOnChange = e => {\n    setDebounceState(false);\n    setIsFieldsDirty(true);\n    const {\n      name,\n      value\n    } = e.target;\n    setSelectedData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n    console.log(selectedData);\n  };\n\n  //debounce\n  useEffect(() => {\n    setDebounceState(true);\n  }, [userInputDebounce]);\n  function convertToEmbedUrl(youtubeUrl) {\n    const videoIdMatch = youtubeUrl.match(/v=([^&]+)/);\n    if (videoIdMatch && videoIdMatch[1]) {\n      const videoId = videoIdMatch[1];\n      return `https://www.youtube.com/embed/${videoId}`;\n    } else {\n      // Return the original URL if it doesn't match the pattern\n      return youtubeUrl;\n    }\n  }\n  const handleSave = async event => {\n    //event.preventDefault();\n    // if (!file) {\n    //   setIsError(true);\n    //   setAlertMessage('No file selected');\n    //   setTimeout(() => setAlertMessage(''), 2000);\n    //   return;\n    // }\n\n    setStatus('loading');\n    const formData = new FormData();\n    formData.append('userId', selectedData.userId);\n    formData.append('movieId', tmdbId);\n    formData.append('description', selectedData.description);\n    // formData.append('video', file); // Use the state variable `file`\n    formData.append('url', convertToEmbedUrl(selectedData.url));\n    const data = {\n      userId: selectedData.userId,\n      movieId: tmdbId,\n      description: selectedData.description,\n      image: file\n    };\n    console.log(file);\n    axios({\n      method: 'post',\n      url: '/videos',\n      data: formData,\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        Authorization: `Bearer ${auth.accessToken}`\n      }\n    }).then(response => {\n      var _response$data;\n      console.log(response.data);\n      setIsError(false);\n      setAlertMessage((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message);\n      setTimeout(() => {\n        setAlertMessage('');\n        setState('base');\n      }, 2000);\n    }).catch(error => {\n      var _error$response, _error$response$data, _error$response2;\n      console.log(error.response);\n      setIsError(true);\n      setAlertMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.errors[0]) || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data));\n      setTimeout(() => setAlertMessage(''), 2000);\n    });\n  };\n  const handleUpdate = async event => {\n    // event.preventDefault();\n\n    setStatus('loading');\n    const formData = new FormData();\n    formData.append('id', selectedData.id);\n    formData.append('userId', selectedData.userId);\n    formData.append('movieId', tmdbId);\n    formData.append('description', selectedData.description);\n    formData.append('url', selectedData.url);\n    const data = {\n      id: selectedData.id,\n      userId: selectedData.userId,\n      movieI: tmdbId,\n      description: selectedData.description,\n      image: file\n    };\n    console.log(selectedData);\n    axios({\n      method: 'patch',\n      url: `/videos/${selectedData.id}`,\n      data: data,\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${auth.accessToken}`\n      }\n    }).then(response => {\n      console.log(response.data);\n      setIsError(false);\n      setAlertMessage(response.data.message);\n      setTimeout(() => {\n        setAlertMessage('');\n        setState('base');\n      }, 2000);\n    }).catch(error => {\n      var _error$response3, _error$response3$data;\n      console.log(error.response);\n      setIsError(true);\n      setAlertMessage((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message);\n      setTimeout(() => setAlertMessage(''), 2000);\n    });\n  };\n  const handleDelete = () => {\n    setStatus('loading');\n    console.log(selectedData);\n    console.log(selectedData.id);\n    const isConfirmed = window.confirm('Are you sure you want to delete this Video?');\n    if (isConfirmed) {\n      axios({\n        method: 'delete',\n        url: `/videos/${selectedData.id}`,\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      }).then(response => {\n        console.log('Database Updated');\n        console.log(response.data);\n        setIsError(false);\n        setAlertMessage(response.data.message);\n        setTimeout(() => {\n          setAlertMessage('');\n          setState('base');\n        }, 2000);\n      }).catch(error => {\n        console.log(error.data);\n        setIsError(true);\n        setAlertMessage(error.data.message);\n        setTimeout(() => setAlertMessage(''), 2000);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [alertMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert-box ${isError ? 'error' : 'success'}`,\n      children: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-cards\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"videos-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [\"Video\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"url\",\n              value: selectedData.url,\n              ref: urlRef,\n              onChange: handleOnChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), debounceState && isFieldsDirty && selectedData.url == '' && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errors\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 79\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field\",\n            children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: 5,\n              type: \"text\",\n              name: \"description\",\n              value: selectedData.description,\n              ref: descriptionRef,\n              onChange: handleOnChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), debounceState && isFieldsDirty && selectedData.description == '' && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errors\",\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 87\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-profile\",\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: selectedData.url && !selectedData.url.includes(\"null\") ? convertToEmbedUrl(selectedData.url) : 'https://via.placeholder.com/550x300?text=No+Video',\n            className: \"video-frame\",\n            allowFullScreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [state == 'update' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDelete,\n        className: \"delete-button\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (status === 'loading') {\n            return;\n          }\n          const {\n            url,\n            description\n          } = selectedData;\n          if (url && description) {\n            state == 'update' ? handleUpdate() : handleSave();\n          } else {\n            //fields are incomplete\n            setIsFieldsDirty(true);\n            //focus if field is empty\n            if (!url) {\n              urlRef.current.focus();\n            } else if (!description) {\n              descriptionRef.current.focus();\n            }\n          }\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Form, \"sfopA75OsqTt57hbfMKHGsAo7+M=\", false, function () {\n  return [useParams, useNavigate, useDebounce];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","useNavigate","useParams","useDebounce","AuthContext","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","data","state","setState","_s","auth","AppContext","tmdbId","movieId","selectedData","setSelectedData","file","setFile","urlRef","descriptionRef","status","setStatus","navigate","userInputDebounce","debounceState","setDebounceState","isFieldsDirty","setIsFieldsDirty","alertMessage","setAlertMessage","isError","setIsError","handleFileChange","event","uploadedFile","target","files","console","log","handleOnChange","e","name","value","prevData","convertToEmbedUrl","youtubeUrl","videoIdMatch","match","videoId","handleSave","formData","FormData","append","userId","description","url","image","method","headers","Authorization","accessToken","then","response","_response$data","message","setTimeout","catch","error","_error$response","_error$response$data","_error$response2","errors","handleUpdate","id","movieI","_error$response3","_error$response3$data","handleDelete","isConfirmed","window","confirm","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","onChange","rows","src","includes","allowFullScreen","onClick","current","focus","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Videos/Videos.jsx"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport './Videos.css'\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useDebounce } from '../../../../../utils/hooks/useDebounce';\r\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\r\nimport axios from 'axios';\r\n\r\nfunction Form({ data, state, setState }) {\r\n  const { auth } = useContext(AppContext);\r\n  let { tmdbId, movieId } = useParams();\r\n\r\n  const [selectedData, setSelectedData] = useState(data);\r\n  const [file, setFile] = useState(null); // Use state to manage the file\r\n  const urlRef = useRef();\r\n  const descriptionRef = useRef();\r\n\r\n  const [status, setStatus] = useState('idle');\r\n  const navigate = useNavigate();\r\n  const userInputDebounce = useDebounce({ selectedData }, 2000);\r\n  const [debounceState, setDebounceState] = useState(false);\r\n  const [isFieldsDirty, setIsFieldsDirty] = useState(false);\r\n\r\n  // alert box state\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setSelectedData(data);\r\n  }, [data]);\r\n\r\n  // Handle file input change and set the file in state\r\n  const handleFileChange = (event) => {\r\n    const uploadedFile = event.target.files[0];\r\n    setFile(uploadedFile);  // Update the file state\r\n    console.log(uploadedFile);  // This will log the file when it changes\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setDebounceState(false);\r\n    setIsFieldsDirty(true);\r\n    const { name, value } = e.target;\r\n\r\n    setSelectedData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n\r\n    console.log(selectedData);\r\n    \r\n  };\r\n\r\n  //debounce\r\n    useEffect(() => {\r\n      setDebounceState(true);\r\n    }, [userInputDebounce]);\r\n\r\n  function convertToEmbedUrl(youtubeUrl) {\r\n\r\n    const videoIdMatch = youtubeUrl.match(/v=([^&]+)/);\r\n\r\n    if (videoIdMatch && videoIdMatch[1]) {\r\n      const videoId = videoIdMatch[1];\r\n\r\n      return `https://www.youtube.com/embed/${videoId}`;\r\n    } else {\r\n      // Return the original URL if it doesn't match the pattern\r\n      return youtubeUrl;\r\n    }\r\n  }\r\n\r\n  const handleSave = async (event) => {\r\n    //event.preventDefault();\r\n    // if (!file) {\r\n    //   setIsError(true);\r\n    //   setAlertMessage('No file selected');\r\n    //   setTimeout(() => setAlertMessage(''), 2000);\r\n    //   return;\r\n    // }\r\n\r\n    setStatus('loading')\r\n\r\n    const formData = new FormData();\r\n    formData.append('userId', selectedData.userId);\r\n    formData.append('movieId', tmdbId);\r\n    formData.append('description', selectedData.description);\r\n    // formData.append('video', file); // Use the state variable `file`\r\n    formData.append('url', convertToEmbedUrl(selectedData.url));\r\n\r\n    const data = {\r\n      userId: selectedData.userId,\r\n      movieId: tmdbId,\r\n      description: selectedData.description,\r\n      image: file\r\n    }\r\n\r\n    console.log(file)\r\n\r\n    axios({\r\n      method: 'post',\r\n      url: '/videos',\r\n      data: formData,\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n        Authorization: `Bearer ${auth.accessToken}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setIsError(false);\r\n        setAlertMessage(response.data?.message);\r\n        setTimeout(() => {\r\n          setAlertMessage('');\r\n          setState('base')\r\n        }, 2000);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        setIsError(true);\r\n        setAlertMessage(error.response?.data?.errors[0] || error.response?.data);\r\n        setTimeout(() => setAlertMessage(''), 2000);\r\n      });\r\n  };\r\n\r\n  const handleUpdate = async (event) => {\r\n    // event.preventDefault();\r\n\r\n    setStatus('loading')\r\n\r\n    const formData = new FormData();\r\n    formData.append('id', selectedData.id)\r\n    formData.append('userId', selectedData.userId);\r\n    formData.append('movieId', tmdbId);\r\n    formData.append('description', selectedData.description);\r\n    formData.append('url', selectedData.url);\r\n    \r\n\r\n    const data = {\r\n      id: selectedData.id,\r\n      userId: selectedData.userId,\r\n      movieI: tmdbId,\r\n      description: selectedData.description,\r\n      image: file\r\n    }\r\n\r\n    console.log(selectedData)\r\n\r\n    axios({\r\n      method: 'patch',\r\n      url: `/videos/${selectedData.id}`,\r\n      data: data,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${auth.accessToken}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setIsError(false);\r\n        setAlertMessage(response.data.message);\r\n        \r\n        setTimeout(() => {\r\n          setAlertMessage('');\r\n          setState('base')\r\n        }, 2000);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        setIsError(true);\r\n        setAlertMessage(error.response?.data?.message);\r\n        setTimeout(() => setAlertMessage(''), 2000);\r\n      });\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setStatus('loading')\r\n    console.log(selectedData);\r\n    console.log(selectedData.id);\r\n    const isConfirmed = window.confirm('Are you sure you want to delete this Video?');\r\n    if (isConfirmed) {\r\n      axios({\r\n        method: 'delete',\r\n        url: `/videos/${selectedData.id}`,\r\n        headers: {\r\n          Authorization: `Bearer ${auth.accessToken}`,\r\n        },\r\n      })\r\n        .then((response) => {\r\n          console.log('Database Updated');\r\n          console.log(response.data);\r\n          setIsError(false);\r\n          setAlertMessage(response.data.message);\r\n          setTimeout(() => {\r\n            setAlertMessage('');\r\n            setState('base');\r\n          }, 2000);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.data);\r\n          setIsError(true);\r\n          setAlertMessage(error.data.message);\r\n          setTimeout(() => setAlertMessage(''), 2000);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {alertMessage && (<div className={`alert-box ${isError ? 'error' : 'success'}`}>{alertMessage}</div>)}\r\n      <div className=\"video-cards\">\r\n        <form>\r\n          <div className=\"videos-details\">\r\n            <div className=\"field\">\r\n              Video\r\n              <input\r\n                type=\"text\"\r\n                name=\"url\"\r\n                value={selectedData.url}\r\n                ref={urlRef}\r\n                onChange={handleOnChange}\r\n              />\r\n              {debounceState && isFieldsDirty && (selectedData.url == '') && (<span className='errors'>This field is required</span>)}\r\n              </div>\r\n            <div className=\"field\">\r\n              Description\r\n              <textarea\r\n                rows={5}\r\n                type=\"text\"\r\n                name=\"description\"\r\n                value={selectedData.description}\r\n                ref={descriptionRef}\r\n                onChange={handleOnChange}\r\n              />\r\n              {debounceState && isFieldsDirty && (selectedData.description == '') && (<span className='errors'>This field is required</span>)}\r\n            </div>\r\n          </div>\r\n          <div className=\"video-profile\">\r\n            <iframe\r\n                src={\r\n                  selectedData.url && !selectedData.url.includes(\"null\")\r\n                    ? convertToEmbedUrl(selectedData.url)\r\n                    : 'https://via.placeholder.com/550x300?text=No+Video'\r\n                  }\r\n                  className=\"video-frame\"\r\n                  allowFullScreen\r\n                >\r\n            </iframe>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div className=\"button-group\">\r\n        {state == 'update' && <button onClick={handleDelete} className='delete-button'>Delete</button>}\r\n        <button onClick={() => {\r\n                  if (status === 'loading') {\r\n                    return;\r\n                  }\r\n                  const { url, description} = selectedData;\r\n                  if (url && description) {\r\n                    state == 'update' ? handleUpdate() : handleSave()\r\n                  } else {\r\n                    //fields are incomplete\r\n                    setIsFieldsDirty(true);\r\n                    //focus if field is empty\r\n                    if (!url) {\r\n                      urlRef.current.focus();\r\n                    } else if (!description) {\r\n                      descriptionRef.current.focus();\r\n                    }\r\n                  }\r\n                }}>Save</button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}