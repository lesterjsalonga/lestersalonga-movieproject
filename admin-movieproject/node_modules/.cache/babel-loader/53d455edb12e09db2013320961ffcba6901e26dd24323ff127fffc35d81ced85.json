{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\CastandCrew\\\\CastandCrew.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useCallback, useRef } from 'react';\nimport { AuthContext } from './utils/context/AuthToken';\nimport axios from 'axios';\nimport './CastandCrew.css';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Casts() {\n  _s();\n  const {\n    auth\n  } = useContext(AuthContext);\n  const [query, setQuery] = useState('');\n  const [cast, setCast] = useState([]);\n  const [castid, setCastId] = useState(undefined);\n  const [selectedcast, setSelectedCast] = useState({});\n  const searchRef = useRef();\n  const [notfound, setNotFound] = useState(false);\n  const nameRef = useRef();\n  const characterNameRef = useRef();\n  const urlRef = useRef();\n  let {\n    movieId\n  } = useParams();\n  const getAll = useCallback(movie_id => {\n    axios({\n      method: 'get',\n      url: `/movies/${movie_id}`,\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${auth.accessToken}`\n      }\n    }).then(response => {\n      setCast(response.data.casts);\n    }).catch(error => {\n      console.error(\"Error fetching Casts:\", error.response.data);\n    });\n  }, [auth.accessToken]); // Add `auth.accessToken` as a dependency\n\n  useEffect(() => {\n    getAll(movieId);\n  }, [movieId, getAll]); // Add `getAll` to the dependency array\n\n  const handleSearchPerson = useCallback(async (page = 1) => {\n    setNotFound(true);\n    try {\n      if (!query || query.trim() === '') {\n        searchRef.current.style.border = '2px solid red';\n        console.log(\"Input is empty or undefined\");\n        setTimeout(() => {\n          searchRef.current.style.border = '1px solid #ccc';\n          setNotFound(false);\n        }, 2000);\n        return;\n      }\n      const response = await axios({\n        method: 'get',\n        url: `https://api.themoviedb.org/3/search/person?query=${query}&include_adult=false&language=en-US&page=${page}`,\n        headers: {\n          accept: 'application/json',\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MGY0ZjFlMmNhODQ1ZjA3NWY5MmI5ZDRlMGY3ZTEwYiIsIm5iZiI6MTcyOTkyNjY3NC40NzIwOTksInN1YiI6IjY3MTM3ODRmNjUwMjQ4YjlkYjYxZTgxMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RRJNLOg8pmgYoomiCWKtwkw74T3ZtAs7ZScqxo1bzWg'\n        }\n      });\n      if (response.data.results.lenght === 0) {\n        console.log(\"Not Found\");\n        setSelectedCast([]);\n      } else {\n        setNotFound(false);\n        setSelectedCast(response.data.results[0]);\n        console.log(response.data.results);\n      }\n    } catch (error) {\n      console.error(\"Search error:\", error);\n    }\n  }, [query]);\n  const handlesave = async () => {\n    if (!characterNameRef.current.value.trim()) {\n      characterNameRef.current.style.border = '2px solid red';\n      setTimeout(() => {\n        characterNameRef.current.style.border = '1px solid #ccc';\n      }, 2000);\n      return;\n    }\n    try {\n      const datacast = {\n        userId: auth.user.userId,\n        movieId: movieId,\n        name: selectedcast.name,\n        url: `https://image.tmdb.org/t/p/original/${selectedcast.profile_path}`,\n        characterName: selectedcast.characterName\n      };\n      await axios({\n        method: 'POST',\n        url: '/admin/casts',\n        data: datacast,\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      });\n      alert('Added Success');\n      setSelectedCast({});\n      handleClearInput();\n      getAll(movieId);\n    } catch (error) {\n      alert(\"Nothing to Save. Data is Empty...\");\n      console.log(error);\n    }\n  };\n  const castget = async id => {\n    axios({\n      method: 'get',\n      url: `/casts/${id}`,\n      headers: {\n        Accept: 'application/json',\n        Authorization: `Bearer ${auth.accessToken}`\n      }\n    }).then(response => {\n      setSelectedCast(response.data);\n      setCastId(response.data.id);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const validateField = (fieldRef, fieldName) => {\n    if (!fieldRef.current.value.trim()) {\n      fieldRef.current.style.border = '2px solid red';\n      setTimeout(() => {\n        fieldRef.current.style.border = '1px solid #ccc';\n      }, 2000);\n      console.log(`${fieldName} cannot be empty.`);\n      return false;\n    }\n    return true;\n  };\n  const castupdate = async id => {\n    if (!(selectedcast !== null && selectedcast !== void 0 && selectedcast.id)) {\n      alert(\"No cast selected to update.\");\n      return;\n    }\n    const validateFields = () => {\n      switch (true) {\n        case !validateField(nameRef, \"Name\"):\n          return false;\n        case !validateField(characterNameRef, \"Character Name\"):\n          return false;\n        case !validateField(urlRef, \"URL\"):\n          return false;\n        default:\n          return true;\n      }\n    };\n    if (!validateFields()) {\n      return; // This is for stop if any valid is null\n    } else {\n      const isConfirm = window.confirm(\"Are you sure you want to update the cast?\");\n      if (isConfirm) {\n        const datacast = {\n          id: selectedcast.id,\n          userId: selectedcast.userId,\n          name: selectedcast.name,\n          url: selectedcast.url,\n          characterName: selectedcast.characterName\n        };\n        console.table(datacast);\n        try {\n          const response = await axios({\n            method: 'patch',\n            url: `/casts/${id}`,\n            data: datacast,\n            headers: {\n              Accept: 'application/json',\n              Authorization: `Bearer ${auth.accessToken}`\n            }\n          });\n          alert('updated Successfully!');\n          console.log(response.message);\n          handleclear();\n          getAll(movieId);\n        } catch (error) {\n          var _error$response;\n          console.error(\"Error updating cast:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n        }\n      }\n    }\n  };\n  const handleclear = useCallback(() => {\n    setSelectedCast([]);\n    setCastId(undefined);\n  }, [setSelectedCast, setCastId]);\n  const handleClearInput = () => {\n    setQuery(\"\");\n    setSelectedCast({});\n  };\n  const handledelete = id => {\n    const isConfirm = window.confirm(\"Are you Sure to Delete Cast?\");\n    if (isConfirm) {\n      axios({\n        method: 'delete',\n        url: `/admin/casts/${id}`,\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      }).then(() => {\n        console.log(\"Database Updated\");\n      }).catch(error => {\n        console.error(error);\n        getAll(movieId);\n        alert(\"Delete Success!\");\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cast-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Cast-View-Box\",\n      children: cast !== undefined && cast.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-display-cast\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-wrapper\",\n          children: cast.map(actor => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttons-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"delete-button\",\n                onClick: () => handledelete(actor.id),\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTrashAlt\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"edit-button\",\n                onClick: () => castget(actor.id),\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faEdit\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: actor.url,\n              alt: actor.name,\n              style: {\n                width: 'auto'\n              },\n              className: \"image-casts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: actor.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: actor.characterName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button-group\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)]\n          }, actor.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-cast\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Cast not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Search-Box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parent-container\",\n        children: [castid === undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-box-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"input-search-person\",\n              type: \"text\",\n              value: query,\n              onChange: event => {\n                setQuery(event.target.value);\n                setSelectedCast({});\n              },\n              placeholder: \"search cast name\",\n              ref: searchRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button-search\",\n              type: \"button\",\n              onClick: () => handleSearchPerson(1),\n              disabled: notfound,\n              children: notfound ? 'Searching...' : 'Search'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"save-button\",\n              type: \"button\",\n              onClick: handlesave,\n              disabled: !selectedcast,\n              children: \"Add Cast\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cast-detail-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-container-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-container\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"image-cast\",\n                src: selectedcast !== null && selectedcast !== void 0 && selectedcast.profile_path ? `https://image.tmdb.org/t/p/original/${selectedcast.profile_path}` : selectedcast !== null && selectedcast !== void 0 && selectedcast.url ? selectedcast.url : require('../../Form/Cast/NO CAST.jpg'),\n                className: \"img-cast\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"cast-n\",\n                children: \"Cast Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"cast-name\",\n                value: selectedcast.name || '',\n                onChange: e => setSelectedCast({\n                  ...selectedcast,\n                  name: e.target.value\n                }),\n                disabled: castid === undefined,\n                ref: nameRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"character-n\",\n                children: \"Character Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"character-name\",\n                value: selectedcast.characterName || '',\n                onChange: e => setSelectedCast({\n                  ...selectedcast,\n                  characterName: e.target.value\n                }),\n                ref: characterNameRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"url-text\",\n                children: \"Url:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"url-text-photo\",\n                value: selectedcast.profile_path || '' || selectedcast.url || '',\n                onChange: e => setSelectedCast({\n                  ...selectedcast,\n                  url: e.target.value\n                }),\n                disabled: castid === undefined,\n                ref: urlRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), castid !== undefined && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"edit-back-btn\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-btn\",\n                type: \"button\",\n                onClick: () => castupdate(selectedcast.id),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"back-btn\",\n                type: \"button\",\n                onClick: handleclear,\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n}\n_s(Casts, \"JII0b9sxou7S41E0CuLUlgDliIA=\", false, function () {\n  return [useParams];\n});\n_c = Casts;\nexport default Casts;\nvar _c;\n$RefreshReg$(_c, \"Casts\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useCallback","useRef","AuthContext","axios","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","Casts","_s","auth","query","setQuery","cast","setCast","castid","setCastId","undefined","selectedcast","setSelectedCast","searchRef","notfound","setNotFound","nameRef","characterNameRef","urlRef","movieId","getAll","movie_id","method","url","headers","Accept","Authorization","accessToken","then","response","data","casts","catch","error","console","handleSearchPerson","page","trim","current","style","border","log","setTimeout","accept","results","lenght","handlesave","value","datacast","userId","user","name","profile_path","characterName","alert","handleClearInput","castget","id","validateField","fieldRef","fieldName","castupdate","validateFields","isConfirm","window","confirm","table","message","handleclear","_error$response","handledelete","className","children","length","map","actor","type","onClick","FontAwesomeIcon","icon","faTrashAlt","fileName","_jsxFileName","lineNumber","columnNumber","faEdit","src","alt","width","onChange","event","target","placeholder","ref","disabled","require","e","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/CastandCrew/CastandCrew.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext, useCallback, useRef } from 'react';\r\nimport { AuthContext } from './utils/context/AuthToken';\r\nimport axios from 'axios';\r\nimport './CastandCrew.css';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Casts() {\r\n  const { auth } = useContext(AuthContext);\r\n  const [query, setQuery] = useState('');\r\n  const [cast, setCast] = useState([]);\r\n  const [castid, setCastId] = useState(undefined);\r\n  const [selectedcast, setSelectedCast] = useState({})\r\n  const searchRef = useRef();\r\n  const [notfound, setNotFound] = useState(false);\r\n  const nameRef = useRef();\r\n  const characterNameRef = useRef()\r\n  const urlRef = useRef();\r\n  let { movieId } = useParams();\r\n\r\n  const getAll = useCallback((movie_id) => {\r\n    axios({\r\n      method: 'get',\r\n      url: `/movies/${movie_id}`,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        Authorization: `Bearer ${auth.accessToken}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setCast(response.data.casts);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching Casts:\", error.response.data);\r\n      });\r\n  }, [auth.accessToken]) // Add `auth.accessToken` as a dependency\r\n\r\n  useEffect(() => {\r\n    getAll(movieId);\r\n  }, [movieId, getAll]); // Add `getAll` to the dependency array\r\n\r\n  const handleSearchPerson = useCallback(async (page = 1) => {\r\n    setNotFound(true);\r\n    try {\r\n      if (!query || query.trim() === '') {\r\n        searchRef.current.style.border = '2px solid red';\r\n        console.log(\"Input is empty or undefined\");\r\n        setTimeout(() => {\r\n          searchRef.current.style.border = '1px solid #ccc';\r\n          setNotFound(false);\r\n        }, 2000);\r\n        return;\r\n      }\r\n      const response = await axios({\r\n        method: 'get',\r\n        url: `https://api.themoviedb.org/3/search/person?query=${query}&include_adult=false&language=en-US&page=${page}`,\r\n        headers: {\r\n          accept: 'application/json',\r\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI1MGY0ZjFlMmNhODQ1ZjA3NWY5MmI5ZDRlMGY3ZTEwYiIsIm5iZiI6MTcyOTkyNjY3NC40NzIwOTksInN1YiI6IjY3MTM3ODRmNjUwMjQ4YjlkYjYxZTgxMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.RRJNLOg8pmgYoomiCWKtwkw74T3ZtAs7ZScqxo1bzWg'\r\n        },\r\n      });\r\n\r\n      if (response.data.results.lenght === 0) {\r\n        console.log(\"Not Found\");\r\n        setSelectedCast([])\r\n      } else {\r\n        setNotFound(false);\r\n        setSelectedCast(response.data.results[0]);\r\n        console.log(response.data.results);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Search error:\", error);\r\n    }\r\n  }, [query])\r\n\r\n  const handlesave = async () => {\r\n    if (!characterNameRef.current.value.trim()) {\r\n      characterNameRef.current.style.border = '2px solid red';\r\n      setTimeout(() => {\r\n        characterNameRef.current.style.border = '1px solid #ccc';\r\n      }, 2000);\r\n      return;\r\n    }\r\n    try {\r\n      const datacast = {\r\n        userId: auth.user.userId,\r\n        movieId: movieId,\r\n        name: selectedcast.name,\r\n        url: `https://image.tmdb.org/t/p/original/${selectedcast.profile_path}`,\r\n        characterName: selectedcast.characterName,\r\n      }\r\n      await axios({\r\n        method: 'POST',\r\n        url: '/admin/casts',\r\n        data: datacast,\r\n        headers: {\r\n          Authorization: `Bearer ${auth.accessToken}`,\r\n        }\r\n      });\r\n      alert('Added Success');\r\n      setSelectedCast({});\r\n      handleClearInput();\r\n      getAll(movieId);\r\n    } catch (error) {\r\n      alert(\"Nothing to Save. Data is Empty...\")\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  const castget = async (id) => {\r\n    axios({\r\n      method: 'get',\r\n      url: `/casts/${id}`,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        Authorization: `Bearer ${auth.accessToken}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setSelectedCast(response.data);\r\n        setCastId(response.data.id)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      });\r\n  }\r\n\r\n  const validateField = (fieldRef, fieldName) => {\r\n    if (!fieldRef.current.value.trim()) {\r\n      fieldRef.current.style.border = '2px solid red';\r\n      setTimeout(() => {\r\n        fieldRef.current.style.border = '1px solid #ccc';\r\n      }, 2000);\r\n      console.log(`${fieldName} cannot be empty.`)\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const castupdate = async (id) => {\r\n    if (!selectedcast?.id) {\r\n      alert(\"No cast selected to update.\");\r\n      return;\r\n    }\r\n\r\n    const validateFields = () => {\r\n      switch (true) {\r\n        case !validateField(nameRef, \"Name\"):\r\n          return false;\r\n        case !validateField(characterNameRef, \"Character Name\"):\r\n          return false;\r\n        case !validateField(urlRef, \"URL\"):\r\n          return false;\r\n        default:\r\n          return true;\r\n      }\r\n    };\r\n\r\n    if (!validateFields()) {\r\n      return; // This is for stop if any valid is null\r\n    } else {\r\n      const isConfirm = window.confirm(\"Are you sure you want to update the cast?\");\r\n      if (isConfirm) {\r\n        const datacast = {\r\n          id: selectedcast.id,\r\n          userId: selectedcast.userId,\r\n          name: selectedcast.name,\r\n          url: selectedcast.url,\r\n          characterName: selectedcast.characterName,\r\n        };\r\n\r\n        console.table(datacast);\r\n        try {\r\n          const response = await axios({\r\n            method: 'patch',\r\n            url: `/casts/${id}`,\r\n            data: datacast,\r\n            headers: {\r\n              Accept: 'application/json',\r\n              Authorization: `Bearer ${auth.accessToken}`,\r\n            },\r\n          });\r\n          alert('updated Successfully!');\r\n          console.log(response.message);\r\n          handleclear();\r\n          getAll(movieId)\r\n        } catch (error) {\r\n          console.error(\"Error updating cast:\", error.response?.data || error.message);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleclear = useCallback(() => {\r\n    setSelectedCast([]);\r\n    setCastId(undefined);\r\n  }, [setSelectedCast, setCastId]);\r\n\r\n  const handleClearInput = () => {\r\n    setQuery(\"\");\r\n    setSelectedCast({});\r\n  };\r\n\r\n  const handledelete = (id) => {\r\n    const isConfirm = window.confirm(\"Are you Sure to Delete Cast?\");\r\n\r\n    if (isConfirm) {\r\n      axios({\r\n        method: 'delete',\r\n        url: `/admin/casts/${id}`,\r\n        headers: {\r\n          Authorization: `Bearer ${auth.accessToken}`,\r\n        },\r\n      })\r\n        .then(() => {\r\n          console.log(\"Database Updated\");\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n          getAll(movieId);\r\n          alert(\"Delete Success!\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='cast-box'>\r\n      <div className='Cast-View-Box'>\r\n        {cast !== undefined && cast.length > 0 ? (\r\n          <div className='card-display-cast'>\r\n            <div className=\"card-wrapper\">\r\n              {cast.map((actor) => (\r\n                <div key={actor.id} className=\"card\">\r\n                  <div className='buttons-group'>\r\n                    <button\r\n                      type='button'\r\n                      className='delete-button'\r\n                      onClick={() => handledelete(actor.id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrashAlt} />\r\n                    </button>\r\n                    <button\r\n                      type='button'\r\n                      className='edit-button'\r\n                      onClick={() => castget(actor.id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faEdit} />\r\n                    </button>\r\n                  </div>\r\n                  <img src={actor.url} alt={actor.name} style={{ width: 'auto' }} className='image-casts' />\r\n                  <div className=\"container\">\r\n                    <h4><b>{actor.name}</b></h4>\r\n                    <p>{actor.characterName}</p>\r\n                    <div className=\"button-group\">\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div className='no-cast'>\r\n            <h3>Cast not Found</h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className='Search-Box'>\r\n        <div className='parent-container'>\r\n          {castid === undefined && (\r\n            <>\r\n              <div className='search-box-btn'>\r\n                <input\r\n                  className='input-search-person'\r\n                  type='text'\r\n                  value={query}\r\n                  onChange={(event) => {\r\n                    setQuery(event.target.value);\r\n                    setSelectedCast({})\r\n                  }}\r\n                  placeholder='search cast name'\r\n                  ref={searchRef}\r\n                />\r\n                <button\r\n                  className='button-search'\r\n                  type='button'\r\n                  onClick={() => handleSearchPerson(1)}\r\n                  disabled={notfound}\r\n                >\r\n                  {notfound ? 'Searching...' : 'Search'}\r\n                </button>\r\n                <button\r\n                  className='save-button'\r\n                  type='button'\r\n                  onClick={handlesave}\r\n                  disabled={!selectedcast}\r\n                >\r\n                  Add Cast\r\n                </button>\r\n              </div>\r\n            </>\r\n          )}\r\n          <div className='cast-detail-box'>\r\n            <div className='image-container-center'>\r\n              <div className='image-container'>\r\n                <img\r\n                  alt='image-cast'\r\n                  src={selectedcast?.profile_path\r\n                    ? `https://image.tmdb.org/t/p/original/${selectedcast.profile_path}`\r\n                    : selectedcast?.url\r\n                      ? selectedcast.url\r\n                      : require('../../Form/Cast/NO CAST.jpg')\r\n                  }\r\n                  className='img-cast'\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='info-text'>\r\n              <div className='input-group'>\r\n                <label className='cast-n'>\r\n                  Cast Name:\r\n                </label>\r\n                <input className='cast-name'\r\n                  value={selectedcast.name || ''}\r\n                  onChange={\r\n                    (e) => setSelectedCast({ ...selectedcast, name: e.target.value })}\r\n                  disabled={castid === undefined}\r\n                  ref={nameRef}\r\n                />\r\n              </div>\r\n              <div className='input-group'>\r\n                <label className='character-n'>\r\n                  Character Name:\r\n                </label>\r\n                <input\r\n                  className='character-name'\r\n                  value={selectedcast.characterName || ''}\r\n                  onChange={(e) => setSelectedCast({ ...selectedcast, characterName: e.target.value })}\r\n                  ref={characterNameRef}\r\n                />\r\n              </div>\r\n              <div className='input-group'>\r\n                <label className='url-text'>\r\n                  Url:\r\n                </label>\r\n                <input className='url-text-photo'\r\n                  value={selectedcast.profile_path || '' || selectedcast.url || ''}\r\n                  onChange={(e) => setSelectedCast({ ...selectedcast, url: e.target.value })}\r\n                  disabled={castid === undefined}\r\n                  ref={urlRef}\r\n                />\r\n              </div>\r\n            </div>\r\n            {castid !== undefined && (\r\n              <>\r\n                <div className='edit-back-btn'>\r\n                  <button className='edit-btn'\r\n                    type='button'\r\n                    onClick={() => castupdate(selectedcast.id)}\r\n                  >\r\n                    Update\r\n                  </button>\r\n                  <button className='back-btn'\r\n                    type='button'\r\n                    onClick={handleclear}\r\n                  >\r\n                    Back\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Casts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}