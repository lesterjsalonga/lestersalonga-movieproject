{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Videos\\\\Videos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\nimport './Videos.css';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Videos() {\n  _s();\n  const {\n    auth\n  } = useContext(AuthContext);\n  const {\n    movieId\n  } = useParams(); // Get movieId from the URL\n  const [videos, setVideos] = useState([]);\n  const [newVideo, setNewVideo] = useState({\n    url: '',\n    description: ''\n  });\n  const [editingVideo, setEditingVideo] = useState(null); // To track video being edited\n  const [isSaving, setIsSaving] = useState(false);\n  useEffect(() => {\n    // Fetch videos associated with the current movie\n    const fetchVideos = async () => {\n      try {\n        const response = await axios.get(`/movies/${movieId}/videos`, {\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        setVideos(response.data); // Set the video data\n      } catch (error) {\n        console.error(\"Error fetching videos:\", error);\n      }\n    };\n    fetchVideos();\n  }, [movieId, auth.accessToken]);\n\n  // Handle adding a new video\n  const handleAddVideo = async () => {\n    setIsSaving(true);\n    try {\n      const videoData = {\n        movieId,\n        url: newVideo.url,\n        description: newVideo.description,\n        userId: auth.user.userId\n      };\n      const response = await axios.post('/videos', videoData, {\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      });\n      setVideos(prevVideos => [...prevVideos, response.data]);\n      setNewVideo({\n        url: '',\n        description: ''\n      }); // Clear input fields\n      alert(\"Video added successfully!\");\n    } catch (error) {\n      console.error(\"Error adding video:\", error);\n      alert(\"Failed to add video.\");\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // Handle deleting a video\n  const handleDeleteVideo = async id => {\n    if (window.confirm(\"Are you sure you want to delete this video?\")) {\n      try {\n        await axios.delete(`/videos/${id}`, {\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        setVideos(prevVideos => prevVideos.filter(video => video.id !== id));\n        alert(\"Video deleted successfully!\");\n      } catch (error) {\n        console.error(\"Error deleting video:\", error);\n        alert(\"Failed to delete video.\");\n      }\n    }\n  };\n\n  // Handle updating a video\n  const handleUpdateVideo = async () => {\n    setIsSaving(true);\n    try {\n      const updatedData = {\n        url: editingVideo.url,\n        description: editingVideo.description\n      };\n      await axios.patch(`/videos/${editingVideo.id}`, updatedData, {\n        headers: {\n          Authorization: `Bearer ${auth.accessToken}`\n        }\n      });\n      setVideos(prevVideos => prevVideos.map(video => video.id === editingVideo.id ? {\n        ...video,\n        ...updatedData\n      } : video));\n      setEditingVideo(null);\n      alert(\"Video updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating video:\", error);\n      alert(\"Failed to update video.\");\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // Handle input change for new video or editing video\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (editingVideo) {\n      setEditingVideo(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else {\n      setNewVideo(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"videos-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Videos for Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"url\",\n        placeholder: \"Video URL\",\n        value: editingVideo ? editingVideo.url : newVideo.url,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Video Description\",\n        value: editingVideo ? editingVideo.description : newVideo.description,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: editingVideo ? handleUpdateVideo : handleAddVideo,\n        disabled: isSaving,\n        children: isSaving ? 'Saving...' : editingVideo ? 'Update Video' : 'Add Video'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"videos-list\",\n      children: videos.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No videos found for this movie.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this) : videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"iframe\", {\n            width: \"560\",\n            height: \"315\",\n            src: video.url,\n            title: \"Video\",\n            frameBorder: \"0\",\n            allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n            allowFullScreen: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: video.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Added on: \", new Date(video.dateCreated).toLocaleDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setEditingVideo(video),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteVideo(video.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 29\n        }, this)]\n      }, video.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n_s(Videos, \"5gqIX21gfEHeRStE2OQ62Gwq68w=\", false, function () {\n  return [useParams];\n});\n_c = Videos;\nexport default Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","AuthContext","useParams","jsxDEV","_jsxDEV","Videos","_s","auth","movieId","videos","setVideos","newVideo","setNewVideo","url","description","editingVideo","setEditingVideo","isSaving","setIsSaving","fetchVideos","response","get","headers","Authorization","accessToken","data","error","console","handleAddVideo","videoData","userId","user","post","prevVideos","alert","handleDeleteVideo","id","window","confirm","delete","filter","video","handleUpdateVideo","updatedData","patch","map","handleInputChange","e","name","value","target","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","disabled","length","width","height","src","title","frameBorder","allow","allowFullScreen","Date","dateCreated","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Videos/Videos.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\r\nimport './Videos.css';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Videos() {\r\n    const { auth } = useContext(AuthContext);\r\n    const { movieId } = useParams(); // Get movieId from the URL\r\n    const [videos, setVideos] = useState([]);\r\n    const [newVideo, setNewVideo] = useState({ url: '', description: '' });\r\n    const [editingVideo, setEditingVideo] = useState(null); // To track video being edited\r\n    const [isSaving, setIsSaving] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Fetch videos associated with the current movie\r\n        const fetchVideos = async () => {\r\n            try {\r\n                const response = await axios.get(`/movies/${movieId}/videos`, {\r\n                    headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n                });\r\n                setVideos(response.data); // Set the video data\r\n            } catch (error) {\r\n                console.error(\"Error fetching videos:\", error);\r\n            }\r\n        };\r\n\r\n        fetchVideos();\r\n    }, [movieId, auth.accessToken]);\r\n\r\n    // Handle adding a new video\r\n    const handleAddVideo = async () => {\r\n        setIsSaving(true);\r\n        try {\r\n            const videoData = {\r\n                movieId,\r\n                url: newVideo.url,\r\n                description: newVideo.description,\r\n                userId: auth.user.userId,\r\n            };\r\n\r\n            const response = await axios.post('/videos', videoData, {\r\n                headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n            });\r\n\r\n            setVideos((prevVideos) => [...prevVideos, response.data]);\r\n            setNewVideo({ url: '', description: '' }); // Clear input fields\r\n            alert(\"Video added successfully!\");\r\n        } catch (error) {\r\n            console.error(\"Error adding video:\", error);\r\n            alert(\"Failed to add video.\");\r\n        } finally {\r\n            setIsSaving(false);\r\n        }\r\n    };\r\n\r\n    // Handle deleting a video\r\n    const handleDeleteVideo = async (id) => {\r\n        if (window.confirm(\"Are you sure you want to delete this video?\")) {\r\n            try {\r\n                await axios.delete(`/videos/${id}`, {\r\n                    headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n                });\r\n\r\n                setVideos((prevVideos) => prevVideos.filter((video) => video.id !== id));\r\n                alert(\"Video deleted successfully!\");\r\n            } catch (error) {\r\n                console.error(\"Error deleting video:\", error);\r\n                alert(\"Failed to delete video.\");\r\n            }\r\n        }\r\n    };\r\n\r\n    // Handle updating a video\r\n    const handleUpdateVideo = async () => {\r\n        setIsSaving(true);\r\n        try {\r\n            const updatedData = {\r\n                url: editingVideo.url,\r\n                description: editingVideo.description,\r\n            };\r\n\r\n            await axios.patch(`/videos/${editingVideo.id}`, updatedData, {\r\n                headers: { Authorization: `Bearer ${auth.accessToken}` },\r\n            });\r\n\r\n            setVideos((prevVideos) =>\r\n                prevVideos.map((video) =>\r\n                    video.id === editingVideo.id ? { ...video, ...updatedData } : video\r\n                )\r\n            );\r\n            setEditingVideo(null);\r\n            alert(\"Video updated successfully!\");\r\n        } catch (error) {\r\n            console.error(\"Error updating video:\", error);\r\n            alert(\"Failed to update video.\");\r\n        } finally {\r\n            setIsSaving(false);\r\n        }\r\n    };\r\n\r\n    // Handle input change for new video or editing video\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        if (editingVideo) {\r\n            setEditingVideo((prev) => ({ ...prev, [name]: value }));\r\n        } else {\r\n            setNewVideo((prev) => ({ ...prev, [name]: value }));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"videos-container\">\r\n            <h2>Videos for Movie</h2>\r\n\r\n            {/* Add Video Form */}\r\n            <div className=\"video-form\">\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"url\"\r\n                    placeholder=\"Video URL\"\r\n                    value={editingVideo ? editingVideo.url : newVideo.url}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <textarea\r\n                    name=\"description\"\r\n                    placeholder=\"Video Description\"\r\n                    value={editingVideo ? editingVideo.description : newVideo.description}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n                <button onClick={editingVideo ? handleUpdateVideo : handleAddVideo} disabled={isSaving}>\r\n                    {isSaving ? 'Saving...' : editingVideo ? 'Update Video' : 'Add Video'}\r\n                </button>\r\n            </div>\r\n\r\n            {/* Display existing videos */}\r\n            <div className=\"videos-list\">\r\n                {videos.length === 0 ? (\r\n                    <p>No videos found for this movie.</p>\r\n                ) : (\r\n                    videos.map((video) => (\r\n                        <div key={video.id} className=\"video-item\">\r\n                            <div className=\"video-info\">\r\n                                <iframe\r\n                                    width=\"560\"\r\n                                    height=\"315\"\r\n                                    src={video.url}\r\n                                    title=\"Video\"\r\n                                    frameBorder=\"0\"\r\n                                    allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                                    allowFullScreen\r\n                                ></iframe>\r\n                                <p>{video.description}</p>\r\n                                <small>Added on: {new Date(video.dateCreated).toLocaleDateString()}</small>\r\n                            </div>\r\n                            <div className=\"video-actions\">\r\n                                <button onClick={() => setEditingVideo(video)}>Edit</button>\r\n                                <button onClick={() => handleDeleteVideo(video.id)}>Delete</button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Videos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}