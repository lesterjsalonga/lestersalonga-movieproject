{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Videos\\\\Videos.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext, useCallback, useRef } from \"react\";\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport \"./Videos.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction VideoForm() {\n  _s();\n  const {\n    auth\n  } = useContext(AuthContext);\n  const [videoId, setVideoId] = useState(undefined);\n  const [videoURL, setVideoURL] = useState(\"\");\n  const [videos, setVideos] = useState([]);\n  const [videokey, setVideoKey] = useState({});\n  const [selectedvideo, setSelectedVideo] = useState({});\n  const urlRef = useRef();\n  const nameRef = useRef();\n  const siteRef = useRef();\n  const videoTypeRef = useRef();\n  let {\n    movieId\n  } = useParams();\n  const getAll = useCallback(movieId => {\n    axios({\n      method: \"get\",\n      url: `/movies/${movieId}`,\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${auth.accessToken}`\n      }\n    }).then(response => {\n      setVideos(response.data.videos);\n    }).catch(error => {\n      console.error(\"Error fetching Videos:\", error.response.data);\n    });\n  }, [auth.accessToken]);\n  const getYouTubeVideoID = url => {\n    if (!url || typeof url !== \"string\") {\n      console.log(\"Invalid URL:\", url);\n      setVideoKey(\"\");\n      return null;\n    }\n    const regex = /(?:https?:\\/\\/(?:www\\.)?youtube\\.com\\/(?:watch\\?v=|embed\\/)([\\w-]+))/i;\n    const match = url.match(regex);\n    console.log(\"URL:\", url);\n    console.log(\"Match:\", match);\n    if (match && match[1]) {\n      setVideoKey(match[1]);\n      return match[1];\n    } else {\n      setVideoKey(\"\");\n      return null;\n    }\n  };\n  const validateField = (fieldRef, fieldName) => {\n    if (!fieldRef.current) {\n      console.error(`Field ${fieldName} ref is not assigned.`);\n      return false;\n    }\n    if (!fieldRef.current.value.trim()) {\n      fieldRef.current.style.border = \"2px solid red\";\n      setTimeout(() => {\n        fieldRef.current.style.border = \"1px solid #ccc\";\n      }, 2000);\n      console.log(`${fieldName} cannot be empty.`);\n      return false;\n    }\n    return true;\n  };\n  const handlesave = async () => {\n    const dataphoto = {\n      userId: auth.user.userId,\n      movieId: movieId,\n      url: `https://www.youtube.com/embed/${videokey}`,\n      videoKey: videokey,\n      name: selectedvideo.name,\n      site: selectedvideo.site,\n      videoType: selectedvideo.videoType,\n      official: selectedvideo.official\n    };\n    console.table(dataphoto);\n    const validateFields = () => {\n      const isUrlValid = validateField(urlRef, \"YouTube Link\");\n      if (isUrlValid) {\n        const videoKey = getYouTubeVideoID(urlRef.current.value);\n        if (!videoKey) {\n          urlRef.current.style.border = \"2px solid red\";\n          setTimeout(() => {\n            urlRef.current.style.border = \"1px solid #ccc\";\n          }, 2000);\n          console.log(\"Invalid YouTube link. Please enter a valid URL.\");\n          alert(\"Invalid YouTube link. Please enter a valid URL.\");\n          return false;\n        }\n      }\n      const isNameValid = validateField(nameRef, \"Title Name\");\n      const isSiteValid = validateField(siteRef, \"Site Type\");\n      const isVideoTypeValid = validateField(videoTypeRef, \"Video Type\");\n      return isUrlValid && isNameValid && isSiteValid && isVideoTypeValid;\n    };\n    if (!validateFields()) {\n      return; // This is for stop if any valid is null\n    } else {\n      try {\n        const dataphoto = {\n          userId: auth.user.id,\n          movieId: movieId,\n          url: `https://www.youtube.com/embed/${videokey}`,\n          videoKey: videokey,\n          name: selectedvideo.name,\n          site: selectedvideo.site,\n          videoType: selectedvideo.videoType,\n          official: selectedvideo.official\n        };\n        await axios({\n          method: \"POST\",\n          url: \"/admin/videos\",\n          data: dataphoto,\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        alert(\"Added Success\");\n        getAll(movieId);\n        setSelectedVideo([]);\n        setVideoURL(\"\");\n        setVideoKey(\"\");\n        getYouTubeVideoID(null);\n        urlRef.current.value = \"\";\n      } catch (error) {\n        var _error$response;\n        console.log(\"Error Saving Video\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n        alert(`Incorrect Link or Error: ${error.message}`);\n      }\n    }\n  };\n  useEffect(() => {\n    getAll(movieId);\n  }, [movieId, getAll]);\n  const handledelete = async id => {\n    const isConfirm = window.confirm(\"Are you sure you want to delete this Video?\");\n    if (isConfirm) {\n      try {\n        const response = await axios({\n          method: \"delete\",\n          url: `/videos/${id}`,\n          headers: {\n            Authorization: `Bearer ${auth.accessToken}`\n          }\n        });\n        alert(\"Delete successful!\");\n        console.log(response);\n        getAll(movieId);\n      } catch (err) {\n        console.error(\"Error deleting video:\", err.message);\n        alert(\"An error occurred while deleting the video.\");\n      }\n    }\n  };\n  const videoget = async id => {\n    axios({\n      method: \"get\",\n      url: `/videos/${id}`,\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${auth.accessToken}`\n      }\n    }).then(response => {\n      setSelectedVideo(response.data);\n      setVideoId(response.data.id);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const handleclear = useCallback(() => {\n    setSelectedVideo([]);\n    setVideoId(undefined);\n    setVideoKey(\"\");\n    setVideoURL(\"\");\n    urlRef.current.value = \"\";\n  }, [setSelectedVideo, setVideoId, setVideoKey, setVideoURL]);\n  const videoUpdate = async id => {\n    const validateFields = () => {\n      const isUrlValid = validateField(urlRef, \"YouTube Link\");\n      if (isUrlValid) {\n        const videoKey = getYouTubeVideoID(urlRef.current.value);\n        if (!videoKey) {\n          urlRef.current.style.border = \"2px solid red\";\n          setTimeout(() => {\n            urlRef.current.style.border = \"1px solid #ccc\";\n          }, 2000);\n          console.log(\"Invalid YouTube link. Please enter a valid URL.\");\n          alert(\"Invalid YouTube link. Please enter a valid URL.\");\n          return false;\n        }\n      }\n      const isNameValid = validateField(nameRef, \"Title Name\");\n      const isSiteValid = validateField(siteRef, \"Site Type\");\n      const isVideoTypeValid = validateField(videoTypeRef, \"Video Type\");\n      return isUrlValid && isNameValid && isSiteValid && isVideoTypeValid;\n    };\n    if (!validateFields()) {\n      return; // This is for stop if any valid is null\n    } else {\n      const isConfirm = window.confirm(\"Are you sure you want to update the Video?\");\n      if (isConfirm) {\n        const data = {\n          ...(videokey ? {\n            url: `https://www.youtube.com/embed/${videokey}`,\n            videoKey: videokey\n          } : {\n            url: selectedvideo.url,\n            videoKey: selectedvideo.videoKey\n          }),\n          name: selectedvideo.name,\n          site: selectedvideo.site,\n          videoType: selectedvideo.videoType,\n          official: selectedvideo.official\n        };\n        try {\n          const response = await axios({\n            method: \"patch\",\n            url: `/videos/${id}`,\n            data: data,\n            headers: {\n              Accept: \"application/json\",\n              Authorization: `Bearer ${auth.accessToken}`\n            }\n          });\n          alert(\"updated Successfully!\");\n          console.log(response.message);\n          handleclear();\n          getAll(movieId);\n        } catch (error) {\n          var _error$response2;\n          console.error(\"Error updating cast:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Video-View-Box\",\n      children: videos !== undefined && videos.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-display-videos\",\n        children: videos.map(items => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-video\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"delete-button\",\n              onClick: () => handledelete(items.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"edit-button\",\n              onClick: () => videoget(items.id),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n            className: \"video-style\",\n            width: \"100%\",\n            height: \"50%\",\n            src: `https://www.youtube.com/embed/${items.videoKey}`,\n            frameBorder: \"0\",\n            allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n            allowFullScreen: true,\n            title: \"display-video-view\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-video\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: items.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this)]\n        }, items.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-videos\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Videos not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Video-Search-Box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"parent-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-detail-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-container-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"video-frame-container\",\n              children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n                title: \"display-video-save\",\n                className: \"video-frame\",\n                src: selectedvideo.url ? selectedvideo.url : videokey ? `https://www.youtube.com/embed/${videokey}` : \"https://www.youtube.com/embed/invalid\",\n                frameBorder: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-info-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label-video\",\n              children: \"Video Url:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"url\",\n              className: \"video-url\",\n              value: videoURL || selectedvideo.url,\n              onChange: e => {\n                const value = e.target.value;\n                setVideoURL(value);\n                const videoKey = getYouTubeVideoID(value);\n                if (videoKey) {\n                  setSelectedVideo(prev => ({\n                    ...prev,\n                    url: `https://www.youtube.com/embed/${videoKey}`\n                  }));\n                } else {\n                  setSelectedVideo(prev => ({\n                    ...prev,\n                    url: \"\"\n                  }));\n                }\n              },\n              ref: urlRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label-video\",\n              children: \"Name Video:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"video-name\",\n              maxLength: 100,\n              value: selectedvideo.name || \"\",\n              onChange: e => setSelectedVideo({\n                ...selectedvideo,\n                name: e.target.value\n              }),\n              ref: nameRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label-video\",\n              children: \"Site:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"site-name\",\n              value: selectedvideo.site || \"\",\n              maxLength: 20,\n              onChange: e => setSelectedVideo({\n                ...selectedvideo,\n                site: e.target.value\n              }),\n              ref: siteRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label-video\",\n              children: \"Video Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"video-type-name\",\n              maxLength: 20,\n              value: selectedvideo.videoType || \"\",\n              onChange: e => setSelectedVideo({\n                ...selectedvideo,\n                videoType: e.target.value\n              }),\n              ref: videoTypeRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"label-video\",\n              children: \"Official:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"seletor-official\",\n              value: selectedvideo && selectedvideo.official !== undefined ? selectedvideo.official ? \"Yes\" : \"No\" : \"\",\n              onChange: e => setSelectedVideo({\n                ...selectedvideo,\n                official: e.target.value === \"Yes\"\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select an option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Yes\",\n                children: \"Yes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"No\",\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"save-edit-back-btn\",\n          children: [!videoId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-save-btn\",\n              type: \"button\",\n              onClick: handlesave,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-save-btn\",\n              type: \"button\",\n              onClick: () => videoUpdate(videoId),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"clear-btn\",\n            type: \"button\",\n            onClick: handleclear,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoForm, \"kc3E4I3wBEc43Vyct7uzOUiWJE8=\", false, function () {\n  return [useParams];\n});\n_c = VideoForm;\nexport default VideoForm;\nvar _c;\n$RefreshReg$(_c, \"VideoForm\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useCallback","useRef","AuthContext","axios","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoForm","_s","auth","videoId","setVideoId","undefined","videoURL","setVideoURL","videos","setVideos","videokey","setVideoKey","selectedvideo","setSelectedVideo","urlRef","nameRef","siteRef","videoTypeRef","movieId","getAll","method","url","headers","Accept","Authorization","accessToken","then","response","data","catch","error","console","getYouTubeVideoID","log","regex","match","validateField","fieldRef","fieldName","current","value","trim","style","border","setTimeout","handlesave","dataphoto","userId","user","videoKey","name","site","videoType","official","table","validateFields","isUrlValid","alert","isNameValid","isSiteValid","isVideoTypeValid","id","_error$response","message","handledelete","isConfirm","window","confirm","err","videoget","handleclear","videoUpdate","_error$response2","className","children","length","map","items","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","width","height","src","frameBorder","allow","allowFullScreen","title","onChange","e","target","prev","ref","maxLength","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Videos/Videos.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext, useCallback, useRef } from \"react\";\r\nimport { AuthContext } from '../../../../../utils/context/AuthToken';\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./Videos.css\";\r\n\r\nfunction VideoForm() {\r\n  const { auth } = useContext(AuthContext);\r\n  const [videoId, setVideoId] = useState(undefined);\r\n  const [videoURL, setVideoURL] = useState(\"\");\r\n  const [videos, setVideos] = useState([]);\r\n  const [videokey, setVideoKey] = useState({});\r\n  const [selectedvideo, setSelectedVideo] = useState({});\r\n  const urlRef = useRef();\r\n  const nameRef = useRef();\r\n  const siteRef = useRef();\r\n  const videoTypeRef = useRef();\r\n  let { movieId } = useParams();\r\n\r\n  const getAll = useCallback(\r\n    (movieId) => {\r\n      axios({\r\n        method: \"get\",\r\n        url: `/movies/${movieId}`,\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          Authorization: `Bearer ${auth.accessToken}`,\r\n        },\r\n      })\r\n        .then((response) => {\r\n          setVideos(response.data.videos);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching Videos:\", error.response.data);\r\n        });\r\n    },\r\n    [auth.accessToken]\r\n  );\r\n\r\n  const getYouTubeVideoID = (url) => {\r\n    if (!url || typeof url !== \"string\") {\r\n      console.log(\"Invalid URL:\", url);\r\n      setVideoKey(\"\");\r\n      return null;\r\n    }\r\n\r\n    const regex =\r\n      /(?:https?:\\/\\/(?:www\\.)?youtube\\.com\\/(?:watch\\?v=|embed\\/)([\\w-]+))/i;\r\n    const match = url.match(regex);\r\n    console.log(\"URL:\", url);\r\n    console.log(\"Match:\", match);\r\n\r\n    if (match && match[1]) {\r\n      setVideoKey(match[1]);\r\n      return match[1];\r\n    } else {\r\n      setVideoKey(\"\");\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const validateField = (fieldRef, fieldName) => {\r\n    if (!fieldRef.current) {\r\n      console.error(`Field ${fieldName} ref is not assigned.`);\r\n      return false;\r\n    }\r\n\r\n    if (!fieldRef.current.value.trim()) {\r\n      fieldRef.current.style.border = \"2px solid red\";\r\n      setTimeout(() => {\r\n        fieldRef.current.style.border = \"1px solid #ccc\";\r\n      }, 2000);\r\n      console.log(`${fieldName} cannot be empty.`);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handlesave = async () => {\r\n    const dataphoto = {\r\n      userId: auth.user.userId,\r\n      movieId: movieId,\r\n      url: `https://www.youtube.com/embed/${videokey}`,\r\n      videoKey: videokey,\r\n      name: selectedvideo.name,\r\n      site: selectedvideo.site,\r\n      videoType: selectedvideo.videoType,\r\n      official: selectedvideo.official,\r\n    };\r\n    console.table(dataphoto);\r\n    const validateFields = () => {\r\n      const isUrlValid = validateField(urlRef, \"YouTube Link\");\r\n\r\n      if (isUrlValid) {\r\n        const videoKey = getYouTubeVideoID(urlRef.current.value);\r\n        if (!videoKey) {\r\n          urlRef.current.style.border = \"2px solid red\";\r\n          setTimeout(() => {\r\n            urlRef.current.style.border = \"1px solid #ccc\";\r\n          }, 2000);\r\n          console.log(\"Invalid YouTube link. Please enter a valid URL.\");\r\n          alert(\"Invalid YouTube link. Please enter a valid URL.\");\r\n          return false;\r\n        }\r\n      }\r\n\r\n      const isNameValid = validateField(nameRef, \"Title Name\");\r\n      const isSiteValid = validateField(siteRef, \"Site Type\");\r\n      const isVideoTypeValid = validateField(videoTypeRef, \"Video Type\");\r\n\r\n      return isUrlValid && isNameValid && isSiteValid && isVideoTypeValid;\r\n    };\r\n    if (!validateFields()) {\r\n      return; // This is for stop if any valid is null\r\n    } else {\r\n      try {\r\n        const dataphoto = {\r\n          userId: auth.user.id,\r\n          movieId: movieId,\r\n          url: `https://www.youtube.com/embed/${videokey}`,\r\n          videoKey: videokey,\r\n          name: selectedvideo.name,\r\n          site: selectedvideo.site,\r\n          videoType: selectedvideo.videoType,\r\n          official: selectedvideo.official,\r\n        };\r\n        await axios({\r\n          method: \"POST\",\r\n          url: \"/admin/videos\",\r\n          data: dataphoto,\r\n          headers: {\r\n            Authorization: `Bearer ${auth.accessToken}`,\r\n          },\r\n        });\r\n        alert(\"Added Success\");\r\n        getAll(movieId);\r\n        setSelectedVideo([]);\r\n        setVideoURL(\"\");\r\n        setVideoKey(\"\");\r\n        getYouTubeVideoID(null);\r\n        urlRef.current.value = \"\";\r\n      } catch (error) {\r\n        console.log(\r\n          \"Error Saving Video\",\r\n          error.response?.data || error.message\r\n        );\r\n        alert(`Incorrect Link or Error: ${error.message}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAll(movieId);\r\n  }, [movieId, getAll]);\r\n\r\n  const handledelete = async (id) => {\r\n    const isConfirm = window.confirm(\r\n      \"Are you sure you want to delete this Video?\"\r\n    );\r\n\r\n    if (isConfirm) {\r\n      try {\r\n        const response = await axios({\r\n          method: \"delete\",\r\n          url: `/videos/${id}`,\r\n          headers: {\r\n            Authorization: `Bearer ${auth.accessToken}`,\r\n          },\r\n        });\r\n        alert(\"Delete successful!\");\r\n        console.log(response);\r\n        getAll(movieId);\r\n      } catch (err) {\r\n        console.error(\"Error deleting video:\", err.message);\r\n        alert(\"An error occurred while deleting the video.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const videoget = async (id) => {\r\n    axios({\r\n      method: \"get\",\r\n      url: `/videos/${id}`,\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        Authorization: `Bearer ${auth.accessToken}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setSelectedVideo(response.data);\r\n        setVideoId(response.data.id);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleclear = useCallback(() => {\r\n    setSelectedVideo([]);\r\n    setVideoId(undefined);\r\n    setVideoKey(\"\");\r\n    setVideoURL(\"\");\r\n    urlRef.current.value = \"\";\r\n  }, [setSelectedVideo, setVideoId, setVideoKey, setVideoURL]);\r\n\r\n  const videoUpdate = async (id) => {\r\n    const validateFields = () => {\r\n      const isUrlValid = validateField(urlRef, \"YouTube Link\");\r\n\r\n      if (isUrlValid) {\r\n        const videoKey = getYouTubeVideoID(urlRef.current.value);\r\n        if (!videoKey) {\r\n          urlRef.current.style.border = \"2px solid red\";\r\n          setTimeout(() => {\r\n            urlRef.current.style.border = \"1px solid #ccc\";\r\n          }, 2000);\r\n          console.log(\"Invalid YouTube link. Please enter a valid URL.\");\r\n          alert(\"Invalid YouTube link. Please enter a valid URL.\");\r\n          return false;\r\n        }\r\n      }\r\n\r\n      const isNameValid = validateField(nameRef, \"Title Name\");\r\n      const isSiteValid = validateField(siteRef, \"Site Type\");\r\n      const isVideoTypeValid = validateField(videoTypeRef, \"Video Type\");\r\n\r\n      return isUrlValid && isNameValid && isSiteValid && isVideoTypeValid;\r\n    };\r\n\r\n    if (!validateFields()) {\r\n      return; // This is for stop if any valid is null\r\n    } else {\r\n      const isConfirm = window.confirm(\r\n        \"Are you sure you want to update the Video?\"\r\n      );\r\n      if (isConfirm) {\r\n        const data = {\r\n          ...(videokey\r\n            ? {\r\n                url: `https://www.youtube.com/embed/${videokey}`,\r\n                videoKey: videokey,\r\n              }\r\n            : {\r\n                url: selectedvideo.url,\r\n                videoKey: selectedvideo.videoKey,\r\n              }),\r\n          name: selectedvideo.name,\r\n          site: selectedvideo.site,\r\n          videoType: selectedvideo.videoType,\r\n          official: selectedvideo.official,\r\n        };\r\n        try {\r\n          const response = await axios({\r\n            method: \"patch\",\r\n            url: `/videos/${id}`,\r\n            data: data,\r\n            headers: {\r\n              Accept: \"application/json\",\r\n              Authorization: `Bearer ${auth.accessToken}`,\r\n            },\r\n          });\r\n          alert(\"updated Successfully!\");\r\n          console.log(response.message);\r\n          handleclear();\r\n          getAll(movieId);\r\n        } catch (error) {\r\n          console.error(\r\n            \"Error updating cast:\",\r\n            error.response?.data || error.message\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"video-box\">\r\n      <div className=\"Video-View-Box\">\r\n        {videos !== undefined && videos.length > 0 ? (\r\n          <div className=\"card-display-videos\">\r\n            {videos.map((items) => (\r\n              <div key={items.id} className=\"card-video\">\r\n                <div className=\"buttons-group\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"delete-button\"\r\n                    onClick={() => handledelete(items.id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"edit-button\"\r\n                    onClick={() => videoget(items.id)}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                </div>\r\n                <iframe\r\n                  className=\"video-style\"\r\n                  width=\"100%\"\r\n                  height=\"50%\"\r\n                  src={`https://www.youtube.com/embed/${items.videoKey}`}\r\n                  frameBorder=\"0\"\r\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                  allowFullScreen\r\n                  title=\"display-video-view\"\r\n                ></iframe>\r\n                <div className=\"container-video\">\r\n                  <p>{items.name}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"no-videos\">\r\n            <h3>Videos not Found</h3>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"Video-Search-Box\">\r\n        <div className=\"parent-container\">\r\n          <div className=\"video-detail-box\">\r\n            <div className=\"video-container-center\">\r\n              <div className=\"video-frame-container\">\r\n                <iframe\r\n                  title=\"display-video-save\"\r\n                  className=\"video-frame\"\r\n                  src={\r\n                    selectedvideo.url\r\n                      ? selectedvideo.url\r\n                      : videokey\r\n                      ? `https://www.youtube.com/embed/${videokey}`\r\n                      : \"https://www.youtube.com/embed/invalid\"\r\n                  }\r\n                  frameBorder=\"0\"\r\n                ></iframe>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"video-info-text\">\r\n            <div className=\"input-group\">\r\n              <label className=\"label-video\">Video Url:</label>\r\n              <input\r\n                type=\"url\"\r\n                className=\"video-url\"\r\n                value={videoURL || selectedvideo.url}\r\n                onChange={(e) => {\r\n                  const value = e.target.value;\r\n                  setVideoURL(value);\r\n                  const videoKey = getYouTubeVideoID(value);\r\n                  if (videoKey) {\r\n                    setSelectedVideo((prev) => ({\r\n                      ...prev,\r\n                      url: `https://www.youtube.com/embed/${videoKey}`,\r\n                    }));\r\n                  } else {\r\n                    setSelectedVideo((prev) => ({ ...prev, url: \"\" }));\r\n                  }\r\n                }}\r\n                ref={urlRef}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label className=\"label-video\">Name Video:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"video-name\"\r\n                maxLength={100}\r\n                value={selectedvideo.name || \"\"}\r\n                onChange={(e) =>\r\n                  setSelectedVideo({ ...selectedvideo, name: e.target.value })\r\n                }\r\n                ref={nameRef}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label className=\"label-video\">Site:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"site-name\"\r\n                value={selectedvideo.site || \"\"}\r\n                maxLength={20}\r\n                onChange={(e) =>\r\n                  setSelectedVideo({ ...selectedvideo, site: e.target.value })\r\n                }\r\n                ref={siteRef}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label className=\"label-video\">Video Type:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"video-type-name\"\r\n                maxLength={20}\r\n                value={selectedvideo.videoType || \"\"}\r\n                onChange={(e) =>\r\n                  setSelectedVideo({\r\n                    ...selectedvideo,\r\n                    videoType: e.target.value,\r\n                  })\r\n                }\r\n                ref={videoTypeRef}\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label className=\"label-video\">Official:</label>\r\n              <select\r\n                className=\"seletor-official\"\r\n                value={\r\n                  selectedvideo && selectedvideo.official !== undefined\r\n                    ? selectedvideo.official\r\n                      ? \"Yes\"\r\n                      : \"No\"\r\n                    : \"\"\r\n                }\r\n                onChange={(e) =>\r\n                  setSelectedVideo({\r\n                    ...selectedvideo,\r\n                    official: e.target.value === \"Yes\",\r\n                  })\r\n                }\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select an option\r\n                </option>\r\n                <option value=\"Yes\">Yes</option>\r\n                <option value=\"No\">No</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"save-edit-back-btn\">\r\n            {!videoId ? (\r\n              <>\r\n                <button\r\n                  className=\"edit-save-btn\"\r\n                  type=\"button\"\r\n                  onClick={handlesave}\r\n                >\r\n                  Save\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <button\r\n                  className=\"edit-save-btn\"\r\n                  type=\"button\"\r\n                  onClick={() => videoUpdate(videoId)}\r\n                >\r\n                  Update\r\n                </button>\r\n              </>\r\n            )}\r\n\r\n            <button className=\"clear-btn\" type=\"button\" onClick={handleclear}>\r\n              Clear\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}