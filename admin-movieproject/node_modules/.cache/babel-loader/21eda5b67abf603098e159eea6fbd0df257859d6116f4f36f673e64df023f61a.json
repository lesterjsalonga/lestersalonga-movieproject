{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\CastandCrew\\\\CastandCrew.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CastAndCrew = ({\n  movieId\n}) => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [searchedArtistList, setSearchedArtistList] = useState([]);\n  const [selectedArtist, setSelectedArtist] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [notFound, setNotFound] = useState(false);\n  const API_BASE_URL = 'https://api.themoviedb.org/3';\n  const TMDB_HEADERS = {\n    Accept: 'application/json',\n    Authorization: 'Bearer YOUR_TMDB_API_TOKEN'\n  };\n  const handleSearchArtists = useCallback(async () => {\n    setIsLoading(true);\n    setNotFound(false);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/search/person?query=${query}`, {\n        headers: TMDB_HEADERS\n      });\n      if (response.data.results.length === 0) {\n        setNotFound(true);\n        setSearchedArtistList([]);\n      } else {\n        setSearchedArtistList(response.data.results);\n        setNotFound(false);\n      }\n    } catch (err) {\n      console.error('Error fetching artists:', err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [query]);\n  const handleSelectArtist = artist => {\n    setSelectedArtist(artist);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search for Cast and Crew\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Enter artist name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearchArtists,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this), notFound && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No cast/crew found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 20\n    }, this), searchedArtistList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: searchedArtistList.map(artist => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleSelectArtist(artist),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)\n      }, artist.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), selectedArtist && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Artist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedArtist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedArtist.character\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://image.tmdb.org/t/p/w200/${selectedArtist.profile_path}`,\n        alt: selectedArtist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(CastAndCrew, \"A7g3aGrcFTd5Z6xGTFuCAS2J1Z4=\");\n_c = CastAndCrew;\nexport default CastAndCrew;\nvar _c;\n$RefreshReg$(_c, \"CastAndCrew\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","jsxDEV","_jsxDEV","CastAndCrew","movieId","_s","query","setQuery","searchedArtistList","setSearchedArtistList","selectedArtist","setSelectedArtist","isLoading","setIsLoading","notFound","setNotFound","API_BASE_URL","TMDB_HEADERS","Accept","Authorization","handleSearchArtists","response","get","headers","data","results","length","err","console","error","handleSelectArtist","artist","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","name","id","character","src","profile_path","alt","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/CastandCrew/CastandCrew.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CastAndCrew = ({ movieId }) => {\r\n  const [query, setQuery] = useState('');\r\n  const [searchedArtistList, setSearchedArtistList] = useState([]);\r\n  const [selectedArtist, setSelectedArtist] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [notFound, setNotFound] = useState(false);\r\n\r\n  const API_BASE_URL = 'https://api.themoviedb.org/3';\r\n  const TMDB_HEADERS = {\r\n    Accept: 'application/json',\r\n    Authorization: 'Bearer YOUR_TMDB_API_TOKEN',\r\n  };\r\n\r\n  const handleSearchArtists = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setNotFound(false);\r\n    try {\r\n      const response = await axios.get(\r\n        `${API_BASE_URL}/search/person?query=${query}`,\r\n        { headers: TMDB_HEADERS }\r\n      );\r\n      if (response.data.results.length === 0) {\r\n        setNotFound(true);\r\n        setSearchedArtistList([]);\r\n      } else {\r\n        setSearchedArtistList(response.data.results);\r\n        setNotFound(false);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching artists:', err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [query]);\r\n\r\n  const handleSelectArtist = (artist) => {\r\n    setSelectedArtist(artist);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Search for Cast and Crew</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n        placeholder=\"Enter artist name\"\r\n      />\r\n      <button onClick={handleSearchArtists}>Search</button>\r\n\r\n      {isLoading && <p>Loading...</p>}\r\n      {notFound && <p>No cast/crew found.</p>}\r\n\r\n      {searchedArtistList.length > 0 && (\r\n        <div>\r\n          {searchedArtistList.map((artist) => (\r\n            <div key={artist.id} onClick={() => handleSelectArtist(artist)}>\r\n              <p>{artist.name}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {selectedArtist && (\r\n        <div>\r\n          <h3>Selected Artist</h3>\r\n          <p>{selectedArtist.name}</p>\r\n          <p>{selectedArtist.character}</p>\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w200/${selectedArtist.profile_path}`}\r\n            alt={selectedArtist.name}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CastAndCrew;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}