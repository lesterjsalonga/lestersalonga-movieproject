{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lester Salonga\\\\Desktop\\\\movieproject\\\\admin-movieproject\\\\src\\\\pages\\\\Main\\\\Movie\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useParams, useNavigate, Outlet } from 'react-router-dom';\nimport './Form.css';\nimport { AuthContext } from '../../../../utils/context/AuthToken';\nimport CastandCrew from '../Form/CastandCrew/CastandCrew';\nimport Photos from '../Form/CastandCrew/CastandCrew';\nimport Videos from '../Form/CastandCrew/CastandCrew';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [searchedMovieList, setSearchedMovieList] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(undefined);\n  const [movie, setMovie] = useState(undefined);\n  const [notFound, setNotFound] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('cast'); // Default tab is 'cast'\n  const navigate = useNavigate();\n  let {\n    movieId\n  } = useParams();\n  const API_BASE_URL = 'https://api.themoviedb.org/3';\n  const TMDB_HEADERS = {\n    Accept: 'application/json',\n    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NTAxODgxZmE3YWRhZTQzYWY0MGFmNDA1YzFjODliNCIsIm5iZiI6MTczMjU5NTU3OS4yMjMwMTI3LCJzdWIiOiI2NzEyZmFiYTI1YzcwYjhiMWQ2N2Y4YjQiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.oJ-YA-BPl-l8XBcp_VYDJDTO66e31OMKA-igarucAqE'\n  };\n  const generateImageUrl = path => {\n    return path ? `https://image.tmdb.org/t/p/original/${path}` : '';\n  };\n  const handleSearch = useCallback(async (page = 1) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`, {\n        headers: TMDB_HEADERS\n      });\n      if (response.data.results.length === 0) {\n        setNotFound(true);\n        setSearchedMovieList([]);\n        setTotalPages(0);\n      } else {\n        setSearchedMovieList(response.data.results);\n        setTotalPages(response.data.total_pages);\n        setNotFound(false);\n      }\n    } catch (err) {\n      setError('Error fetching movies. Please try again later.');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [query]);\n  const handleSelectMovie = movie => {\n    setSelectedMovie(movie);\n  };\n  const handleSave = async () => {\n    const accessToken = localStorage.getItem('accessToken');\n    if (!selectedMovie) {\n      alert('Please search and select a movie.');\n      return;\n    }\n    const requiredFields = [{\n      name: 'backdrop_path',\n      value: selectedMovie.backdrop_path || ''\n    }, {\n      name: 'title',\n      value: selectedMovie.title\n    }, {\n      name: 'overview',\n      value: selectedMovie.overview\n    }, {\n      name: 'popularity',\n      value: selectedMovie.popularity\n    }, {\n      name: 'release_date',\n      value: selectedMovie.release_date\n    }, {\n      name: 'vote_average',\n      value: selectedMovie.vote_average\n    }];\n    const missingFields = requiredFields.filter(field => !field.value);\n    if (missingFields.length > 0) {\n      setError(`Missing required fields: ${missingFields.map(field => field.name).join(', ')}`);\n      return;\n    }\n    const backdropPath = selectedMovie.backdrop_path ? generateImageUrl(selectedMovie.backdrop_path) : '';\n    if (!backdropPath && !selectedMovie.backdrop_path) {\n      setError('Backdrop image is required.');\n      return;\n    }\n    const data = {\n      tmdbId: selectedMovie.id,\n      title: selectedMovie.title,\n      overview: selectedMovie.overview,\n      popularity: parseFloat(selectedMovie.popularity),\n      releaseDate: selectedMovie.release_date,\n      voteAverage: parseFloat(selectedMovie.vote_average),\n      backdropPath: backdropPath || '',\n      posterPath: generateImageUrl(selectedMovie.poster_path),\n      isFeatured: selectedMovie.isFeatured || false\n    };\n    console.log('Data to be sent:', data);\n    try {\n      if (movieId) {\n        const response = await axios.patch(`/movies/${movieId}`, data, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        console.log('Movie updated response:', response);\n        alert('Movie updated successfully.');\n      } else {\n        const response = await axios.post('/movies', data, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        console.log('Movie created response:', response);\n        alert('Movie created successfully.');\n      }\n      navigate('/main/movies');\n    } catch (err) {\n      setError('Error saving movie. Please try again later.');\n      console.error('Save movie error:', err.response);\n      if (err.response && err.response.data && err.response.data.errors) {\n        console.error('Error details:', err.response.data.errors);\n        setError(`Validation errors: ${err.response.data.errors.map(error => error.message).join(', ')}`);\n      }\n    }\n  };\n  useEffect(() => {\n    if (movieId) {\n      const fetchMovie = async () => {\n        try {\n          const response = await axios.get(`/movies/${movieId}`);\n          setMovie(response.data);\n          setSelectedMovie({\n            id: response.data.tmdbId,\n            title: response.data.title,\n            overview: response.data.overview,\n            popularity: response.data.popularity,\n            poster_path: response.data.posterPath,\n            release_date: response.data.releaseDate,\n            vote_average: response.data.voteAverage,\n            backdrop_path: response.data.backdropPath || ''\n          });\n        } catch (err) {\n          setError('Error fetching movie details. Please try again later.');\n          console.error(err);\n        }\n      };\n      fetchMovie();\n    }\n  }, [movieId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moviecontainer mt-5 overflow-auto movieform-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movieId ? 'Edit Movie' : 'Create Movie'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-danger text-center\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }, this), !movieId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Search Movie:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"Enter movie title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSearch(1),\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searched-movie\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }, this) : notFound ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No movies found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }, this) : searchedMovieList.map(movie => /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => handleSelectMovie(movie),\n          children: movie.title\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: currentPage === 1,\n          onClick: () => {\n            setCurrentPage(prev => prev - 1);\n            handleSearch(currentPage - 1);\n          },\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Page \", currentPage, \" of \", totalPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: currentPage === totalPages,\n          onClick: () => {\n            setCurrentPage(prev => prev + 1);\n            handleSearch(currentPage + 1);\n          },\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-details\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [(selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.poster_path) && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: generateImageUrl(selectedMovie.poster_path),\n          alt: selectedMovie.title,\n          className: \"poster-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.title) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.overview) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            overview: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Popularity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.popularity) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            popularity: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Release Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.release_date) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            release_date: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Vote Average\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: (selectedMovie === null || selectedMovie === void 0 ? void 0 : selectedMovie.vote_average) || '',\n          onChange: e => setSelectedMovie({\n            ...selectedMovie,\n            vote_average: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleSave,\n          children: movieId ? 'Update' : 'Save'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), movieId && selectedMovie && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"tabs\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: activeTab === 'cast' ? 'active' : '',\n            onClick: () => setActiveTab('cast'),\n            children: \"Cast & Crew\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: activeTab === 'videos' ? 'active' : '',\n            onClick: () => setActiveTab('videos'),\n            children: \"Videos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: activeTab === 'photos' ? 'active' : '',\n            onClick: () => setActiveTab('photos'),\n            children: \"Photos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), activeTab === 'cast' && /*#__PURE__*/_jsxDEV(CastandCrew, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 36\n      }, this), activeTab === 'videos' && /*#__PURE__*/_jsxDEV(Videos, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 38\n      }, this), activeTab === 'photos' && /*#__PURE__*/_jsxDEV(Photos, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"gugpRwOruaNZuMm+mErjDjDsvhs=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["axios","useCallback","useEffect","useState","useParams","useNavigate","Outlet","AuthContext","CastandCrew","Photos","Videos","jsxDEV","_jsxDEV","Fragment","_Fragment","Form","_s","query","setQuery","searchedMovieList","setSearchedMovieList","selectedMovie","setSelectedMovie","undefined","movie","setMovie","notFound","setNotFound","currentPage","setCurrentPage","totalPages","setTotalPages","isLoading","setIsLoading","error","setError","activeTab","setActiveTab","navigate","movieId","API_BASE_URL","TMDB_HEADERS","Accept","Authorization","generateImageUrl","path","handleSearch","page","response","get","headers","data","results","length","total_pages","err","console","handleSelectMovie","handleSave","accessToken","localStorage","getItem","alert","requiredFields","name","value","backdrop_path","title","overview","popularity","release_date","vote_average","missingFields","filter","field","map","join","backdropPath","tmdbId","id","parseFloat","releaseDate","voteAverage","posterPath","poster_path","isFeatured","log","patch","post","errors","message","fetchMovie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","onClick","disabled","prev","src","alt","rows","_c","$RefreshReg$"],"sources":["C:/Users/Lester Salonga/Desktop/movieproject/admin-movieproject/src/pages/Main/Movie/Form/Form.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useParams, useNavigate, Outlet } from 'react-router-dom';\r\nimport './Form.css';\r\nimport { AuthContext } from '../../../../utils/context/AuthToken';\r\nimport CastandCrew from '../Form/CastandCrew/CastandCrew';\r\nimport Photos from '../Form/CastandCrew/CastandCrew';\r\nimport Videos from '../Form/CastandCrew/CastandCrew';\r\n\r\nconst Form = () => {\r\n  const [query, setQuery] = useState('');\r\n  const [searchedMovieList, setSearchedMovieList] = useState([]);\r\n  const [selectedMovie, setSelectedMovie] = useState(undefined);\r\n  const [movie, setMovie] = useState(undefined);\r\n  const [notFound, setNotFound] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [activeTab, setActiveTab] = useState('cast'); // Default tab is 'cast'\r\n  const navigate = useNavigate();\r\n  let { movieId } = useParams();\r\n\r\n  const API_BASE_URL = 'https://api.themoviedb.org/3';\r\n  const TMDB_HEADERS = {\r\n    Accept: 'application/json',\r\n    Authorization:\r\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NTAxODgxZmE3YWRhZTQzYWY0MGFmNDA1YzFjODliNCIsIm5iZiI6MTczMjU5NTU3OS4yMjMwMTI3LCJzdWIiOiI2NzEyZmFiYTI1YzcwYjhiMWQ2N2Y4YjQiLCJzY29wZXMiOlsiYXBpX3JlYWQiXSwidmVyc2lvbiI6MX0.oJ-YA-BPl-l8XBcp_VYDJDTO66e31OMKA-igarucAqE',\r\n  };\r\n\r\n  const generateImageUrl = (path) => {\r\n    return path ? `https://image.tmdb.org/t/p/original/${path}` : '';\r\n  };\r\n\r\n  const handleSearch = useCallback(async (page = 1) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(\r\n        `${API_BASE_URL}/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}`,\r\n        { headers: TMDB_HEADERS }\r\n      );\r\n\r\n      if (response.data.results.length === 0) {\r\n        setNotFound(true);\r\n        setSearchedMovieList([]);\r\n        setTotalPages(0);\r\n      } else {\r\n        setSearchedMovieList(response.data.results);\r\n        setTotalPages(response.data.total_pages);\r\n        setNotFound(false);\r\n      }\r\n    } catch (err) {\r\n      setError('Error fetching movies. Please try again later.');\r\n      console.error(err);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [query]);\r\n\r\n  const handleSelectMovie = (movie) => {\r\n    setSelectedMovie(movie);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    if (!selectedMovie) {\r\n      alert('Please search and select a movie.');\r\n      return;\r\n    }\r\n\r\n    const requiredFields = [\r\n      { name: 'backdrop_path', value: selectedMovie.backdrop_path || '' }, \r\n      { name: 'title', value: selectedMovie.title },\r\n      { name: 'overview', value: selectedMovie.overview },\r\n      { name: 'popularity', value: selectedMovie.popularity },\r\n      { name: 'release_date', value: selectedMovie.release_date },\r\n      { name: 'vote_average', value: selectedMovie.vote_average },\r\n    ];\r\n\r\n    const missingFields = requiredFields.filter(field => !field.value);\r\n\r\n    if (missingFields.length > 0) {\r\n      setError(`Missing required fields: ${missingFields.map(field => field.name).join(', ')}`);\r\n      return;\r\n    }\r\n\r\n    const backdropPath = selectedMovie.backdrop_path\r\n      ? generateImageUrl(selectedMovie.backdrop_path)\r\n      : ''; \r\n\r\n    if (!backdropPath && !selectedMovie.backdrop_path) {\r\n      setError('Backdrop image is required.');\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      tmdbId: selectedMovie.id,\r\n      title: selectedMovie.title,\r\n      overview: selectedMovie.overview,\r\n      popularity: parseFloat(selectedMovie.popularity), \r\n      releaseDate: selectedMovie.release_date, \r\n      voteAverage: parseFloat(selectedMovie.vote_average), \r\n      backdropPath: backdropPath || '', \r\n      posterPath: generateImageUrl(selectedMovie.poster_path),\r\n      isFeatured: selectedMovie.isFeatured || false, \r\n    };\r\n\r\n    console.log('Data to be sent:', data); \r\n\r\n    try {\r\n      if (movieId) {\r\n        const response = await axios.patch(`/movies/${movieId}`, data, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        });\r\n        console.log('Movie updated response:', response);\r\n        alert('Movie updated successfully.');\r\n      } else {\r\n        const response = await axios.post('/movies', data, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        });\r\n        console.log('Movie created response:', response);\r\n        alert('Movie created successfully.');\r\n      }\r\n      navigate('/main/movies');\r\n    } catch (err) {\r\n      setError('Error saving movie. Please try again later.');\r\n      console.error('Save movie error:', err.response);\r\n      if (err.response && err.response.data && err.response.data.errors) {\r\n        console.error('Error details:', err.response.data.errors);\r\n        setError(`Validation errors: ${err.response.data.errors.map(error => error.message).join(', ')}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (movieId) {\r\n      const fetchMovie = async () => {\r\n        try {\r\n          const response = await axios.get(`/movies/${movieId}`);\r\n          setMovie(response.data);\r\n          setSelectedMovie({\r\n            id: response.data.tmdbId,\r\n            title: response.data.title,\r\n            overview: response.data.overview,\r\n            popularity: response.data.popularity,\r\n            poster_path: response.data.posterPath,\r\n            release_date: response.data.releaseDate,\r\n            vote_average: response.data.voteAverage,\r\n            backdrop_path: response.data.backdropPath || '', \r\n          });\r\n        } catch (err) {\r\n          setError('Error fetching movie details. Please try again later.');\r\n          console.error(err);\r\n        }\r\n      };\r\n\r\n      fetchMovie();\r\n    }\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <div className=\"moviecontainer mt-5 overflow-auto movieform-container\">\r\n      <h1>{movieId ? 'Edit Movie' : 'Create Movie'}</h1>\r\n\r\n      {error && <p className=\"text-danger text-center\">{error}</p>}\r\n\r\n      {!movieId && (\r\n        <>\r\n          <div className=\"search-container\">\r\n            <label>Search Movie:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              placeholder=\"Enter movie title\"\r\n            />\r\n            <button onClick={() => handleSearch(1)}>Search</button>\r\n          </div>\r\n\r\n          <div className=\"searched-movie\">\r\n            {isLoading ? (\r\n              <p>Loading...</p>\r\n            ) : notFound ? (\r\n              <p>No movies found.</p>\r\n            ) : (\r\n              searchedMovieList.map((movie) => (\r\n                <p key={movie.id} onClick={() => handleSelectMovie(movie)}>\r\n                  {movie.title}\r\n                </p>\r\n              ))\r\n            )}\r\n          </div>\r\n\r\n          {totalPages > 1 && (\r\n            <div className=\"pagination\">\r\n              <button\r\n                disabled={currentPage === 1}\r\n                onClick={() => {\r\n                  setCurrentPage((prev) => prev - 1);\r\n                  handleSearch(currentPage - 1);\r\n                }}\r\n              >\r\n                Previous\r\n              </button>\r\n              <span>\r\n                Page {currentPage} of {totalPages}\r\n              </span>\r\n              <button\r\n                disabled={currentPage === totalPages}\r\n                onClick={() => {\r\n                  setCurrentPage((prev) => prev + 1);\r\n                  handleSearch(currentPage + 1);\r\n                }}\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      <div className=\"movie-details\">\r\n        <form>\r\n          {selectedMovie?.poster_path && (\r\n            <img\r\n              src={generateImageUrl(selectedMovie.poster_path)}\r\n              alt={selectedMovie.title}\r\n              className=\"poster-image\"\r\n            />\r\n          )}\r\n\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={selectedMovie?.title || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, title: e.target.value })}\r\n          />\r\n\r\n          <label>Overview</label>\r\n          <textarea\r\n            rows=\"5\"\r\n            value={selectedMovie?.overview || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, overview: e.target.value })}\r\n          ></textarea>\r\n\r\n          <label>Popularity</label>\r\n          <input\r\n            type=\"number\"\r\n            value={selectedMovie?.popularity || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, popularity: e.target.value })}\r\n          />\r\n\r\n          <label>Release Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={selectedMovie?.release_date || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, release_date: e.target.value })}\r\n          />\r\n\r\n          <label>Vote Average</label>\r\n          <input\r\n            type=\"number\"\r\n            value={selectedMovie?.vote_average || ''}\r\n            onChange={(e) => setSelectedMovie({ ...selectedMovie, vote_average: e.target.value })}\r\n          />\r\n\r\n          <button type=\"button\" onClick={handleSave}>\r\n            {movieId ? 'Update' : 'Save'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      {movieId && selectedMovie && (\r\n        <div>\r\n          <hr />\r\n          <nav>\r\n            <ul className=\"tabs\">\r\n              <li\r\n                className={activeTab === 'cast' ? 'active' : ''}\r\n                onClick={() => setActiveTab('cast')}\r\n              >\r\n                Cast & Crew\r\n              </li>\r\n              <li\r\n                className={activeTab === 'videos' ? 'active' : ''}\r\n                onClick={() => setActiveTab('videos')}\r\n              >\r\n                Videos\r\n              </li>\r\n              <li\r\n                className={activeTab === 'photos' ? 'active' : ''}\r\n                onClick={() => setActiveTab('photos')}\r\n              >\r\n                Photos\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          {/* Conditional Rendering for Tabs */}\r\n          {activeTab === 'cast' && <CastandCrew />}\r\n          {activeTab === 'videos' && <Videos />}\r\n          {activeTab === 'photos' && <Photos />}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}